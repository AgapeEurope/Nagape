'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.17929
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection


<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="ac-UK-new")>  _
Partial Public Class AgapeWebsiteDataContext
	Inherits System.Data.Linq.DataContext
	
	Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()
	
  #Region "Extensibility Method Definitions"
  Partial Private Sub OnCreated()
  End Sub
  Partial Private Sub InsertUser(instance As User)
    End Sub
  Partial Private Sub UpdateUser(instance As User)
    End Sub
  Partial Private Sub DeleteUser(instance As User)
    End Sub
  Partial Private Sub InsertAgape_Staff_Rmb_Status(instance As Agape_Staff_Rmb_Status)
    End Sub
  Partial Private Sub UpdateAgape_Staff_Rmb_Status(instance As Agape_Staff_Rmb_Status)
    End Sub
  Partial Private Sub DeleteAgape_Staff_Rmb_Status(instance As Agape_Staff_Rmb_Status)
    End Sub
  Partial Private Sub InsertAgape_Staff_RmbLine(instance As Agape_Staff_RmbLine)
    End Sub
  Partial Private Sub UpdateAgape_Staff_RmbLine(instance As Agape_Staff_RmbLine)
    End Sub
  Partial Private Sub DeleteAgape_Staff_RmbLine(instance As Agape_Staff_RmbLine)
    End Sub
  Partial Private Sub InsertAgape_Main_EmailTemplate(instance As Agape_Main_EmailTemplate)
    End Sub
  Partial Private Sub UpdateAgape_Main_EmailTemplate(instance As Agape_Main_EmailTemplate)
    End Sub
  Partial Private Sub DeleteAgape_Main_EmailTemplate(instance As Agape_Main_EmailTemplate)
    End Sub
  Partial Private Sub InsertTabModuleSetting(instance As TabModuleSetting)
    End Sub
  Partial Private Sub UpdateTabModuleSetting(instance As TabModuleSetting)
    End Sub
  Partial Private Sub DeleteTabModuleSetting(instance As TabModuleSetting)
    End Sub
  Partial Private Sub InsertAgape_Staff_Rmb(instance As Agape_Staff_Rmb)
    End Sub
  Partial Private Sub UpdateAgape_Staff_Rmb(instance As Agape_Staff_Rmb)
    End Sub
  Partial Private Sub DeleteAgape_Staff_Rmb(instance As Agape_Staff_Rmb)
    End Sub
  Partial Private Sub InsertAP_StaffBroker_Department(instance As AP_StaffBroker_Department)
    End Sub
  Partial Private Sub UpdateAP_StaffBroker_Department(instance As AP_StaffBroker_Department)
    End Sub
  Partial Private Sub DeleteAP_StaffBroker_Department(instance As AP_StaffBroker_Department)
    End Sub
  Partial Private Sub InsertAP_StaffBroker_Staff(instance As AP_StaffBroker_Staff)
    End Sub
  Partial Private Sub UpdateAP_StaffBroker_Staff(instance As AP_StaffBroker_Staff)
    End Sub
  Partial Private Sub DeleteAP_StaffBroker_Staff(instance As AP_StaffBroker_Staff)
    End Sub
  Partial Private Sub InsertAP_StaffBroker_StaffProfile(instance As AP_StaffBroker_StaffProfile)
    End Sub
  Partial Private Sub UpdateAP_StaffBroker_StaffProfile(instance As AP_StaffBroker_StaffProfile)
    End Sub
  Partial Private Sub DeleteAP_StaffBroker_StaffProfile(instance As AP_StaffBroker_StaffProfile)
    End Sub
  Partial Private Sub InsertAP_StaffBroker_StaffPropertyDefinition(instance As AP_StaffBroker_StaffPropertyDefinition)
    End Sub
  Partial Private Sub UpdateAP_StaffBroker_StaffPropertyDefinition(instance As AP_StaffBroker_StaffPropertyDefinition)
    End Sub
  Partial Private Sub DeleteAP_StaffBroker_StaffPropertyDefinition(instance As AP_StaffBroker_StaffPropertyDefinition)
    End Sub
  Partial Private Sub InsertAP_StaffBroker_StaffType(instance As AP_StaffBroker_StaffType)
    End Sub
  Partial Private Sub UpdateAP_StaffBroker_StaffType(instance As AP_StaffBroker_StaffType)
    End Sub
  Partial Private Sub DeleteAP_StaffBroker_StaffType(instance As AP_StaffBroker_StaffType)
    End Sub
  Partial Private Sub InsertAP_StaffBroker_LeaderMeta(instance As AP_StaffBroker_LeaderMeta)
    End Sub
  Partial Private Sub UpdateAP_StaffBroker_LeaderMeta(instance As AP_StaffBroker_LeaderMeta)
    End Sub
  Partial Private Sub DeleteAP_StaffBroker_LeaderMeta(instance As AP_StaffBroker_LeaderMeta)
    End Sub
  Partial Private Sub InsertAgape_Staff_Budget(instance As Agape_Staff_Budget)
    End Sub
  Partial Private Sub UpdateAgape_Staff_Budget(instance As Agape_Staff_Budget)
    End Sub
  Partial Private Sub DeleteAgape_Staff_Budget(instance As Agape_Staff_Budget)
    End Sub
  Partial Private Sub InsertAP_StaffBroker_Template(instance As AP_StaffBroker_Template)
    End Sub
  Partial Private Sub UpdateAP_StaffBroker_Template(instance As AP_StaffBroker_Template)
    End Sub
  Partial Private Sub DeleteAP_StaffBroker_Template(instance As AP_StaffBroker_Template)
    End Sub
  #End Region
	
	Public Sub New()
		MyBase.New(Global.RmbChaseUp.My.MySettings.Default.agapeukConnectionString, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public ReadOnly Property Users() As System.Data.Linq.Table(Of User)
		Get
			Return Me.GetTable(Of User)
		End Get
	End Property
	
	Public ReadOnly Property Agape_Staff_Rmb_Status() As System.Data.Linq.Table(Of Agape_Staff_Rmb_Status)
		Get
			Return Me.GetTable(Of Agape_Staff_Rmb_Status)
		End Get
	End Property
	
	Public ReadOnly Property Agape_Staff_RmbLines() As System.Data.Linq.Table(Of Agape_Staff_RmbLine)
		Get
			Return Me.GetTable(Of Agape_Staff_RmbLine)
		End Get
	End Property
	
	Public ReadOnly Property Agape_Main_EmailTemplates() As System.Data.Linq.Table(Of Agape_Main_EmailTemplate)
		Get
			Return Me.GetTable(Of Agape_Main_EmailTemplate)
		End Get
	End Property
	
	Public ReadOnly Property TabModuleSettings() As System.Data.Linq.Table(Of TabModuleSetting)
		Get
			Return Me.GetTable(Of TabModuleSetting)
		End Get
	End Property
	
	Public ReadOnly Property Agape_Staff_Rmbs() As System.Data.Linq.Table(Of Agape_Staff_Rmb)
		Get
			Return Me.GetTable(Of Agape_Staff_Rmb)
		End Get
	End Property
	
	Public ReadOnly Property AP_StaffBroker_Departments() As System.Data.Linq.Table(Of AP_StaffBroker_Department)
		Get
			Return Me.GetTable(Of AP_StaffBroker_Department)
		End Get
	End Property
	
	Public ReadOnly Property AP_StaffBroker_Staffs() As System.Data.Linq.Table(Of AP_StaffBroker_Staff)
		Get
			Return Me.GetTable(Of AP_StaffBroker_Staff)
		End Get
	End Property
	
	Public ReadOnly Property AP_StaffBroker_StaffProfiles() As System.Data.Linq.Table(Of AP_StaffBroker_StaffProfile)
		Get
			Return Me.GetTable(Of AP_StaffBroker_StaffProfile)
		End Get
	End Property
	
	Public ReadOnly Property AP_StaffBroker_StaffPropertyDefinitions() As System.Data.Linq.Table(Of AP_StaffBroker_StaffPropertyDefinition)
		Get
			Return Me.GetTable(Of AP_StaffBroker_StaffPropertyDefinition)
		End Get
	End Property
	
	Public ReadOnly Property AP_StaffBroker_StaffTypes() As System.Data.Linq.Table(Of AP_StaffBroker_StaffType)
		Get
			Return Me.GetTable(Of AP_StaffBroker_StaffType)
		End Get
	End Property
	
	Public ReadOnly Property AP_StaffBroker_LeaderMetas() As System.Data.Linq.Table(Of AP_StaffBroker_LeaderMeta)
		Get
			Return Me.GetTable(Of AP_StaffBroker_LeaderMeta)
		End Get
	End Property
	
	Public ReadOnly Property Agape_Staff_Budgets() As System.Data.Linq.Table(Of Agape_Staff_Budget)
		Get
			Return Me.GetTable(Of Agape_Staff_Budget)
		End Get
	End Property
	
	Public ReadOnly Property AP_StaffBroker_Templates() As System.Data.Linq.Table(Of AP_StaffBroker_Template)
		Get
			Return Me.GetTable(Of AP_StaffBroker_Template)
		End Get
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Users")>  _
Partial Public Class User
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _UserID As Integer
	
	Private _Username As String
	
	Private _FirstName As String
	
	Private _LastName As String
	
	Private _IsSuperUser As Boolean
	
	Private _AffiliateId As System.Nullable(Of Integer)
	
	Private _Email As String
	
	Private _DisplayName As String
	
	Private _UpdatePassword As Boolean
	
	Private _Agape_Staff_Rmbs As EntitySet(Of Agape_Staff_Rmb)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnUserIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnUserIDChanged()
    End Sub
    Partial Private Sub OnUsernameChanging(value As String)
    End Sub
    Partial Private Sub OnUsernameChanged()
    End Sub
    Partial Private Sub OnFirstNameChanging(value As String)
    End Sub
    Partial Private Sub OnFirstNameChanged()
    End Sub
    Partial Private Sub OnLastNameChanging(value As String)
    End Sub
    Partial Private Sub OnLastNameChanged()
    End Sub
    Partial Private Sub OnIsSuperUserChanging(value As Boolean)
    End Sub
    Partial Private Sub OnIsSuperUserChanged()
    End Sub
    Partial Private Sub OnAffiliateIdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnAffiliateIdChanged()
    End Sub
    Partial Private Sub OnEmailChanging(value As String)
    End Sub
    Partial Private Sub OnEmailChanged()
    End Sub
    Partial Private Sub OnDisplayNameChanging(value As String)
    End Sub
    Partial Private Sub OnDisplayNameChanged()
    End Sub
    Partial Private Sub OnUpdatePasswordChanging(value As Boolean)
    End Sub
    Partial Private Sub OnUpdatePasswordChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._Agape_Staff_Rmbs = New EntitySet(Of Agape_Staff_Rmb)(AddressOf Me.attach_Agape_Staff_Rmbs, AddressOf Me.detach_Agape_Staff_Rmbs)
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UserID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property UserID() As Integer
		Get
			Return Me._UserID
		End Get
		Set
			If ((Me._UserID = value)  _
						= false) Then
				Me.OnUserIDChanging(value)
				Me.SendPropertyChanging
				Me._UserID = value
				Me.SendPropertyChanged("UserID")
				Me.OnUserIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Username", DbType:="NVarChar(100) NOT NULL", CanBeNull:=false)>  _
	Public Property Username() As String
		Get
			Return Me._Username
		End Get
		Set
			If (String.Equals(Me._Username, value) = false) Then
				Me.OnUsernameChanging(value)
				Me.SendPropertyChanging
				Me._Username = value
				Me.SendPropertyChanged("Username")
				Me.OnUsernameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FirstName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property FirstName() As String
		Get
			Return Me._FirstName
		End Get
		Set
			If (String.Equals(Me._FirstName, value) = false) Then
				Me.OnFirstNameChanging(value)
				Me.SendPropertyChanging
				Me._FirstName = value
				Me.SendPropertyChanged("FirstName")
				Me.OnFirstNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LastName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property LastName() As String
		Get
			Return Me._LastName
		End Get
		Set
			If (String.Equals(Me._LastName, value) = false) Then
				Me.OnLastNameChanging(value)
				Me.SendPropertyChanging
				Me._LastName = value
				Me.SendPropertyChanged("LastName")
				Me.OnLastNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsSuperUser", DbType:="Bit NOT NULL")>  _
	Public Property IsSuperUser() As Boolean
		Get
			Return Me._IsSuperUser
		End Get
		Set
			If ((Me._IsSuperUser = value)  _
						= false) Then
				Me.OnIsSuperUserChanging(value)
				Me.SendPropertyChanging
				Me._IsSuperUser = value
				Me.SendPropertyChanged("IsSuperUser")
				Me.OnIsSuperUserChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AffiliateId", DbType:="Int")>  _
	Public Property AffiliateId() As System.Nullable(Of Integer)
		Get
			Return Me._AffiliateId
		End Get
		Set
			If (Me._AffiliateId.Equals(value) = false) Then
				Me.OnAffiliateIdChanging(value)
				Me.SendPropertyChanging
				Me._AffiliateId = value
				Me.SendPropertyChanged("AffiliateId")
				Me.OnAffiliateIdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Email", DbType:="NVarChar(256)")>  _
	Public Property Email() As String
		Get
			Return Me._Email
		End Get
		Set
			If (String.Equals(Me._Email, value) = false) Then
				Me.OnEmailChanging(value)
				Me.SendPropertyChanging
				Me._Email = value
				Me.SendPropertyChanged("Email")
				Me.OnEmailChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DisplayName", DbType:="NVarChar(128) NOT NULL", CanBeNull:=false)>  _
	Public Property DisplayName() As String
		Get
			Return Me._DisplayName
		End Get
		Set
			If (String.Equals(Me._DisplayName, value) = false) Then
				Me.OnDisplayNameChanging(value)
				Me.SendPropertyChanging
				Me._DisplayName = value
				Me.SendPropertyChanged("DisplayName")
				Me.OnDisplayNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UpdatePassword", DbType:="Bit NOT NULL")>  _
	Public Property UpdatePassword() As Boolean
		Get
			Return Me._UpdatePassword
		End Get
		Set
			If ((Me._UpdatePassword = value)  _
						= false) Then
				Me.OnUpdatePasswordChanging(value)
				Me.SendPropertyChanging
				Me._UpdatePassword = value
				Me.SendPropertyChanged("UpdatePassword")
				Me.OnUpdatePasswordChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="User_Agape_Staff_Rmb", Storage:="_Agape_Staff_Rmbs", ThisKey:="UserID", OtherKey:="UserId")>  _
	Public Property Agape_Staff_Rmbs() As EntitySet(Of Agape_Staff_Rmb)
		Get
			Return Me._Agape_Staff_Rmbs
		End Get
		Set
			Me._Agape_Staff_Rmbs.Assign(value)
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_Agape_Staff_Rmbs(ByVal entity As Agape_Staff_Rmb)
		Me.SendPropertyChanging
		entity.User = Me
	End Sub
	
	Private Sub detach_Agape_Staff_Rmbs(ByVal entity As Agape_Staff_Rmb)
		Me.SendPropertyChanging
		entity.User = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Agape_Staff_Rmb_Status")>  _
Partial Public Class Agape_Staff_Rmb_Status
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _StatusId As Integer
	
	Private _Status As String
	
	Private _StatusNo As System.Nullable(Of Byte)
	
	Private _Agape_Staff_Rmbs As EntitySet(Of Agape_Staff_Rmb)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnStatusIdChanging(value As Integer)
    End Sub
    Partial Private Sub OnStatusIdChanged()
    End Sub
    Partial Private Sub OnStatusChanging(value As String)
    End Sub
    Partial Private Sub OnStatusChanged()
    End Sub
    Partial Private Sub OnStatusNoChanging(value As System.Nullable(Of Byte))
    End Sub
    Partial Private Sub OnStatusNoChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._Agape_Staff_Rmbs = New EntitySet(Of Agape_Staff_Rmb)(AddressOf Me.attach_Agape_Staff_Rmbs, AddressOf Me.detach_Agape_Staff_Rmbs)
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_StatusId", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property StatusId() As Integer
		Get
			Return Me._StatusId
		End Get
		Set
			If ((Me._StatusId = value)  _
						= false) Then
				Me.OnStatusIdChanging(value)
				Me.SendPropertyChanging
				Me._StatusId = value
				Me.SendPropertyChanged("StatusId")
				Me.OnStatusIdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Status", DbType:="NVarChar(30)")>  _
	Public Property Status() As String
		Get
			Return Me._Status
		End Get
		Set
			If (String.Equals(Me._Status, value) = false) Then
				Me.OnStatusChanging(value)
				Me.SendPropertyChanging
				Me._Status = value
				Me.SendPropertyChanged("Status")
				Me.OnStatusChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_StatusNo", DbType:="TinyInt")>  _
	Public Property StatusNo() As System.Nullable(Of Byte)
		Get
			Return Me._StatusNo
		End Get
		Set
			If (Me._StatusNo.Equals(value) = false) Then
				Me.OnStatusNoChanging(value)
				Me.SendPropertyChanging
				Me._StatusNo = value
				Me.SendPropertyChanged("StatusNo")
				Me.OnStatusNoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Agape_Staff_Rmb_Status_Agape_Staff_Rmb", Storage:="_Agape_Staff_Rmbs", ThisKey:="StatusId", OtherKey:="Status")>  _
	Public Property Agape_Staff_Rmbs() As EntitySet(Of Agape_Staff_Rmb)
		Get
			Return Me._Agape_Staff_Rmbs
		End Get
		Set
			Me._Agape_Staff_Rmbs.Assign(value)
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_Agape_Staff_Rmbs(ByVal entity As Agape_Staff_Rmb)
		Me.SendPropertyChanging
		entity.Agape_Staff_Rmb_Status = Me
	End Sub
	
	Private Sub detach_Agape_Staff_Rmbs(ByVal entity As Agape_Staff_Rmb)
		Me.SendPropertyChanging
		entity.Agape_Staff_Rmb_Status = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Agape_Staff_RmbLine")>  _
Partial Public Class Agape_Staff_RmbLine
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _RmbLineNo As Long
	
	Private _RmbNo As System.Nullable(Of Long)
	
	Private _LineType As System.Nullable(Of Short)
	
	Private _GrossAmount As System.Nullable(Of Decimal)
	
	Private _TransDate As System.Nullable(Of Date)
	
	Private _Comment As String
	
	Private _Taxable As Boolean
	
	Private _Receipt As Boolean
	
	Private _VATReceipt As Boolean
	
	Private _ReceiptNo As System.Nullable(Of Short)
	
	Private _Spare1 As String
	
	Private _Spare2 As String
	
	Private _Spare3 As String
	
	Private _Spare4 As String
	
	Private _Spare5 As String
	
	Private _TB As Short
	
	Private _AnalysisCode As String
	
	Private _VATAmount As System.Nullable(Of Decimal)
	
	Private _VATCode As String
	
	Private _VATRate As System.Nullable(Of Double)
	
	Private _Agape_Staff_Rmb As EntityRef(Of Agape_Staff_Rmb)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnRmbLineNoChanging(value As Long)
    End Sub
    Partial Private Sub OnRmbLineNoChanged()
    End Sub
    Partial Private Sub OnRmbNoChanging(value As System.Nullable(Of Long))
    End Sub
    Partial Private Sub OnRmbNoChanged()
    End Sub
    Partial Private Sub OnLineTypeChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnLineTypeChanged()
    End Sub
    Partial Private Sub OnGrossAmountChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnGrossAmountChanged()
    End Sub
    Partial Private Sub OnTransDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnTransDateChanged()
    End Sub
    Partial Private Sub OnCommentChanging(value As String)
    End Sub
    Partial Private Sub OnCommentChanged()
    End Sub
    Partial Private Sub OnTaxableChanging(value As Boolean)
    End Sub
    Partial Private Sub OnTaxableChanged()
    End Sub
    Partial Private Sub OnReceiptChanging(value As Boolean)
    End Sub
    Partial Private Sub OnReceiptChanged()
    End Sub
    Partial Private Sub OnVATReceiptChanging(value As Boolean)
    End Sub
    Partial Private Sub OnVATReceiptChanged()
    End Sub
    Partial Private Sub OnReceiptNoChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnReceiptNoChanged()
    End Sub
    Partial Private Sub OnSpare1Changing(value As String)
    End Sub
    Partial Private Sub OnSpare1Changed()
    End Sub
    Partial Private Sub OnSpare2Changing(value As String)
    End Sub
    Partial Private Sub OnSpare2Changed()
    End Sub
    Partial Private Sub OnSpare3Changing(value As String)
    End Sub
    Partial Private Sub OnSpare3Changed()
    End Sub
    Partial Private Sub OnSpare4Changing(value As String)
    End Sub
    Partial Private Sub OnSpare4Changed()
    End Sub
    Partial Private Sub OnSpare5Changing(value As String)
    End Sub
    Partial Private Sub OnSpare5Changed()
    End Sub
    Partial Private Sub OnTBChanging(value As Short)
    End Sub
    Partial Private Sub OnTBChanged()
    End Sub
    Partial Private Sub OnAnalysisCodeChanging(value As String)
    End Sub
    Partial Private Sub OnAnalysisCodeChanged()
    End Sub
    Partial Private Sub OnVATAmountChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnVATAmountChanged()
    End Sub
    Partial Private Sub OnVATCodeChanging(value As String)
    End Sub
    Partial Private Sub OnVATCodeChanged()
    End Sub
    Partial Private Sub OnVATRateChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnVATRateChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._Agape_Staff_Rmb = CType(Nothing, EntityRef(Of Agape_Staff_Rmb))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RmbLineNo", AutoSync:=AutoSync.OnInsert, DbType:="BigInt NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property RmbLineNo() As Long
		Get
			Return Me._RmbLineNo
		End Get
		Set
			If ((Me._RmbLineNo = value)  _
						= false) Then
				Me.OnRmbLineNoChanging(value)
				Me.SendPropertyChanging
				Me._RmbLineNo = value
				Me.SendPropertyChanged("RmbLineNo")
				Me.OnRmbLineNoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RmbNo", DbType:="BigInt")>  _
	Public Property RmbNo() As System.Nullable(Of Long)
		Get
			Return Me._RmbNo
		End Get
		Set
			If (Me._RmbNo.Equals(value) = false) Then
				If Me._Agape_Staff_Rmb.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnRmbNoChanging(value)
				Me.SendPropertyChanging
				Me._RmbNo = value
				Me.SendPropertyChanged("RmbNo")
				Me.OnRmbNoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LineType", DbType:="SmallInt")>  _
	Public Property LineType() As System.Nullable(Of Short)
		Get
			Return Me._LineType
		End Get
		Set
			If (Me._LineType.Equals(value) = false) Then
				Me.OnLineTypeChanging(value)
				Me.SendPropertyChanging
				Me._LineType = value
				Me.SendPropertyChanged("LineType")
				Me.OnLineTypeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GrossAmount", DbType:="Money")>  _
	Public Property GrossAmount() As System.Nullable(Of Decimal)
		Get
			Return Me._GrossAmount
		End Get
		Set
			If (Me._GrossAmount.Equals(value) = false) Then
				Me.OnGrossAmountChanging(value)
				Me.SendPropertyChanging
				Me._GrossAmount = value
				Me.SendPropertyChanged("GrossAmount")
				Me.OnGrossAmountChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TransDate", DbType:="Date")>  _
	Public Property TransDate() As System.Nullable(Of Date)
		Get
			Return Me._TransDate
		End Get
		Set
			If (Me._TransDate.Equals(value) = false) Then
				Me.OnTransDateChanging(value)
				Me.SendPropertyChanging
				Me._TransDate = value
				Me.SendPropertyChanged("TransDate")
				Me.OnTransDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Comment", DbType:="NVarChar(MAX)")>  _
	Public Property Comment() As String
		Get
			Return Me._Comment
		End Get
		Set
			If (String.Equals(Me._Comment, value) = false) Then
				Me.OnCommentChanging(value)
				Me.SendPropertyChanging
				Me._Comment = value
				Me.SendPropertyChanged("Comment")
				Me.OnCommentChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Taxable", DbType:="Bit NOT NULL")>  _
	Public Property Taxable() As Boolean
		Get
			Return Me._Taxable
		End Get
		Set
			If ((Me._Taxable = value)  _
						= false) Then
				Me.OnTaxableChanging(value)
				Me.SendPropertyChanging
				Me._Taxable = value
				Me.SendPropertyChanged("Taxable")
				Me.OnTaxableChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Receipt", DbType:="Bit NOT NULL")>  _
	Public Property Receipt() As Boolean
		Get
			Return Me._Receipt
		End Get
		Set
			If ((Me._Receipt = value)  _
						= false) Then
				Me.OnReceiptChanging(value)
				Me.SendPropertyChanging
				Me._Receipt = value
				Me.SendPropertyChanged("Receipt")
				Me.OnReceiptChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VATReceipt", DbType:="Bit NOT NULL")>  _
	Public Property VATReceipt() As Boolean
		Get
			Return Me._VATReceipt
		End Get
		Set
			If ((Me._VATReceipt = value)  _
						= false) Then
				Me.OnVATReceiptChanging(value)
				Me.SendPropertyChanging
				Me._VATReceipt = value
				Me.SendPropertyChanged("VATReceipt")
				Me.OnVATReceiptChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ReceiptNo", DbType:="SmallInt")>  _
	Public Property ReceiptNo() As System.Nullable(Of Short)
		Get
			Return Me._ReceiptNo
		End Get
		Set
			If (Me._ReceiptNo.Equals(value) = false) Then
				Me.OnReceiptNoChanging(value)
				Me.SendPropertyChanging
				Me._ReceiptNo = value
				Me.SendPropertyChanged("ReceiptNo")
				Me.OnReceiptNoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Spare1", DbType:="VarChar(100)")>  _
	Public Property Spare1() As String
		Get
			Return Me._Spare1
		End Get
		Set
			If (String.Equals(Me._Spare1, value) = false) Then
				Me.OnSpare1Changing(value)
				Me.SendPropertyChanging
				Me._Spare1 = value
				Me.SendPropertyChanged("Spare1")
				Me.OnSpare1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Spare2", DbType:="VarChar(100)")>  _
	Public Property Spare2() As String
		Get
			Return Me._Spare2
		End Get
		Set
			If (String.Equals(Me._Spare2, value) = false) Then
				Me.OnSpare2Changing(value)
				Me.SendPropertyChanging
				Me._Spare2 = value
				Me.SendPropertyChanged("Spare2")
				Me.OnSpare2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Spare3", DbType:="VarChar(100)")>  _
	Public Property Spare3() As String
		Get
			Return Me._Spare3
		End Get
		Set
			If (String.Equals(Me._Spare3, value) = false) Then
				Me.OnSpare3Changing(value)
				Me.SendPropertyChanging
				Me._Spare3 = value
				Me.SendPropertyChanged("Spare3")
				Me.OnSpare3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Spare4", DbType:="VarChar(100)")>  _
	Public Property Spare4() As String
		Get
			Return Me._Spare4
		End Get
		Set
			If (String.Equals(Me._Spare4, value) = false) Then
				Me.OnSpare4Changing(value)
				Me.SendPropertyChanging
				Me._Spare4 = value
				Me.SendPropertyChanged("Spare4")
				Me.OnSpare4Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Spare5", DbType:="VarChar(100)")>  _
	Public Property Spare5() As String
		Get
			Return Me._Spare5
		End Get
		Set
			If (String.Equals(Me._Spare5, value) = false) Then
				Me.OnSpare5Changing(value)
				Me.SendPropertyChanging
				Me._Spare5 = value
				Me.SendPropertyChanged("Spare5")
				Me.OnSpare5Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TB", DbType:="SmallInt NOT NULL")>  _
	Public Property TB() As Short
		Get
			Return Me._TB
		End Get
		Set
			If ((Me._TB = value)  _
						= false) Then
				Me.OnTBChanging(value)
				Me.SendPropertyChanging
				Me._TB = value
				Me.SendPropertyChanged("TB")
				Me.OnTBChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AnalysisCode", DbType:="VarChar(20)")>  _
	Public Property AnalysisCode() As String
		Get
			Return Me._AnalysisCode
		End Get
		Set
			If (String.Equals(Me._AnalysisCode, value) = false) Then
				Me.OnAnalysisCodeChanging(value)
				Me.SendPropertyChanging
				Me._AnalysisCode = value
				Me.SendPropertyChanged("AnalysisCode")
				Me.OnAnalysisCodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VATAmount", DbType:="Money")>  _
	Public Property VATAmount() As System.Nullable(Of Decimal)
		Get
			Return Me._VATAmount
		End Get
		Set
			If (Me._VATAmount.Equals(value) = false) Then
				Me.OnVATAmountChanging(value)
				Me.SendPropertyChanging
				Me._VATAmount = value
				Me.SendPropertyChanged("VATAmount")
				Me.OnVATAmountChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VATCode", DbType:="VarChar(2)")>  _
	Public Property VATCode() As String
		Get
			Return Me._VATCode
		End Get
		Set
			If (String.Equals(Me._VATCode, value) = false) Then
				Me.OnVATCodeChanging(value)
				Me.SendPropertyChanging
				Me._VATCode = value
				Me.SendPropertyChanged("VATCode")
				Me.OnVATCodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VATRate", DbType:="Float")>  _
	Public Property VATRate() As System.Nullable(Of Double)
		Get
			Return Me._VATRate
		End Get
		Set
			If (Me._VATRate.Equals(value) = false) Then
				Me.OnVATRateChanging(value)
				Me.SendPropertyChanging
				Me._VATRate = value
				Me.SendPropertyChanged("VATRate")
				Me.OnVATRateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Agape_Staff_Rmb_Agape_Staff_RmbLine", Storage:="_Agape_Staff_Rmb", ThisKey:="RmbNo", OtherKey:="RMBNo", IsForeignKey:=true)>  _
	Public Property Agape_Staff_Rmb() As Agape_Staff_Rmb
		Get
			Return Me._Agape_Staff_Rmb.Entity
		End Get
		Set
			Dim previousValue As Agape_Staff_Rmb = Me._Agape_Staff_Rmb.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._Agape_Staff_Rmb.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._Agape_Staff_Rmb.Entity = Nothing
					previousValue.Agape_Staff_RmbLines.Remove(Me)
				End If
				Me._Agape_Staff_Rmb.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.Agape_Staff_RmbLines.Add(Me)
					Me._RmbNo = value.RMBNo
				Else
					Me._RmbNo = CType(Nothing, Nullable(Of Long))
				End If
				Me.SendPropertyChanged("Agape_Staff_Rmb")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Agape_Main_EmailTemplates")>  _
Partial Public Class Agape_Main_EmailTemplate
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _TemplateId As Long
	
	Private _PortalId As System.Nullable(Of Integer)
	
	Private _TemplateName As String
	
	Private _Template As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnTemplateIdChanging(value As Long)
    End Sub
    Partial Private Sub OnTemplateIdChanged()
    End Sub
    Partial Private Sub OnPortalIdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPortalIdChanged()
    End Sub
    Partial Private Sub OnTemplateNameChanging(value As String)
    End Sub
    Partial Private Sub OnTemplateNameChanged()
    End Sub
    Partial Private Sub OnTemplateChanging(value As String)
    End Sub
    Partial Private Sub OnTemplateChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TemplateId", AutoSync:=AutoSync.OnInsert, DbType:="BigInt NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property TemplateId() As Long
		Get
			Return Me._TemplateId
		End Get
		Set
			If ((Me._TemplateId = value)  _
						= false) Then
				Me.OnTemplateIdChanging(value)
				Me.SendPropertyChanging
				Me._TemplateId = value
				Me.SendPropertyChanged("TemplateId")
				Me.OnTemplateIdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PortalId", DbType:="Int")>  _
	Public Property PortalId() As System.Nullable(Of Integer)
		Get
			Return Me._PortalId
		End Get
		Set
			If (Me._PortalId.Equals(value) = false) Then
				Me.OnPortalIdChanging(value)
				Me.SendPropertyChanging
				Me._PortalId = value
				Me.SendPropertyChanged("PortalId")
				Me.OnPortalIdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TemplateName", DbType:="NVarChar(20)")>  _
	Public Property TemplateName() As String
		Get
			Return Me._TemplateName
		End Get
		Set
			If (String.Equals(Me._TemplateName, value) = false) Then
				Me.OnTemplateNameChanging(value)
				Me.SendPropertyChanging
				Me._TemplateName = value
				Me.SendPropertyChanged("TemplateName")
				Me.OnTemplateNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Template", DbType:="NVarChar(MAX)")>  _
	Public Property Template() As String
		Get
			Return Me._Template
		End Get
		Set
			If (String.Equals(Me._Template, value) = false) Then
				Me.OnTemplateChanging(value)
				Me.SendPropertyChanging
				Me._Template = value
				Me.SendPropertyChanged("Template")
				Me.OnTemplateChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.TabModuleSettings")>  _
Partial Public Class TabModuleSetting
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _TabModuleID As Integer
	
	Private _SettingName As String
	
	Private _SettingValue As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnTabModuleIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnTabModuleIDChanged()
    End Sub
    Partial Private Sub OnSettingNameChanging(value As String)
    End Sub
    Partial Private Sub OnSettingNameChanged()
    End Sub
    Partial Private Sub OnSettingValueChanging(value As String)
    End Sub
    Partial Private Sub OnSettingValueChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TabModuleID", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
	Public Property TabModuleID() As Integer
		Get
			Return Me._TabModuleID
		End Get
		Set
			If ((Me._TabModuleID = value)  _
						= false) Then
				Me.OnTabModuleIDChanging(value)
				Me.SendPropertyChanging
				Me._TabModuleID = value
				Me.SendPropertyChanged("TabModuleID")
				Me.OnTabModuleIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SettingName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property SettingName() As String
		Get
			Return Me._SettingName
		End Get
		Set
			If (String.Equals(Me._SettingName, value) = false) Then
				Me.OnSettingNameChanging(value)
				Me.SendPropertyChanging
				Me._SettingName = value
				Me.SendPropertyChanged("SettingName")
				Me.OnSettingNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SettingValue", DbType:="NVarChar(2000) NOT NULL", CanBeNull:=false)>  _
	Public Property SettingValue() As String
		Get
			Return Me._SettingValue
		End Get
		Set
			If (String.Equals(Me._SettingValue, value) = false) Then
				Me.OnSettingValueChanging(value)
				Me.SendPropertyChanging
				Me._SettingValue = value
				Me.SendPropertyChanged("SettingValue")
				Me.OnSettingValueChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Agape_Staff_Rmb")>  _
Partial Public Class Agape_Staff_Rmb
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _RMBNo As Long
	
	Private _UserId As System.Nullable(Of Integer)
	
	Private _CostCenter As String
	
	Private _UserRef As String
	
	Private _RmbDate As System.Nullable(Of Date)
	
	Private _Status As System.Nullable(Of Integer)
	
	Private _UserComment As String
	
	Private _ApprComment As String
	
	Private _AcctComment As String
	
	Private _ApprUserId As System.Nullable(Of Integer)
	
	Private _Locked As System.Nullable(Of Boolean)
	
	Private _PortalId As System.Nullable(Of Integer)
	
	Private _ApprDate As System.Nullable(Of Date)
	
	Private _ProcDate As System.Nullable(Of Date)
	
	Private _Period As System.Nullable(Of Byte)
	
	Private _Year As System.Nullable(Of Short)
	
	Private _SupplierCode As String
	
	Private _EmailSent As System.Nullable(Of Boolean)
	
	Private _Changed As System.Nullable(Of Boolean)
	
	Private _PersonalCC As String
	
	Private _AdvanceRequest As System.Nullable(Of Decimal)
	
	Private _NagapeStatus1 As System.Nullable(Of Byte)
	
	Private _NagapeStatus2 As System.Nullable(Of Byte)
	
	Private _Field1 As String
	
	Private _Field2 As String
	
	Private _Field3 As String
	
	Private _Agape_Staff_RmbLines As EntitySet(Of Agape_Staff_RmbLine)
	
	Private _User As EntityRef(Of User)
	
	Private _Agape_Staff_Rmb_Status As EntityRef(Of Agape_Staff_Rmb_Status)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnRMBNoChanging(value As Long)
    End Sub
    Partial Private Sub OnRMBNoChanged()
    End Sub
    Partial Private Sub OnUserIdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnUserIdChanged()
    End Sub
    Partial Private Sub OnCostCenterChanging(value As String)
    End Sub
    Partial Private Sub OnCostCenterChanged()
    End Sub
    Partial Private Sub OnUserRefChanging(value As String)
    End Sub
    Partial Private Sub OnUserRefChanged()
    End Sub
    Partial Private Sub OnRmbDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnRmbDateChanged()
    End Sub
    Partial Private Sub OnStatusChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnStatusChanged()
    End Sub
    Partial Private Sub OnUserCommentChanging(value As String)
    End Sub
    Partial Private Sub OnUserCommentChanged()
    End Sub
    Partial Private Sub OnApprCommentChanging(value As String)
    End Sub
    Partial Private Sub OnApprCommentChanged()
    End Sub
    Partial Private Sub OnAcctCommentChanging(value As String)
    End Sub
    Partial Private Sub OnAcctCommentChanged()
    End Sub
    Partial Private Sub OnApprUserIdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnApprUserIdChanged()
    End Sub
    Partial Private Sub OnLockedChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnLockedChanged()
    End Sub
    Partial Private Sub OnPortalIdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPortalIdChanged()
    End Sub
    Partial Private Sub OnApprDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnApprDateChanged()
    End Sub
    Partial Private Sub OnProcDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnProcDateChanged()
    End Sub
    Partial Private Sub OnPeriodChanging(value As System.Nullable(Of Byte))
    End Sub
    Partial Private Sub OnPeriodChanged()
    End Sub
    Partial Private Sub OnYearChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnYearChanged()
    End Sub
    Partial Private Sub OnSupplierCodeChanging(value As String)
    End Sub
    Partial Private Sub OnSupplierCodeChanged()
    End Sub
    Partial Private Sub OnEmailSentChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnEmailSentChanged()
    End Sub
    Partial Private Sub OnChangedChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnChangedChanged()
    End Sub
    Partial Private Sub OnPersonalCCChanging(value As String)
    End Sub
    Partial Private Sub OnPersonalCCChanged()
    End Sub
    Partial Private Sub OnAdvanceRequestChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnAdvanceRequestChanged()
    End Sub
    Partial Private Sub OnNagapeStatus1Changing(value As System.Nullable(Of Byte))
    End Sub
    Partial Private Sub OnNagapeStatus1Changed()
    End Sub
    Partial Private Sub OnNagapeStatus2Changing(value As System.Nullable(Of Byte))
    End Sub
    Partial Private Sub OnNagapeStatus2Changed()
    End Sub
    Partial Private Sub OnField1Changing(value As String)
    End Sub
    Partial Private Sub OnField1Changed()
    End Sub
    Partial Private Sub OnField2Changing(value As String)
    End Sub
    Partial Private Sub OnField2Changed()
    End Sub
    Partial Private Sub OnField3Changing(value As String)
    End Sub
    Partial Private Sub OnField3Changed()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._Agape_Staff_RmbLines = New EntitySet(Of Agape_Staff_RmbLine)(AddressOf Me.attach_Agape_Staff_RmbLines, AddressOf Me.detach_Agape_Staff_RmbLines)
		Me._User = CType(Nothing, EntityRef(Of User))
		Me._Agape_Staff_Rmb_Status = CType(Nothing, EntityRef(Of Agape_Staff_Rmb_Status))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RMBNo", AutoSync:=AutoSync.OnInsert, DbType:="BigInt NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property RMBNo() As Long
		Get
			Return Me._RMBNo
		End Get
		Set
			If ((Me._RMBNo = value)  _
						= false) Then
				Me.OnRMBNoChanging(value)
				Me.SendPropertyChanging
				Me._RMBNo = value
				Me.SendPropertyChanged("RMBNo")
				Me.OnRMBNoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UserId", DbType:="Int")>  _
	Public Property UserId() As System.Nullable(Of Integer)
		Get
			Return Me._UserId
		End Get
		Set
			If (Me._UserId.Equals(value) = false) Then
				If Me._User.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnUserIdChanging(value)
				Me.SendPropertyChanging
				Me._UserId = value
				Me.SendPropertyChanged("UserId")
				Me.OnUserIdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CostCenter", DbType:="NVarChar(50)")>  _
	Public Property CostCenter() As String
		Get
			Return Me._CostCenter
		End Get
		Set
			If (String.Equals(Me._CostCenter, value) = false) Then
				Me.OnCostCenterChanging(value)
				Me.SendPropertyChanging
				Me._CostCenter = value
				Me.SendPropertyChanged("CostCenter")
				Me.OnCostCenterChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UserRef", DbType:="NVarChar(100)")>  _
	Public Property UserRef() As String
		Get
			Return Me._UserRef
		End Get
		Set
			If (String.Equals(Me._UserRef, value) = false) Then
				Me.OnUserRefChanging(value)
				Me.SendPropertyChanging
				Me._UserRef = value
				Me.SendPropertyChanged("UserRef")
				Me.OnUserRefChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RmbDate", DbType:="DateTime")>  _
	Public Property RmbDate() As System.Nullable(Of Date)
		Get
			Return Me._RmbDate
		End Get
		Set
			If (Me._RmbDate.Equals(value) = false) Then
				Me.OnRmbDateChanging(value)
				Me.SendPropertyChanging
				Me._RmbDate = value
				Me.SendPropertyChanged("RmbDate")
				Me.OnRmbDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Status", DbType:="Int")>  _
	Public Property Status() As System.Nullable(Of Integer)
		Get
			Return Me._Status
		End Get
		Set
			If (Me._Status.Equals(value) = false) Then
				If Me._Agape_Staff_Rmb_Status.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnStatusChanging(value)
				Me.SendPropertyChanging
				Me._Status = value
				Me.SendPropertyChanged("Status")
				Me.OnStatusChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UserComment", DbType:="NVarChar(MAX)")>  _
	Public Property UserComment() As String
		Get
			Return Me._UserComment
		End Get
		Set
			If (String.Equals(Me._UserComment, value) = false) Then
				Me.OnUserCommentChanging(value)
				Me.SendPropertyChanging
				Me._UserComment = value
				Me.SendPropertyChanged("UserComment")
				Me.OnUserCommentChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ApprComment", DbType:="NVarChar(MAX)")>  _
	Public Property ApprComment() As String
		Get
			Return Me._ApprComment
		End Get
		Set
			If (String.Equals(Me._ApprComment, value) = false) Then
				Me.OnApprCommentChanging(value)
				Me.SendPropertyChanging
				Me._ApprComment = value
				Me.SendPropertyChanged("ApprComment")
				Me.OnApprCommentChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AcctComment", DbType:="NVarChar(MAX)")>  _
	Public Property AcctComment() As String
		Get
			Return Me._AcctComment
		End Get
		Set
			If (String.Equals(Me._AcctComment, value) = false) Then
				Me.OnAcctCommentChanging(value)
				Me.SendPropertyChanging
				Me._AcctComment = value
				Me.SendPropertyChanged("AcctComment")
				Me.OnAcctCommentChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ApprUserId", DbType:="Int")>  _
	Public Property ApprUserId() As System.Nullable(Of Integer)
		Get
			Return Me._ApprUserId
		End Get
		Set
			If (Me._ApprUserId.Equals(value) = false) Then
				Me.OnApprUserIdChanging(value)
				Me.SendPropertyChanging
				Me._ApprUserId = value
				Me.SendPropertyChanged("ApprUserId")
				Me.OnApprUserIdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Locked", DbType:="Bit")>  _
	Public Property Locked() As System.Nullable(Of Boolean)
		Get
			Return Me._Locked
		End Get
		Set
			If (Me._Locked.Equals(value) = false) Then
				Me.OnLockedChanging(value)
				Me.SendPropertyChanging
				Me._Locked = value
				Me.SendPropertyChanged("Locked")
				Me.OnLockedChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PortalId", DbType:="Int")>  _
	Public Property PortalId() As System.Nullable(Of Integer)
		Get
			Return Me._PortalId
		End Get
		Set
			If (Me._PortalId.Equals(value) = false) Then
				Me.OnPortalIdChanging(value)
				Me.SendPropertyChanging
				Me._PortalId = value
				Me.SendPropertyChanged("PortalId")
				Me.OnPortalIdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ApprDate", DbType:="Date")>  _
	Public Property ApprDate() As System.Nullable(Of Date)
		Get
			Return Me._ApprDate
		End Get
		Set
			If (Me._ApprDate.Equals(value) = false) Then
				Me.OnApprDateChanging(value)
				Me.SendPropertyChanging
				Me._ApprDate = value
				Me.SendPropertyChanged("ApprDate")
				Me.OnApprDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ProcDate", DbType:="Date")>  _
	Public Property ProcDate() As System.Nullable(Of Date)
		Get
			Return Me._ProcDate
		End Get
		Set
			If (Me._ProcDate.Equals(value) = false) Then
				Me.OnProcDateChanging(value)
				Me.SendPropertyChanging
				Me._ProcDate = value
				Me.SendPropertyChanged("ProcDate")
				Me.OnProcDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Period", DbType:="TinyInt")>  _
	Public Property Period() As System.Nullable(Of Byte)
		Get
			Return Me._Period
		End Get
		Set
			If (Me._Period.Equals(value) = false) Then
				Me.OnPeriodChanging(value)
				Me.SendPropertyChanging
				Me._Period = value
				Me.SendPropertyChanged("Period")
				Me.OnPeriodChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Year", DbType:="SmallInt")>  _
	Public Property Year() As System.Nullable(Of Short)
		Get
			Return Me._Year
		End Get
		Set
			If (Me._Year.Equals(value) = false) Then
				Me.OnYearChanging(value)
				Me.SendPropertyChanging
				Me._Year = value
				Me.SendPropertyChanged("Year")
				Me.OnYearChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SupplierCode", DbType:="VarChar(8)")>  _
	Public Property SupplierCode() As String
		Get
			Return Me._SupplierCode
		End Get
		Set
			If (String.Equals(Me._SupplierCode, value) = false) Then
				Me.OnSupplierCodeChanging(value)
				Me.SendPropertyChanging
				Me._SupplierCode = value
				Me.SendPropertyChanged("SupplierCode")
				Me.OnSupplierCodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EmailSent", DbType:="Bit")>  _
	Public Property EmailSent() As System.Nullable(Of Boolean)
		Get
			Return Me._EmailSent
		End Get
		Set
			If (Me._EmailSent.Equals(value) = false) Then
				Me.OnEmailSentChanging(value)
				Me.SendPropertyChanging
				Me._EmailSent = value
				Me.SendPropertyChanged("EmailSent")
				Me.OnEmailSentChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Changed", DbType:="Bit")>  _
	Public Property Changed() As System.Nullable(Of Boolean)
		Get
			Return Me._Changed
		End Get
		Set
			If (Me._Changed.Equals(value) = false) Then
				Me.OnChangedChanging(value)
				Me.SendPropertyChanging
				Me._Changed = value
				Me.SendPropertyChanged("Changed")
				Me.OnChangedChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PersonalCC", DbType:="VarChar(4)")>  _
	Public Property PersonalCC() As String
		Get
			Return Me._PersonalCC
		End Get
		Set
			If (String.Equals(Me._PersonalCC, value) = false) Then
				Me.OnPersonalCCChanging(value)
				Me.SendPropertyChanging
				Me._PersonalCC = value
				Me.SendPropertyChanged("PersonalCC")
				Me.OnPersonalCCChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AdvanceRequest", DbType:="Money")>  _
	Public Property AdvanceRequest() As System.Nullable(Of Decimal)
		Get
			Return Me._AdvanceRequest
		End Get
		Set
			If (Me._AdvanceRequest.Equals(value) = false) Then
				Me.OnAdvanceRequestChanging(value)
				Me.SendPropertyChanging
				Me._AdvanceRequest = value
				Me.SendPropertyChanged("AdvanceRequest")
				Me.OnAdvanceRequestChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NagapeStatus1", DbType:="TinyInt")>  _
	Public Property NagapeStatus1() As System.Nullable(Of Byte)
		Get
			Return Me._NagapeStatus1
		End Get
		Set
			If (Me._NagapeStatus1.Equals(value) = false) Then
				Me.OnNagapeStatus1Changing(value)
				Me.SendPropertyChanging
				Me._NagapeStatus1 = value
				Me.SendPropertyChanged("NagapeStatus1")
				Me.OnNagapeStatus1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NagapeStatus2", DbType:="TinyInt")>  _
	Public Property NagapeStatus2() As System.Nullable(Of Byte)
		Get
			Return Me._NagapeStatus2
		End Get
		Set
			If (Me._NagapeStatus2.Equals(value) = false) Then
				Me.OnNagapeStatus2Changing(value)
				Me.SendPropertyChanging
				Me._NagapeStatus2 = value
				Me.SendPropertyChanged("NagapeStatus2")
				Me.OnNagapeStatus2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Field1", DbType:="VarChar(50)")>  _
	Public Property Field1() As String
		Get
			Return Me._Field1
		End Get
		Set
			If (String.Equals(Me._Field1, value) = false) Then
				Me.OnField1Changing(value)
				Me.SendPropertyChanging
				Me._Field1 = value
				Me.SendPropertyChanged("Field1")
				Me.OnField1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Field2", DbType:="VarChar(50)")>  _
	Public Property Field2() As String
		Get
			Return Me._Field2
		End Get
		Set
			If (String.Equals(Me._Field2, value) = false) Then
				Me.OnField2Changing(value)
				Me.SendPropertyChanging
				Me._Field2 = value
				Me.SendPropertyChanged("Field2")
				Me.OnField2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Field3", DbType:="VarChar(50)")>  _
	Public Property Field3() As String
		Get
			Return Me._Field3
		End Get
		Set
			If (String.Equals(Me._Field3, value) = false) Then
				Me.OnField3Changing(value)
				Me.SendPropertyChanging
				Me._Field3 = value
				Me.SendPropertyChanged("Field3")
				Me.OnField3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Agape_Staff_Rmb_Agape_Staff_RmbLine", Storage:="_Agape_Staff_RmbLines", ThisKey:="RMBNo", OtherKey:="RmbNo")>  _
	Public Property Agape_Staff_RmbLines() As EntitySet(Of Agape_Staff_RmbLine)
		Get
			Return Me._Agape_Staff_RmbLines
		End Get
		Set
			Me._Agape_Staff_RmbLines.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="User_Agape_Staff_Rmb", Storage:="_User", ThisKey:="UserId", OtherKey:="UserID", IsForeignKey:=true)>  _
	Public Property User() As User
		Get
			Return Me._User.Entity
		End Get
		Set
			Dim previousValue As User = Me._User.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._User.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._User.Entity = Nothing
					previousValue.Agape_Staff_Rmbs.Remove(Me)
				End If
				Me._User.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.Agape_Staff_Rmbs.Add(Me)
					Me._UserId = value.UserID
				Else
					Me._UserId = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("User")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Agape_Staff_Rmb_Status_Agape_Staff_Rmb", Storage:="_Agape_Staff_Rmb_Status", ThisKey:="Status", OtherKey:="StatusId", IsForeignKey:=true)>  _
	Public Property Agape_Staff_Rmb_Status() As Agape_Staff_Rmb_Status
		Get
			Return Me._Agape_Staff_Rmb_Status.Entity
		End Get
		Set
			Dim previousValue As Agape_Staff_Rmb_Status = Me._Agape_Staff_Rmb_Status.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._Agape_Staff_Rmb_Status.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._Agape_Staff_Rmb_Status.Entity = Nothing
					previousValue.Agape_Staff_Rmbs.Remove(Me)
				End If
				Me._Agape_Staff_Rmb_Status.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.Agape_Staff_Rmbs.Add(Me)
					Me._Status = value.StatusId
				Else
					Me._Status = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("Agape_Staff_Rmb_Status")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_Agape_Staff_RmbLines(ByVal entity As Agape_Staff_RmbLine)
		Me.SendPropertyChanging
		entity.Agape_Staff_Rmb = Me
	End Sub
	
	Private Sub detach_Agape_Staff_RmbLines(ByVal entity As Agape_Staff_RmbLine)
		Me.SendPropertyChanging
		entity.Agape_Staff_Rmb = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.AP_StaffBroker_Departments")>  _
Partial Public Class AP_StaffBroker_Department
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _CostCenterId As Integer
	
	Private _Name As String
	
	Private _CostCentre As String
	
	Private _CostCentreManager As System.Nullable(Of Integer)
	
	Private _CostCentreDelegate As System.Nullable(Of Integer)
	
	Private _CanRmb As Boolean
	
	Private _CanCharge As Boolean
	
	Private _CanGiveTo As Boolean
	
	Private _GivingText As String
	
	Private _GivingShortcut As String
	
	Private _PortalId As System.Nullable(Of Integer)
	
	Private _PayType As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnCostCenterIdChanging(value As Integer)
    End Sub
    Partial Private Sub OnCostCenterIdChanged()
    End Sub
    Partial Private Sub OnNameChanging(value As String)
    End Sub
    Partial Private Sub OnNameChanged()
    End Sub
    Partial Private Sub OnCostCentreChanging(value As String)
    End Sub
    Partial Private Sub OnCostCentreChanged()
    End Sub
    Partial Private Sub OnCostCentreManagerChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCostCentreManagerChanged()
    End Sub
    Partial Private Sub OnCostCentreDelegateChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCostCentreDelegateChanged()
    End Sub
    Partial Private Sub OnCanRmbChanging(value As Boolean)
    End Sub
    Partial Private Sub OnCanRmbChanged()
    End Sub
    Partial Private Sub OnCanChargeChanging(value As Boolean)
    End Sub
    Partial Private Sub OnCanChargeChanged()
    End Sub
    Partial Private Sub OnCanGiveToChanging(value As Boolean)
    End Sub
    Partial Private Sub OnCanGiveToChanged()
    End Sub
    Partial Private Sub OnGivingTextChanging(value As String)
    End Sub
    Partial Private Sub OnGivingTextChanged()
    End Sub
    Partial Private Sub OnGivingShortcutChanging(value As String)
    End Sub
    Partial Private Sub OnGivingShortcutChanged()
    End Sub
    Partial Private Sub OnPortalIdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPortalIdChanged()
    End Sub
    Partial Private Sub OnPayTypeChanging(value As String)
    End Sub
    Partial Private Sub OnPayTypeChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CostCenterId", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property CostCenterId() As Integer
		Get
			Return Me._CostCenterId
		End Get
		Set
			If ((Me._CostCenterId = value)  _
						= false) Then
				Me.OnCostCenterIdChanging(value)
				Me.SendPropertyChanging
				Me._CostCenterId = value
				Me.SendPropertyChanged("CostCenterId")
				Me.OnCostCenterIdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Name", DbType:="NVarChar(100) NOT NULL", CanBeNull:=false)>  _
	Public Property Name() As String
		Get
			Return Me._Name
		End Get
		Set
			If (String.Equals(Me._Name, value) = false) Then
				Me.OnNameChanging(value)
				Me.SendPropertyChanging
				Me._Name = value
				Me.SendPropertyChanged("Name")
				Me.OnNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CostCentre", DbType:="NVarChar(20) NOT NULL", CanBeNull:=false)>  _
	Public Property CostCentre() As String
		Get
			Return Me._CostCentre
		End Get
		Set
			If (String.Equals(Me._CostCentre, value) = false) Then
				Me.OnCostCentreChanging(value)
				Me.SendPropertyChanging
				Me._CostCentre = value
				Me.SendPropertyChanged("CostCentre")
				Me.OnCostCentreChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CostCentreManager", DbType:="Int")>  _
	Public Property CostCentreManager() As System.Nullable(Of Integer)
		Get
			Return Me._CostCentreManager
		End Get
		Set
			If (Me._CostCentreManager.Equals(value) = false) Then
				Me.OnCostCentreManagerChanging(value)
				Me.SendPropertyChanging
				Me._CostCentreManager = value
				Me.SendPropertyChanged("CostCentreManager")
				Me.OnCostCentreManagerChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CostCentreDelegate", DbType:="Int")>  _
	Public Property CostCentreDelegate() As System.Nullable(Of Integer)
		Get
			Return Me._CostCentreDelegate
		End Get
		Set
			If (Me._CostCentreDelegate.Equals(value) = false) Then
				Me.OnCostCentreDelegateChanging(value)
				Me.SendPropertyChanging
				Me._CostCentreDelegate = value
				Me.SendPropertyChanged("CostCentreDelegate")
				Me.OnCostCentreDelegateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CanRmb", DbType:="Bit NOT NULL")>  _
	Public Property CanRmb() As Boolean
		Get
			Return Me._CanRmb
		End Get
		Set
			If ((Me._CanRmb = value)  _
						= false) Then
				Me.OnCanRmbChanging(value)
				Me.SendPropertyChanging
				Me._CanRmb = value
				Me.SendPropertyChanged("CanRmb")
				Me.OnCanRmbChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CanCharge", DbType:="Bit NOT NULL")>  _
	Public Property CanCharge() As Boolean
		Get
			Return Me._CanCharge
		End Get
		Set
			If ((Me._CanCharge = value)  _
						= false) Then
				Me.OnCanChargeChanging(value)
				Me.SendPropertyChanging
				Me._CanCharge = value
				Me.SendPropertyChanged("CanCharge")
				Me.OnCanChargeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CanGiveTo", DbType:="Bit NOT NULL")>  _
	Public Property CanGiveTo() As Boolean
		Get
			Return Me._CanGiveTo
		End Get
		Set
			If ((Me._CanGiveTo = value)  _
						= false) Then
				Me.OnCanGiveToChanging(value)
				Me.SendPropertyChanging
				Me._CanGiveTo = value
				Me.SendPropertyChanged("CanGiveTo")
				Me.OnCanGiveToChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GivingText", DbType:="NVarChar(MAX)")>  _
	Public Property GivingText() As String
		Get
			Return Me._GivingText
		End Get
		Set
			If (String.Equals(Me._GivingText, value) = false) Then
				Me.OnGivingTextChanging(value)
				Me.SendPropertyChanging
				Me._GivingText = value
				Me.SendPropertyChanged("GivingText")
				Me.OnGivingTextChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GivingShortcut", DbType:="NVarChar(50)")>  _
	Public Property GivingShortcut() As String
		Get
			Return Me._GivingShortcut
		End Get
		Set
			If (String.Equals(Me._GivingShortcut, value) = false) Then
				Me.OnGivingShortcutChanging(value)
				Me.SendPropertyChanging
				Me._GivingShortcut = value
				Me.SendPropertyChanged("GivingShortcut")
				Me.OnGivingShortcutChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PortalId", DbType:="Int")>  _
	Public Property PortalId() As System.Nullable(Of Integer)
		Get
			Return Me._PortalId
		End Get
		Set
			If (Me._PortalId.Equals(value) = false) Then
				Me.OnPortalIdChanging(value)
				Me.SendPropertyChanging
				Me._PortalId = value
				Me.SendPropertyChanged("PortalId")
				Me.OnPortalIdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PayType", DbType:="NVarChar(MAX)")>  _
	Public Property PayType() As String
		Get
			Return Me._PayType
		End Get
		Set
			If (String.Equals(Me._PayType, value) = false) Then
				Me.OnPayTypeChanging(value)
				Me.SendPropertyChanging
				Me._PayType = value
				Me.SendPropertyChanged("PayType")
				Me.OnPayTypeChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.AP_StaffBroker_Staff")>  _
Partial Public Class AP_StaffBroker_Staff
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _StaffId As Integer
	
	Private _DisplayName As String
	
	Private _CostCenter As String
	
	Private _StaffTypeId As System.Nullable(Of Short)
	
	Private _UserId1 As Integer
	
	Private _UserId2 As System.Nullable(Of Integer)
	
	Private _Active As Boolean
	
	Private _PortalId As System.Nullable(Of Integer)
	
	Private _AP_StaffBroker_StaffProfiles As EntitySet(Of AP_StaffBroker_StaffProfile)
	
	Private _AP_StaffBroker_StaffType As EntityRef(Of AP_StaffBroker_StaffType)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnStaffIdChanging(value As Integer)
    End Sub
    Partial Private Sub OnStaffIdChanged()
    End Sub
    Partial Private Sub OnDisplayNameChanging(value As String)
    End Sub
    Partial Private Sub OnDisplayNameChanged()
    End Sub
    Partial Private Sub OnCostCenterChanging(value As String)
    End Sub
    Partial Private Sub OnCostCenterChanged()
    End Sub
    Partial Private Sub OnStaffTypeIdChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnStaffTypeIdChanged()
    End Sub
    Partial Private Sub OnUserId1Changing(value As Integer)
    End Sub
    Partial Private Sub OnUserId1Changed()
    End Sub
    Partial Private Sub OnUserId2Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnUserId2Changed()
    End Sub
    Partial Private Sub OnActiveChanging(value As Boolean)
    End Sub
    Partial Private Sub OnActiveChanged()
    End Sub
    Partial Private Sub OnPortalIdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPortalIdChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._AP_StaffBroker_StaffProfiles = New EntitySet(Of AP_StaffBroker_StaffProfile)(AddressOf Me.attach_AP_StaffBroker_StaffProfiles, AddressOf Me.detach_AP_StaffBroker_StaffProfiles)
		Me._AP_StaffBroker_StaffType = CType(Nothing, EntityRef(Of AP_StaffBroker_StaffType))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_StaffId", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property StaffId() As Integer
		Get
			Return Me._StaffId
		End Get
		Set
			If ((Me._StaffId = value)  _
						= false) Then
				Me.OnStaffIdChanging(value)
				Me.SendPropertyChanging
				Me._StaffId = value
				Me.SendPropertyChanged("StaffId")
				Me.OnStaffIdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DisplayName", DbType:="NVarChar(100) NOT NULL", CanBeNull:=false)>  _
	Public Property DisplayName() As String
		Get
			Return Me._DisplayName
		End Get
		Set
			If (String.Equals(Me._DisplayName, value) = false) Then
				Me.OnDisplayNameChanging(value)
				Me.SendPropertyChanging
				Me._DisplayName = value
				Me.SendPropertyChanged("DisplayName")
				Me.OnDisplayNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CostCenter", DbType:="NVarChar(20)")>  _
	Public Property CostCenter() As String
		Get
			Return Me._CostCenter
		End Get
		Set
			If (String.Equals(Me._CostCenter, value) = false) Then
				Me.OnCostCenterChanging(value)
				Me.SendPropertyChanging
				Me._CostCenter = value
				Me.SendPropertyChanged("CostCenter")
				Me.OnCostCenterChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_StaffTypeId", DbType:="SmallInt")>  _
	Public Property StaffTypeId() As System.Nullable(Of Short)
		Get
			Return Me._StaffTypeId
		End Get
		Set
			If (Me._StaffTypeId.Equals(value) = false) Then
				If Me._AP_StaffBroker_StaffType.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnStaffTypeIdChanging(value)
				Me.SendPropertyChanging
				Me._StaffTypeId = value
				Me.SendPropertyChanged("StaffTypeId")
				Me.OnStaffTypeIdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UserId1", DbType:="Int NOT NULL")>  _
	Public Property UserId1() As Integer
		Get
			Return Me._UserId1
		End Get
		Set
			If ((Me._UserId1 = value)  _
						= false) Then
				Me.OnUserId1Changing(value)
				Me.SendPropertyChanging
				Me._UserId1 = value
				Me.SendPropertyChanged("UserId1")
				Me.OnUserId1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UserId2", DbType:="Int")>  _
	Public Property UserId2() As System.Nullable(Of Integer)
		Get
			Return Me._UserId2
		End Get
		Set
			If (Me._UserId2.Equals(value) = false) Then
				Me.OnUserId2Changing(value)
				Me.SendPropertyChanging
				Me._UserId2 = value
				Me.SendPropertyChanged("UserId2")
				Me.OnUserId2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Active", DbType:="Bit NOT NULL")>  _
	Public Property Active() As Boolean
		Get
			Return Me._Active
		End Get
		Set
			If ((Me._Active = value)  _
						= false) Then
				Me.OnActiveChanging(value)
				Me.SendPropertyChanging
				Me._Active = value
				Me.SendPropertyChanged("Active")
				Me.OnActiveChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PortalId", DbType:="Int")>  _
	Public Property PortalId() As System.Nullable(Of Integer)
		Get
			Return Me._PortalId
		End Get
		Set
			If (Me._PortalId.Equals(value) = false) Then
				Me.OnPortalIdChanging(value)
				Me.SendPropertyChanging
				Me._PortalId = value
				Me.SendPropertyChanged("PortalId")
				Me.OnPortalIdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="AP_StaffBroker_Staff_AP_StaffBroker_StaffProfile", Storage:="_AP_StaffBroker_StaffProfiles", ThisKey:="StaffId", OtherKey:="StaffId")>  _
	Public Property AP_StaffBroker_StaffProfiles() As EntitySet(Of AP_StaffBroker_StaffProfile)
		Get
			Return Me._AP_StaffBroker_StaffProfiles
		End Get
		Set
			Me._AP_StaffBroker_StaffProfiles.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="AP_StaffBroker_StaffType_AP_StaffBroker_Staff", Storage:="_AP_StaffBroker_StaffType", ThisKey:="StaffTypeId", OtherKey:="StaffTypeId", IsForeignKey:=true)>  _
	Public Property AP_StaffBroker_StaffType() As AP_StaffBroker_StaffType
		Get
			Return Me._AP_StaffBroker_StaffType.Entity
		End Get
		Set
			Dim previousValue As AP_StaffBroker_StaffType = Me._AP_StaffBroker_StaffType.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._AP_StaffBroker_StaffType.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._AP_StaffBroker_StaffType.Entity = Nothing
					previousValue.AP_StaffBroker_Staffs.Remove(Me)
				End If
				Me._AP_StaffBroker_StaffType.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.AP_StaffBroker_Staffs.Add(Me)
					Me._StaffTypeId = value.StaffTypeId
				Else
					Me._StaffTypeId = CType(Nothing, Nullable(Of Short))
				End If
				Me.SendPropertyChanged("AP_StaffBroker_StaffType")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_AP_StaffBroker_StaffProfiles(ByVal entity As AP_StaffBroker_StaffProfile)
		Me.SendPropertyChanging
		entity.AP_StaffBroker_Staff = Me
	End Sub
	
	Private Sub detach_AP_StaffBroker_StaffProfiles(ByVal entity As AP_StaffBroker_StaffProfile)
		Me.SendPropertyChanging
		entity.AP_StaffBroker_Staff = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.AP_StaffBroker_StaffProfile")>  _
Partial Public Class AP_StaffBroker_StaffProfile
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _StaffProfileId As Long
	
	Private _PropertyValue As String
	
	Private _StaffPropertyDefinitionId As Integer
	
	Private _StaffId As Integer
	
	Private _AP_StaffBroker_Staff As EntityRef(Of AP_StaffBroker_Staff)
	
	Private _AP_StaffBroker_StaffPropertyDefinition As EntityRef(Of AP_StaffBroker_StaffPropertyDefinition)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnStaffProfileIdChanging(value As Long)
    End Sub
    Partial Private Sub OnStaffProfileIdChanged()
    End Sub
    Partial Private Sub OnPropertyValueChanging(value As String)
    End Sub
    Partial Private Sub OnPropertyValueChanged()
    End Sub
    Partial Private Sub OnStaffPropertyDefinitionIdChanging(value As Integer)
    End Sub
    Partial Private Sub OnStaffPropertyDefinitionIdChanged()
    End Sub
    Partial Private Sub OnStaffIdChanging(value As Integer)
    End Sub
    Partial Private Sub OnStaffIdChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._AP_StaffBroker_Staff = CType(Nothing, EntityRef(Of AP_StaffBroker_Staff))
		Me._AP_StaffBroker_StaffPropertyDefinition = CType(Nothing, EntityRef(Of AP_StaffBroker_StaffPropertyDefinition))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_StaffProfileId", AutoSync:=AutoSync.OnInsert, DbType:="BigInt NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property StaffProfileId() As Long
		Get
			Return Me._StaffProfileId
		End Get
		Set
			If ((Me._StaffProfileId = value)  _
						= false) Then
				Me.OnStaffProfileIdChanging(value)
				Me.SendPropertyChanging
				Me._StaffProfileId = value
				Me.SendPropertyChanged("StaffProfileId")
				Me.OnStaffProfileIdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PropertyValue", DbType:="VarChar(MAX)")>  _
	Public Property PropertyValue() As String
		Get
			Return Me._PropertyValue
		End Get
		Set
			If (String.Equals(Me._PropertyValue, value) = false) Then
				Me.OnPropertyValueChanging(value)
				Me.SendPropertyChanging
				Me._PropertyValue = value
				Me.SendPropertyChanged("PropertyValue")
				Me.OnPropertyValueChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_StaffPropertyDefinitionId", DbType:="Int NOT NULL")>  _
	Public Property StaffPropertyDefinitionId() As Integer
		Get
			Return Me._StaffPropertyDefinitionId
		End Get
		Set
			If ((Me._StaffPropertyDefinitionId = value)  _
						= false) Then
				If Me._AP_StaffBroker_StaffPropertyDefinition.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnStaffPropertyDefinitionIdChanging(value)
				Me.SendPropertyChanging
				Me._StaffPropertyDefinitionId = value
				Me.SendPropertyChanged("StaffPropertyDefinitionId")
				Me.OnStaffPropertyDefinitionIdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_StaffId", DbType:="Int NOT NULL")>  _
	Public Property StaffId() As Integer
		Get
			Return Me._StaffId
		End Get
		Set
			If ((Me._StaffId = value)  _
						= false) Then
				If Me._AP_StaffBroker_Staff.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnStaffIdChanging(value)
				Me.SendPropertyChanging
				Me._StaffId = value
				Me.SendPropertyChanged("StaffId")
				Me.OnStaffIdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="AP_StaffBroker_Staff_AP_StaffBroker_StaffProfile", Storage:="_AP_StaffBroker_Staff", ThisKey:="StaffId", OtherKey:="StaffId", IsForeignKey:=true)>  _
	Public Property AP_StaffBroker_Staff() As AP_StaffBroker_Staff
		Get
			Return Me._AP_StaffBroker_Staff.Entity
		End Get
		Set
			Dim previousValue As AP_StaffBroker_Staff = Me._AP_StaffBroker_Staff.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._AP_StaffBroker_Staff.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._AP_StaffBroker_Staff.Entity = Nothing
					previousValue.AP_StaffBroker_StaffProfiles.Remove(Me)
				End If
				Me._AP_StaffBroker_Staff.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.AP_StaffBroker_StaffProfiles.Add(Me)
					Me._StaffId = value.StaffId
				Else
					Me._StaffId = CType(Nothing, Integer)
				End If
				Me.SendPropertyChanged("AP_StaffBroker_Staff")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="AP_StaffBroker_StaffPropertyDefinition_AP_StaffBroker_StaffProfile", Storage:="_AP_StaffBroker_StaffPropertyDefinition", ThisKey:="StaffPropertyDefinitionId", OtherKey:="StaffPropertyDefinitionId", IsForeignKey:=true)>  _
	Public Property AP_StaffBroker_StaffPropertyDefinition() As AP_StaffBroker_StaffPropertyDefinition
		Get
			Return Me._AP_StaffBroker_StaffPropertyDefinition.Entity
		End Get
		Set
			Dim previousValue As AP_StaffBroker_StaffPropertyDefinition = Me._AP_StaffBroker_StaffPropertyDefinition.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._AP_StaffBroker_StaffPropertyDefinition.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._AP_StaffBroker_StaffPropertyDefinition.Entity = Nothing
					previousValue.AP_StaffBroker_StaffProfiles.Remove(Me)
				End If
				Me._AP_StaffBroker_StaffPropertyDefinition.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.AP_StaffBroker_StaffProfiles.Add(Me)
					Me._StaffPropertyDefinitionId = value.StaffPropertyDefinitionId
				Else
					Me._StaffPropertyDefinitionId = CType(Nothing, Integer)
				End If
				Me.SendPropertyChanged("AP_StaffBroker_StaffPropertyDefinition")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.AP_StaffBroker_StaffPropertyDefinition")>  _
Partial Public Class AP_StaffBroker_StaffPropertyDefinition
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _StaffPropertyDefinitionId As Integer
	
	Private _PropertyName As String
	
	Private _PortalId As System.Nullable(Of Integer)
	
	Private _ViewOrder As System.Nullable(Of Short)
	
	Private _Display As System.Nullable(Of Boolean)
	
	Private _PropertyHelp As String
	
	Private _Type As System.Nullable(Of Byte)
	
	Private _AP_StaffBroker_StaffProfiles As EntitySet(Of AP_StaffBroker_StaffProfile)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnStaffPropertyDefinitionIdChanging(value As Integer)
    End Sub
    Partial Private Sub OnStaffPropertyDefinitionIdChanged()
    End Sub
    Partial Private Sub OnPropertyNameChanging(value As String)
    End Sub
    Partial Private Sub OnPropertyNameChanged()
    End Sub
    Partial Private Sub OnPortalIdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPortalIdChanged()
    End Sub
    Partial Private Sub OnViewOrderChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnViewOrderChanged()
    End Sub
    Partial Private Sub OnDisplayChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnDisplayChanged()
    End Sub
    Partial Private Sub OnPropertyHelpChanging(value As String)
    End Sub
    Partial Private Sub OnPropertyHelpChanged()
    End Sub
    Partial Private Sub OnTypeChanging(value As System.Nullable(Of Byte))
    End Sub
    Partial Private Sub OnTypeChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._AP_StaffBroker_StaffProfiles = New EntitySet(Of AP_StaffBroker_StaffProfile)(AddressOf Me.attach_AP_StaffBroker_StaffProfiles, AddressOf Me.detach_AP_StaffBroker_StaffProfiles)
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_StaffPropertyDefinitionId", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property StaffPropertyDefinitionId() As Integer
		Get
			Return Me._StaffPropertyDefinitionId
		End Get
		Set
			If ((Me._StaffPropertyDefinitionId = value)  _
						= false) Then
				Me.OnStaffPropertyDefinitionIdChanging(value)
				Me.SendPropertyChanging
				Me._StaffPropertyDefinitionId = value
				Me.SendPropertyChanged("StaffPropertyDefinitionId")
				Me.OnStaffPropertyDefinitionIdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PropertyName", DbType:="VarChar(MAX) NOT NULL", CanBeNull:=false)>  _
	Public Property PropertyName() As String
		Get
			Return Me._PropertyName
		End Get
		Set
			If (String.Equals(Me._PropertyName, value) = false) Then
				Me.OnPropertyNameChanging(value)
				Me.SendPropertyChanging
				Me._PropertyName = value
				Me.SendPropertyChanged("PropertyName")
				Me.OnPropertyNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PortalId", DbType:="Int")>  _
	Public Property PortalId() As System.Nullable(Of Integer)
		Get
			Return Me._PortalId
		End Get
		Set
			If (Me._PortalId.Equals(value) = false) Then
				Me.OnPortalIdChanging(value)
				Me.SendPropertyChanging
				Me._PortalId = value
				Me.SendPropertyChanged("PortalId")
				Me.OnPortalIdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ViewOrder", DbType:="SmallInt")>  _
	Public Property ViewOrder() As System.Nullable(Of Short)
		Get
			Return Me._ViewOrder
		End Get
		Set
			If (Me._ViewOrder.Equals(value) = false) Then
				Me.OnViewOrderChanging(value)
				Me.SendPropertyChanging
				Me._ViewOrder = value
				Me.SendPropertyChanged("ViewOrder")
				Me.OnViewOrderChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Display", DbType:="Bit")>  _
	Public Property Display() As System.Nullable(Of Boolean)
		Get
			Return Me._Display
		End Get
		Set
			If (Me._Display.Equals(value) = false) Then
				Me.OnDisplayChanging(value)
				Me.SendPropertyChanging
				Me._Display = value
				Me.SendPropertyChanged("Display")
				Me.OnDisplayChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PropertyHelp", DbType:="VarChar(MAX)")>  _
	Public Property PropertyHelp() As String
		Get
			Return Me._PropertyHelp
		End Get
		Set
			If (String.Equals(Me._PropertyHelp, value) = false) Then
				Me.OnPropertyHelpChanging(value)
				Me.SendPropertyChanging
				Me._PropertyHelp = value
				Me.SendPropertyChanged("PropertyHelp")
				Me.OnPropertyHelpChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Type", DbType:="TinyInt")>  _
	Public Property Type() As System.Nullable(Of Byte)
		Get
			Return Me._Type
		End Get
		Set
			If (Me._Type.Equals(value) = false) Then
				Me.OnTypeChanging(value)
				Me.SendPropertyChanging
				Me._Type = value
				Me.SendPropertyChanged("Type")
				Me.OnTypeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="AP_StaffBroker_StaffPropertyDefinition_AP_StaffBroker_StaffProfile", Storage:="_AP_StaffBroker_StaffProfiles", ThisKey:="StaffPropertyDefinitionId", OtherKey:="StaffPropertyDefinitionId")>  _
	Public Property AP_StaffBroker_StaffProfiles() As EntitySet(Of AP_StaffBroker_StaffProfile)
		Get
			Return Me._AP_StaffBroker_StaffProfiles
		End Get
		Set
			Me._AP_StaffBroker_StaffProfiles.Assign(value)
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_AP_StaffBroker_StaffProfiles(ByVal entity As AP_StaffBroker_StaffProfile)
		Me.SendPropertyChanging
		entity.AP_StaffBroker_StaffPropertyDefinition = Me
	End Sub
	
	Private Sub detach_AP_StaffBroker_StaffProfiles(ByVal entity As AP_StaffBroker_StaffProfile)
		Me.SendPropertyChanging
		entity.AP_StaffBroker_StaffPropertyDefinition = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.AP_StaffBroker_StaffType")>  _
Partial Public Class AP_StaffBroker_StaffType
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _StaffTypeId As Short
	
	Private _Name As String
	
	Private _PortalId As System.Nullable(Of Integer)
	
	Private _AP_StaffBroker_Staffs As EntitySet(Of AP_StaffBroker_Staff)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnStaffTypeIdChanging(value As Short)
    End Sub
    Partial Private Sub OnStaffTypeIdChanged()
    End Sub
    Partial Private Sub OnNameChanging(value As String)
    End Sub
    Partial Private Sub OnNameChanged()
    End Sub
    Partial Private Sub OnPortalIdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPortalIdChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._AP_StaffBroker_Staffs = New EntitySet(Of AP_StaffBroker_Staff)(AddressOf Me.attach_AP_StaffBroker_Staffs, AddressOf Me.detach_AP_StaffBroker_Staffs)
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_StaffTypeId", AutoSync:=AutoSync.OnInsert, DbType:="SmallInt NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property StaffTypeId() As Short
		Get
			Return Me._StaffTypeId
		End Get
		Set
			If ((Me._StaffTypeId = value)  _
						= false) Then
				Me.OnStaffTypeIdChanging(value)
				Me.SendPropertyChanging
				Me._StaffTypeId = value
				Me.SendPropertyChanged("StaffTypeId")
				Me.OnStaffTypeIdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Name", DbType:="NVarChar(50)")>  _
	Public Property Name() As String
		Get
			Return Me._Name
		End Get
		Set
			If (String.Equals(Me._Name, value) = false) Then
				Me.OnNameChanging(value)
				Me.SendPropertyChanging
				Me._Name = value
				Me.SendPropertyChanged("Name")
				Me.OnNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PortalId", DbType:="Int")>  _
	Public Property PortalId() As System.Nullable(Of Integer)
		Get
			Return Me._PortalId
		End Get
		Set
			If (Me._PortalId.Equals(value) = false) Then
				Me.OnPortalIdChanging(value)
				Me.SendPropertyChanging
				Me._PortalId = value
				Me.SendPropertyChanged("PortalId")
				Me.OnPortalIdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="AP_StaffBroker_StaffType_AP_StaffBroker_Staff", Storage:="_AP_StaffBroker_Staffs", ThisKey:="StaffTypeId", OtherKey:="StaffTypeId")>  _
	Public Property AP_StaffBroker_Staffs() As EntitySet(Of AP_StaffBroker_Staff)
		Get
			Return Me._AP_StaffBroker_Staffs
		End Get
		Set
			Me._AP_StaffBroker_Staffs.Assign(value)
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_AP_StaffBroker_Staffs(ByVal entity As AP_StaffBroker_Staff)
		Me.SendPropertyChanging
		entity.AP_StaffBroker_StaffType = Me
	End Sub
	
	Private Sub detach_AP_StaffBroker_Staffs(ByVal entity As AP_StaffBroker_Staff)
		Me.SendPropertyChanging
		entity.AP_StaffBroker_StaffType = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.AP_StaffBroker_LeaderMeta")>  _
Partial Public Class AP_StaffBroker_LeaderMeta
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _LeaderMetaId As Long
	
	Private _UserId As Integer
	
	Private _LeaderId As Integer
	
	Private _DelegateId As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnLeaderMetaIdChanging(value As Long)
    End Sub
    Partial Private Sub OnLeaderMetaIdChanged()
    End Sub
    Partial Private Sub OnUserIdChanging(value As Integer)
    End Sub
    Partial Private Sub OnUserIdChanged()
    End Sub
    Partial Private Sub OnLeaderIdChanging(value As Integer)
    End Sub
    Partial Private Sub OnLeaderIdChanged()
    End Sub
    Partial Private Sub OnDelegateIdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnDelegateIdChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LeaderMetaId", AutoSync:=AutoSync.OnInsert, DbType:="BigInt NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property LeaderMetaId() As Long
		Get
			Return Me._LeaderMetaId
		End Get
		Set
			If ((Me._LeaderMetaId = value)  _
						= false) Then
				Me.OnLeaderMetaIdChanging(value)
				Me.SendPropertyChanging
				Me._LeaderMetaId = value
				Me.SendPropertyChanged("LeaderMetaId")
				Me.OnLeaderMetaIdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UserId", DbType:="Int NOT NULL")>  _
	Public Property UserId() As Integer
		Get
			Return Me._UserId
		End Get
		Set
			If ((Me._UserId = value)  _
						= false) Then
				Me.OnUserIdChanging(value)
				Me.SendPropertyChanging
				Me._UserId = value
				Me.SendPropertyChanged("UserId")
				Me.OnUserIdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LeaderId", DbType:="Int NOT NULL")>  _
	Public Property LeaderId() As Integer
		Get
			Return Me._LeaderId
		End Get
		Set
			If ((Me._LeaderId = value)  _
						= false) Then
				Me.OnLeaderIdChanging(value)
				Me.SendPropertyChanging
				Me._LeaderId = value
				Me.SendPropertyChanged("LeaderId")
				Me.OnLeaderIdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DelegateId", DbType:="Int")>  _
	Public Property DelegateId() As System.Nullable(Of Integer)
		Get
			Return Me._DelegateId
		End Get
		Set
			If (Me._DelegateId.Equals(value) = false) Then
				Me.OnDelegateIdChanging(value)
				Me.SendPropertyChanging
				Me._DelegateId = value
				Me.SendPropertyChanged("DelegateId")
				Me.OnDelegateIdChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Agape_Staff_Budgets")>  _
Partial Public Class Agape_Staff_Budget
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _BudgetId As Integer
	
	Private _GrossSalary As Decimal
	
	Private _Conference1 As String
	
	Private _Conference1Cost As Short
	
	Private _Conference2 As String
	
	Private _Conference2Cost As Short
	
	Private _Conference3 As String
	
	Private _Conference3Cost As Short
	
	Private _Conference4 As String
	
	Private _Conference4Cost As Short
	
	Private _Conference5 As String
	
	Private _Conference5Cost As Short
	
	Private _Conference6 As String
	
	Private _Conference6Cost As Short
	
	Private _Conference7 As String
	
	Private _Conference7Cost As Short
	
	Private _Conference8 As String
	
	Private _Conference8Cost As Short
	
	Private _Printing As Short
	
	Private _Postage As Short
	
	Private _Literature As Short
	
	Private _PublicTransport As Short
	
	Private _CarMileage As Short
	
	Private _Subsistence As Short
	
	Private _PhoneCalls As Short
	
	Private _MobilePhone As Short
	
	Private _PhoneRental As Short
	
	Private _Entertaining As Short
	
	Private _Other As Short
	
	Private _Transfers As Short
	
	Private _CurrentSupport As Short
	
	Private _SubmittedDate As System.Nullable(Of Date)
	
	Private _Pension As Decimal
	
	Private _Cap As System.Nullable(Of Decimal)
	
	Private _Min As System.Nullable(Of Decimal)
	
	Private _UserID As System.Nullable(Of Integer)
	
	Private _PortalID As System.Nullable(Of Integer)
	
	Private _StaffId As System.Nullable(Of Long)
	
	Private _StartYear As System.Nullable(Of Short)
	
	Private _UpdatePeriod As System.Nullable(Of Byte)
	
	Private _Status As System.Nullable(Of Byte)
	
	Private _Approver As System.Nullable(Of Integer)
	
	Private _Split As System.Nullable(Of Double)
	
	Private _NIPaid As System.Nullable(Of Decimal)
	
	Private _TBWriteBack As System.Nullable(Of Byte)
	
	Private _PensionSplit As System.Nullable(Of Double)
	
	Private _StaffName As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnBudgetIdChanging(value As Integer)
    End Sub
    Partial Private Sub OnBudgetIdChanged()
    End Sub
    Partial Private Sub OnGrossSalaryChanging(value As Decimal)
    End Sub
    Partial Private Sub OnGrossSalaryChanged()
    End Sub
    Partial Private Sub OnConference1Changing(value As String)
    End Sub
    Partial Private Sub OnConference1Changed()
    End Sub
    Partial Private Sub OnConference1CostChanging(value As Short)
    End Sub
    Partial Private Sub OnConference1CostChanged()
    End Sub
    Partial Private Sub OnConference2Changing(value As String)
    End Sub
    Partial Private Sub OnConference2Changed()
    End Sub
    Partial Private Sub OnConference2CostChanging(value As Short)
    End Sub
    Partial Private Sub OnConference2CostChanged()
    End Sub
    Partial Private Sub OnConference3Changing(value As String)
    End Sub
    Partial Private Sub OnConference3Changed()
    End Sub
    Partial Private Sub OnConference3CostChanging(value As Short)
    End Sub
    Partial Private Sub OnConference3CostChanged()
    End Sub
    Partial Private Sub OnConference4Changing(value As String)
    End Sub
    Partial Private Sub OnConference4Changed()
    End Sub
    Partial Private Sub OnConference4CostChanging(value As Short)
    End Sub
    Partial Private Sub OnConference4CostChanged()
    End Sub
    Partial Private Sub OnConference5Changing(value As String)
    End Sub
    Partial Private Sub OnConference5Changed()
    End Sub
    Partial Private Sub OnConference5CostChanging(value As Short)
    End Sub
    Partial Private Sub OnConference5CostChanged()
    End Sub
    Partial Private Sub OnConference6Changing(value As String)
    End Sub
    Partial Private Sub OnConference6Changed()
    End Sub
    Partial Private Sub OnConference6CostChanging(value As Short)
    End Sub
    Partial Private Sub OnConference6CostChanged()
    End Sub
    Partial Private Sub OnConference7Changing(value As String)
    End Sub
    Partial Private Sub OnConference7Changed()
    End Sub
    Partial Private Sub OnConference7CostChanging(value As Short)
    End Sub
    Partial Private Sub OnConference7CostChanged()
    End Sub
    Partial Private Sub OnConference8Changing(value As String)
    End Sub
    Partial Private Sub OnConference8Changed()
    End Sub
    Partial Private Sub OnConference8CostChanging(value As Short)
    End Sub
    Partial Private Sub OnConference8CostChanged()
    End Sub
    Partial Private Sub OnPrintingChanging(value As Short)
    End Sub
    Partial Private Sub OnPrintingChanged()
    End Sub
    Partial Private Sub OnPostageChanging(value As Short)
    End Sub
    Partial Private Sub OnPostageChanged()
    End Sub
    Partial Private Sub OnLiteratureChanging(value As Short)
    End Sub
    Partial Private Sub OnLiteratureChanged()
    End Sub
    Partial Private Sub OnPublicTransportChanging(value As Short)
    End Sub
    Partial Private Sub OnPublicTransportChanged()
    End Sub
    Partial Private Sub OnCarMileageChanging(value As Short)
    End Sub
    Partial Private Sub OnCarMileageChanged()
    End Sub
    Partial Private Sub OnSubsistenceChanging(value As Short)
    End Sub
    Partial Private Sub OnSubsistenceChanged()
    End Sub
    Partial Private Sub OnPhoneCallsChanging(value As Short)
    End Sub
    Partial Private Sub OnPhoneCallsChanged()
    End Sub
    Partial Private Sub OnMobilePhoneChanging(value As Short)
    End Sub
    Partial Private Sub OnMobilePhoneChanged()
    End Sub
    Partial Private Sub OnPhoneRentalChanging(value As Short)
    End Sub
    Partial Private Sub OnPhoneRentalChanged()
    End Sub
    Partial Private Sub OnEntertainingChanging(value As Short)
    End Sub
    Partial Private Sub OnEntertainingChanged()
    End Sub
    Partial Private Sub OnOtherChanging(value As Short)
    End Sub
    Partial Private Sub OnOtherChanged()
    End Sub
    Partial Private Sub OnTransfersChanging(value As Short)
    End Sub
    Partial Private Sub OnTransfersChanged()
    End Sub
    Partial Private Sub OnCurrentSupportChanging(value As Short)
    End Sub
    Partial Private Sub OnCurrentSupportChanged()
    End Sub
    Partial Private Sub OnSubmittedDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnSubmittedDateChanged()
    End Sub
    Partial Private Sub OnPensionChanging(value As Decimal)
    End Sub
    Partial Private Sub OnPensionChanged()
    End Sub
    Partial Private Sub OnCapChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnCapChanged()
    End Sub
    Partial Private Sub OnMinChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnMinChanged()
    End Sub
    Partial Private Sub OnUserIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnUserIDChanged()
    End Sub
    Partial Private Sub OnPortalIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPortalIDChanged()
    End Sub
    Partial Private Sub OnStaffIdChanging(value As System.Nullable(Of Long))
    End Sub
    Partial Private Sub OnStaffIdChanged()
    End Sub
    Partial Private Sub OnStartYearChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnStartYearChanged()
    End Sub
    Partial Private Sub OnUpdatePeriodChanging(value As System.Nullable(Of Byte))
    End Sub
    Partial Private Sub OnUpdatePeriodChanged()
    End Sub
    Partial Private Sub OnStatusChanging(value As System.Nullable(Of Byte))
    End Sub
    Partial Private Sub OnStatusChanged()
    End Sub
    Partial Private Sub OnApproverChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnApproverChanged()
    End Sub
    Partial Private Sub OnSplitChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnSplitChanged()
    End Sub
    Partial Private Sub OnNIPaidChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnNIPaidChanged()
    End Sub
    Partial Private Sub OnTBWriteBackChanging(value As System.Nullable(Of Byte))
    End Sub
    Partial Private Sub OnTBWriteBackChanged()
    End Sub
    Partial Private Sub OnPensionSplitChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnPensionSplitChanged()
    End Sub
    Partial Private Sub OnStaffNameChanging(value As String)
    End Sub
    Partial Private Sub OnStaffNameChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BudgetId", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property BudgetId() As Integer
		Get
			Return Me._BudgetId
		End Get
		Set
			If ((Me._BudgetId = value)  _
						= false) Then
				Me.OnBudgetIdChanging(value)
				Me.SendPropertyChanging
				Me._BudgetId = value
				Me.SendPropertyChanged("BudgetId")
				Me.OnBudgetIdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GrossSalary", DbType:="SmallMoney NOT NULL")>  _
	Public Property GrossSalary() As Decimal
		Get
			Return Me._GrossSalary
		End Get
		Set
			If ((Me._GrossSalary = value)  _
						= false) Then
				Me.OnGrossSalaryChanging(value)
				Me.SendPropertyChanging
				Me._GrossSalary = value
				Me.SendPropertyChanged("GrossSalary")
				Me.OnGrossSalaryChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Conference1", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property Conference1() As String
		Get
			Return Me._Conference1
		End Get
		Set
			If (String.Equals(Me._Conference1, value) = false) Then
				Me.OnConference1Changing(value)
				Me.SendPropertyChanging
				Me._Conference1 = value
				Me.SendPropertyChanged("Conference1")
				Me.OnConference1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Conference1Cost", DbType:="SmallInt NOT NULL")>  _
	Public Property Conference1Cost() As Short
		Get
			Return Me._Conference1Cost
		End Get
		Set
			If ((Me._Conference1Cost = value)  _
						= false) Then
				Me.OnConference1CostChanging(value)
				Me.SendPropertyChanging
				Me._Conference1Cost = value
				Me.SendPropertyChanged("Conference1Cost")
				Me.OnConference1CostChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Conference2", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property Conference2() As String
		Get
			Return Me._Conference2
		End Get
		Set
			If (String.Equals(Me._Conference2, value) = false) Then
				Me.OnConference2Changing(value)
				Me.SendPropertyChanging
				Me._Conference2 = value
				Me.SendPropertyChanged("Conference2")
				Me.OnConference2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Conference2Cost", DbType:="SmallInt NOT NULL")>  _
	Public Property Conference2Cost() As Short
		Get
			Return Me._Conference2Cost
		End Get
		Set
			If ((Me._Conference2Cost = value)  _
						= false) Then
				Me.OnConference2CostChanging(value)
				Me.SendPropertyChanging
				Me._Conference2Cost = value
				Me.SendPropertyChanged("Conference2Cost")
				Me.OnConference2CostChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Conference3", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property Conference3() As String
		Get
			Return Me._Conference3
		End Get
		Set
			If (String.Equals(Me._Conference3, value) = false) Then
				Me.OnConference3Changing(value)
				Me.SendPropertyChanging
				Me._Conference3 = value
				Me.SendPropertyChanged("Conference3")
				Me.OnConference3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Conference3Cost", DbType:="SmallInt NOT NULL")>  _
	Public Property Conference3Cost() As Short
		Get
			Return Me._Conference3Cost
		End Get
		Set
			If ((Me._Conference3Cost = value)  _
						= false) Then
				Me.OnConference3CostChanging(value)
				Me.SendPropertyChanging
				Me._Conference3Cost = value
				Me.SendPropertyChanged("Conference3Cost")
				Me.OnConference3CostChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Conference4", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property Conference4() As String
		Get
			Return Me._Conference4
		End Get
		Set
			If (String.Equals(Me._Conference4, value) = false) Then
				Me.OnConference4Changing(value)
				Me.SendPropertyChanging
				Me._Conference4 = value
				Me.SendPropertyChanged("Conference4")
				Me.OnConference4Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Conference4Cost", DbType:="SmallInt NOT NULL")>  _
	Public Property Conference4Cost() As Short
		Get
			Return Me._Conference4Cost
		End Get
		Set
			If ((Me._Conference4Cost = value)  _
						= false) Then
				Me.OnConference4CostChanging(value)
				Me.SendPropertyChanging
				Me._Conference4Cost = value
				Me.SendPropertyChanged("Conference4Cost")
				Me.OnConference4CostChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Conference5", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property Conference5() As String
		Get
			Return Me._Conference5
		End Get
		Set
			If (String.Equals(Me._Conference5, value) = false) Then
				Me.OnConference5Changing(value)
				Me.SendPropertyChanging
				Me._Conference5 = value
				Me.SendPropertyChanged("Conference5")
				Me.OnConference5Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Conference5Cost", DbType:="SmallInt NOT NULL")>  _
	Public Property Conference5Cost() As Short
		Get
			Return Me._Conference5Cost
		End Get
		Set
			If ((Me._Conference5Cost = value)  _
						= false) Then
				Me.OnConference5CostChanging(value)
				Me.SendPropertyChanging
				Me._Conference5Cost = value
				Me.SendPropertyChanged("Conference5Cost")
				Me.OnConference5CostChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Conference6", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property Conference6() As String
		Get
			Return Me._Conference6
		End Get
		Set
			If (String.Equals(Me._Conference6, value) = false) Then
				Me.OnConference6Changing(value)
				Me.SendPropertyChanging
				Me._Conference6 = value
				Me.SendPropertyChanged("Conference6")
				Me.OnConference6Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Conference6Cost", DbType:="SmallInt NOT NULL")>  _
	Public Property Conference6Cost() As Short
		Get
			Return Me._Conference6Cost
		End Get
		Set
			If ((Me._Conference6Cost = value)  _
						= false) Then
				Me.OnConference6CostChanging(value)
				Me.SendPropertyChanging
				Me._Conference6Cost = value
				Me.SendPropertyChanged("Conference6Cost")
				Me.OnConference6CostChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Conference7", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property Conference7() As String
		Get
			Return Me._Conference7
		End Get
		Set
			If (String.Equals(Me._Conference7, value) = false) Then
				Me.OnConference7Changing(value)
				Me.SendPropertyChanging
				Me._Conference7 = value
				Me.SendPropertyChanged("Conference7")
				Me.OnConference7Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Conference7Cost", DbType:="SmallInt NOT NULL")>  _
	Public Property Conference7Cost() As Short
		Get
			Return Me._Conference7Cost
		End Get
		Set
			If ((Me._Conference7Cost = value)  _
						= false) Then
				Me.OnConference7CostChanging(value)
				Me.SendPropertyChanging
				Me._Conference7Cost = value
				Me.SendPropertyChanged("Conference7Cost")
				Me.OnConference7CostChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Conference8", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property Conference8() As String
		Get
			Return Me._Conference8
		End Get
		Set
			If (String.Equals(Me._Conference8, value) = false) Then
				Me.OnConference8Changing(value)
				Me.SendPropertyChanging
				Me._Conference8 = value
				Me.SendPropertyChanged("Conference8")
				Me.OnConference8Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Conference8Cost", DbType:="SmallInt NOT NULL")>  _
	Public Property Conference8Cost() As Short
		Get
			Return Me._Conference8Cost
		End Get
		Set
			If ((Me._Conference8Cost = value)  _
						= false) Then
				Me.OnConference8CostChanging(value)
				Me.SendPropertyChanging
				Me._Conference8Cost = value
				Me.SendPropertyChanged("Conference8Cost")
				Me.OnConference8CostChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Printing", DbType:="SmallInt NOT NULL")>  _
	Public Property Printing() As Short
		Get
			Return Me._Printing
		End Get
		Set
			If ((Me._Printing = value)  _
						= false) Then
				Me.OnPrintingChanging(value)
				Me.SendPropertyChanging
				Me._Printing = value
				Me.SendPropertyChanged("Printing")
				Me.OnPrintingChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Postage", DbType:="SmallInt NOT NULL")>  _
	Public Property Postage() As Short
		Get
			Return Me._Postage
		End Get
		Set
			If ((Me._Postage = value)  _
						= false) Then
				Me.OnPostageChanging(value)
				Me.SendPropertyChanging
				Me._Postage = value
				Me.SendPropertyChanged("Postage")
				Me.OnPostageChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Literature", DbType:="SmallInt NOT NULL")>  _
	Public Property Literature() As Short
		Get
			Return Me._Literature
		End Get
		Set
			If ((Me._Literature = value)  _
						= false) Then
				Me.OnLiteratureChanging(value)
				Me.SendPropertyChanging
				Me._Literature = value
				Me.SendPropertyChanged("Literature")
				Me.OnLiteratureChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PublicTransport", DbType:="SmallInt NOT NULL")>  _
	Public Property PublicTransport() As Short
		Get
			Return Me._PublicTransport
		End Get
		Set
			If ((Me._PublicTransport = value)  _
						= false) Then
				Me.OnPublicTransportChanging(value)
				Me.SendPropertyChanging
				Me._PublicTransport = value
				Me.SendPropertyChanged("PublicTransport")
				Me.OnPublicTransportChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CarMileage", DbType:="SmallInt NOT NULL")>  _
	Public Property CarMileage() As Short
		Get
			Return Me._CarMileage
		End Get
		Set
			If ((Me._CarMileage = value)  _
						= false) Then
				Me.OnCarMileageChanging(value)
				Me.SendPropertyChanging
				Me._CarMileage = value
				Me.SendPropertyChanged("CarMileage")
				Me.OnCarMileageChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Subsistence", DbType:="SmallInt NOT NULL")>  _
	Public Property Subsistence() As Short
		Get
			Return Me._Subsistence
		End Get
		Set
			If ((Me._Subsistence = value)  _
						= false) Then
				Me.OnSubsistenceChanging(value)
				Me.SendPropertyChanging
				Me._Subsistence = value
				Me.SendPropertyChanged("Subsistence")
				Me.OnSubsistenceChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PhoneCalls", DbType:="SmallInt NOT NULL")>  _
	Public Property PhoneCalls() As Short
		Get
			Return Me._PhoneCalls
		End Get
		Set
			If ((Me._PhoneCalls = value)  _
						= false) Then
				Me.OnPhoneCallsChanging(value)
				Me.SendPropertyChanging
				Me._PhoneCalls = value
				Me.SendPropertyChanged("PhoneCalls")
				Me.OnPhoneCallsChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MobilePhone", DbType:="SmallInt NOT NULL")>  _
	Public Property MobilePhone() As Short
		Get
			Return Me._MobilePhone
		End Get
		Set
			If ((Me._MobilePhone = value)  _
						= false) Then
				Me.OnMobilePhoneChanging(value)
				Me.SendPropertyChanging
				Me._MobilePhone = value
				Me.SendPropertyChanged("MobilePhone")
				Me.OnMobilePhoneChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PhoneRental", DbType:="SmallInt NOT NULL")>  _
	Public Property PhoneRental() As Short
		Get
			Return Me._PhoneRental
		End Get
		Set
			If ((Me._PhoneRental = value)  _
						= false) Then
				Me.OnPhoneRentalChanging(value)
				Me.SendPropertyChanging
				Me._PhoneRental = value
				Me.SendPropertyChanged("PhoneRental")
				Me.OnPhoneRentalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Entertaining", DbType:="SmallInt NOT NULL")>  _
	Public Property Entertaining() As Short
		Get
			Return Me._Entertaining
		End Get
		Set
			If ((Me._Entertaining = value)  _
						= false) Then
				Me.OnEntertainingChanging(value)
				Me.SendPropertyChanging
				Me._Entertaining = value
				Me.SendPropertyChanged("Entertaining")
				Me.OnEntertainingChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Other", DbType:="SmallInt NOT NULL")>  _
	Public Property Other() As Short
		Get
			Return Me._Other
		End Get
		Set
			If ((Me._Other = value)  _
						= false) Then
				Me.OnOtherChanging(value)
				Me.SendPropertyChanging
				Me._Other = value
				Me.SendPropertyChanged("Other")
				Me.OnOtherChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Transfers", DbType:="SmallInt NOT NULL")>  _
	Public Property Transfers() As Short
		Get
			Return Me._Transfers
		End Get
		Set
			If ((Me._Transfers = value)  _
						= false) Then
				Me.OnTransfersChanging(value)
				Me.SendPropertyChanging
				Me._Transfers = value
				Me.SendPropertyChanged("Transfers")
				Me.OnTransfersChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CurrentSupport", DbType:="SmallInt NOT NULL")>  _
	Public Property CurrentSupport() As Short
		Get
			Return Me._CurrentSupport
		End Get
		Set
			If ((Me._CurrentSupport = value)  _
						= false) Then
				Me.OnCurrentSupportChanging(value)
				Me.SendPropertyChanging
				Me._CurrentSupport = value
				Me.SendPropertyChanged("CurrentSupport")
				Me.OnCurrentSupportChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SubmittedDate", DbType:="DateTime")>  _
	Public Property SubmittedDate() As System.Nullable(Of Date)
		Get
			Return Me._SubmittedDate
		End Get
		Set
			If (Me._SubmittedDate.Equals(value) = false) Then
				Me.OnSubmittedDateChanging(value)
				Me.SendPropertyChanging
				Me._SubmittedDate = value
				Me.SendPropertyChanged("SubmittedDate")
				Me.OnSubmittedDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Pension", DbType:="SmallMoney NOT NULL")>  _
	Public Property Pension() As Decimal
		Get
			Return Me._Pension
		End Get
		Set
			If ((Me._Pension = value)  _
						= false) Then
				Me.OnPensionChanging(value)
				Me.SendPropertyChanging
				Me._Pension = value
				Me.SendPropertyChanged("Pension")
				Me.OnPensionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Cap", DbType:="SmallMoney")>  _
	Public Property Cap() As System.Nullable(Of Decimal)
		Get
			Return Me._Cap
		End Get
		Set
			If (Me._Cap.Equals(value) = false) Then
				Me.OnCapChanging(value)
				Me.SendPropertyChanging
				Me._Cap = value
				Me.SendPropertyChanged("Cap")
				Me.OnCapChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Min", DbType:="SmallMoney")>  _
	Public Property Min() As System.Nullable(Of Decimal)
		Get
			Return Me._Min
		End Get
		Set
			If (Me._Min.Equals(value) = false) Then
				Me.OnMinChanging(value)
				Me.SendPropertyChanging
				Me._Min = value
				Me.SendPropertyChanged("Min")
				Me.OnMinChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UserID", DbType:="Int")>  _
	Public Property UserID() As System.Nullable(Of Integer)
		Get
			Return Me._UserID
		End Get
		Set
			If (Me._UserID.Equals(value) = false) Then
				Me.OnUserIDChanging(value)
				Me.SendPropertyChanging
				Me._UserID = value
				Me.SendPropertyChanged("UserID")
				Me.OnUserIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PortalID", DbType:="Int")>  _
	Public Property PortalID() As System.Nullable(Of Integer)
		Get
			Return Me._PortalID
		End Get
		Set
			If (Me._PortalID.Equals(value) = false) Then
				Me.OnPortalIDChanging(value)
				Me.SendPropertyChanging
				Me._PortalID = value
				Me.SendPropertyChanged("PortalID")
				Me.OnPortalIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_StaffId", DbType:="BigInt")>  _
	Public Property StaffId() As System.Nullable(Of Long)
		Get
			Return Me._StaffId
		End Get
		Set
			If (Me._StaffId.Equals(value) = false) Then
				Me.OnStaffIdChanging(value)
				Me.SendPropertyChanging
				Me._StaffId = value
				Me.SendPropertyChanged("StaffId")
				Me.OnStaffIdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_StartYear", DbType:="SmallInt")>  _
	Public Property StartYear() As System.Nullable(Of Short)
		Get
			Return Me._StartYear
		End Get
		Set
			If (Me._StartYear.Equals(value) = false) Then
				Me.OnStartYearChanging(value)
				Me.SendPropertyChanging
				Me._StartYear = value
				Me.SendPropertyChanged("StartYear")
				Me.OnStartYearChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UpdatePeriod", DbType:="TinyInt")>  _
	Public Property UpdatePeriod() As System.Nullable(Of Byte)
		Get
			Return Me._UpdatePeriod
		End Get
		Set
			If (Me._UpdatePeriod.Equals(value) = false) Then
				Me.OnUpdatePeriodChanging(value)
				Me.SendPropertyChanging
				Me._UpdatePeriod = value
				Me.SendPropertyChanged("UpdatePeriod")
				Me.OnUpdatePeriodChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Status", DbType:="TinyInt")>  _
	Public Property Status() As System.Nullable(Of Byte)
		Get
			Return Me._Status
		End Get
		Set
			If (Me._Status.Equals(value) = false) Then
				Me.OnStatusChanging(value)
				Me.SendPropertyChanging
				Me._Status = value
				Me.SendPropertyChanged("Status")
				Me.OnStatusChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Approver", DbType:="Int")>  _
	Public Property Approver() As System.Nullable(Of Integer)
		Get
			Return Me._Approver
		End Get
		Set
			If (Me._Approver.Equals(value) = false) Then
				Me.OnApproverChanging(value)
				Me.SendPropertyChanging
				Me._Approver = value
				Me.SendPropertyChanged("Approver")
				Me.OnApproverChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Split", DbType:="Float")>  _
	Public Property Split() As System.Nullable(Of Double)
		Get
			Return Me._Split
		End Get
		Set
			If (Me._Split.Equals(value) = false) Then
				Me.OnSplitChanging(value)
				Me.SendPropertyChanging
				Me._Split = value
				Me.SendPropertyChanged("Split")
				Me.OnSplitChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NIPaid", DbType:="SmallMoney")>  _
	Public Property NIPaid() As System.Nullable(Of Decimal)
		Get
			Return Me._NIPaid
		End Get
		Set
			If (Me._NIPaid.Equals(value) = false) Then
				Me.OnNIPaidChanging(value)
				Me.SendPropertyChanging
				Me._NIPaid = value
				Me.SendPropertyChanged("NIPaid")
				Me.OnNIPaidChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TBWriteBack", DbType:="TinyInt")>  _
	Public Property TBWriteBack() As System.Nullable(Of Byte)
		Get
			Return Me._TBWriteBack
		End Get
		Set
			If (Me._TBWriteBack.Equals(value) = false) Then
				Me.OnTBWriteBackChanging(value)
				Me.SendPropertyChanging
				Me._TBWriteBack = value
				Me.SendPropertyChanged("TBWriteBack")
				Me.OnTBWriteBackChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PensionSplit", DbType:="Float")>  _
	Public Property PensionSplit() As System.Nullable(Of Double)
		Get
			Return Me._PensionSplit
		End Get
		Set
			If (Me._PensionSplit.Equals(value) = false) Then
				Me.OnPensionSplitChanging(value)
				Me.SendPropertyChanging
				Me._PensionSplit = value
				Me.SendPropertyChanged("PensionSplit")
				Me.OnPensionSplitChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_StaffName", DbType:="NVarChar(100)")>  _
	Public Property StaffName() As String
		Get
			Return Me._StaffName
		End Get
		Set
			If (String.Equals(Me._StaffName, value) = false) Then
				Me.OnStaffNameChanging(value)
				Me.SendPropertyChanging
				Me._StaffName = value
				Me.SendPropertyChanged("StaffName")
				Me.OnStaffNameChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.AP_StaffBroker_Templates")>  _
Partial Public Class AP_StaffBroker_Template
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _TemplateId As Long
	
	Private _TemplateName As String
	
	Private _TemplateDescription As String
	
	Private _TemplateHTML As String
	
	Private _PortalId As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnTemplateIdChanging(value As Long)
    End Sub
    Partial Private Sub OnTemplateIdChanged()
    End Sub
    Partial Private Sub OnTemplateNameChanging(value As String)
    End Sub
    Partial Private Sub OnTemplateNameChanged()
    End Sub
    Partial Private Sub OnTemplateDescriptionChanging(value As String)
    End Sub
    Partial Private Sub OnTemplateDescriptionChanged()
    End Sub
    Partial Private Sub OnTemplateHTMLChanging(value As String)
    End Sub
    Partial Private Sub OnTemplateHTMLChanged()
    End Sub
    Partial Private Sub OnPortalIdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPortalIdChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TemplateId", AutoSync:=AutoSync.OnInsert, DbType:="BigInt NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property TemplateId() As Long
		Get
			Return Me._TemplateId
		End Get
		Set
			If ((Me._TemplateId = value)  _
						= false) Then
				Me.OnTemplateIdChanging(value)
				Me.SendPropertyChanging
				Me._TemplateId = value
				Me.SendPropertyChanged("TemplateId")
				Me.OnTemplateIdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TemplateName", DbType:="NVarChar(80)")>  _
	Public Property TemplateName() As String
		Get
			Return Me._TemplateName
		End Get
		Set
			If (String.Equals(Me._TemplateName, value) = false) Then
				Me.OnTemplateNameChanging(value)
				Me.SendPropertyChanging
				Me._TemplateName = value
				Me.SendPropertyChanged("TemplateName")
				Me.OnTemplateNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TemplateDescription", DbType:="NVarChar(MAX)")>  _
	Public Property TemplateDescription() As String
		Get
			Return Me._TemplateDescription
		End Get
		Set
			If (String.Equals(Me._TemplateDescription, value) = false) Then
				Me.OnTemplateDescriptionChanging(value)
				Me.SendPropertyChanging
				Me._TemplateDescription = value
				Me.SendPropertyChanged("TemplateDescription")
				Me.OnTemplateDescriptionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TemplateHTML", DbType:="NVarChar(MAX)")>  _
	Public Property TemplateHTML() As String
		Get
			Return Me._TemplateHTML
		End Get
		Set
			If (String.Equals(Me._TemplateHTML, value) = false) Then
				Me.OnTemplateHTMLChanging(value)
				Me.SendPropertyChanging
				Me._TemplateHTML = value
				Me.SendPropertyChanged("TemplateHTML")
				Me.OnTemplateHTMLChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PortalId", DbType:="Int")>  _
	Public Property PortalId() As System.Nullable(Of Integer)
		Get
			Return Me._PortalId
		End Get
		Set
			If (Me._PortalId.Equals(value) = false) Then
				Me.OnPortalIdChanging(value)
				Me.SendPropertyChanging
				Me._PortalId = value
				Me.SendPropertyChanged("PortalId")
				Me.OnPortalIdChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class
