'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.18051
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection


<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="AgapeConnect")>  _
Partial Public Class AgapeWebsiteDataContext
	Inherits System.Data.Linq.DataContext
	
	Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()
	
  #Region "Extensibility Method Definitions"
  Partial Private Sub OnCreated()
  End Sub
  Partial Private Sub InsertUser(instance As User)
    End Sub
  Partial Private Sub UpdateUser(instance As User)
    End Sub
  Partial Private Sub DeleteUser(instance As User)
    End Sub
  Partial Private Sub InsertTabModuleSetting(instance As TabModuleSetting)
    End Sub
  Partial Private Sub UpdateTabModuleSetting(instance As TabModuleSetting)
    End Sub
  Partial Private Sub DeleteTabModuleSetting(instance As TabModuleSetting)
    End Sub
  Partial Private Sub InsertAP_StaffBroker_Department(instance As AP_StaffBroker_Department)
    End Sub
  Partial Private Sub UpdateAP_StaffBroker_Department(instance As AP_StaffBroker_Department)
    End Sub
  Partial Private Sub DeleteAP_StaffBroker_Department(instance As AP_StaffBroker_Department)
    End Sub
  Partial Private Sub InsertAP_StaffBroker_Staff(instance As AP_StaffBroker_Staff)
    End Sub
  Partial Private Sub UpdateAP_StaffBroker_Staff(instance As AP_StaffBroker_Staff)
    End Sub
  Partial Private Sub DeleteAP_StaffBroker_Staff(instance As AP_StaffBroker_Staff)
    End Sub
  Partial Private Sub InsertAP_StaffBroker_StaffProfile(instance As AP_StaffBroker_StaffProfile)
    End Sub
  Partial Private Sub UpdateAP_StaffBroker_StaffProfile(instance As AP_StaffBroker_StaffProfile)
    End Sub
  Partial Private Sub DeleteAP_StaffBroker_StaffProfile(instance As AP_StaffBroker_StaffProfile)
    End Sub
  Partial Private Sub InsertAP_StaffBroker_StaffPropertyDefinition(instance As AP_StaffBroker_StaffPropertyDefinition)
    End Sub
  Partial Private Sub UpdateAP_StaffBroker_StaffPropertyDefinition(instance As AP_StaffBroker_StaffPropertyDefinition)
    End Sub
  Partial Private Sub DeleteAP_StaffBroker_StaffPropertyDefinition(instance As AP_StaffBroker_StaffPropertyDefinition)
    End Sub
  Partial Private Sub InsertAP_StaffBroker_StaffType(instance As AP_StaffBroker_StaffType)
    End Sub
  Partial Private Sub UpdateAP_StaffBroker_StaffType(instance As AP_StaffBroker_StaffType)
    End Sub
  Partial Private Sub DeleteAP_StaffBroker_StaffType(instance As AP_StaffBroker_StaffType)
    End Sub
  Partial Private Sub InsertAP_StaffBroker_LeaderMeta(instance As AP_StaffBroker_LeaderMeta)
    End Sub
  Partial Private Sub UpdateAP_StaffBroker_LeaderMeta(instance As AP_StaffBroker_LeaderMeta)
    End Sub
  Partial Private Sub DeleteAP_StaffBroker_LeaderMeta(instance As AP_StaffBroker_LeaderMeta)
    End Sub
  Partial Private Sub InsertAP_StaffBroker_Template(instance As AP_StaffBroker_Template)
    End Sub
  Partial Private Sub UpdateAP_StaffBroker_Template(instance As AP_StaffBroker_Template)
    End Sub
  Partial Private Sub DeleteAP_StaffBroker_Template(instance As AP_StaffBroker_Template)
    End Sub
  Partial Private Sub InsertAP_Staff_Rmb(instance As AP_Staff_Rmb)
    End Sub
  Partial Private Sub UpdateAP_Staff_Rmb(instance As AP_Staff_Rmb)
    End Sub
  Partial Private Sub DeleteAP_Staff_Rmb(instance As AP_Staff_Rmb)
    End Sub
  Partial Private Sub InsertAP_Staff_RmbLine(instance As AP_Staff_RmbLine)
    End Sub
  Partial Private Sub UpdateAP_Staff_RmbLine(instance As AP_Staff_RmbLine)
    End Sub
  Partial Private Sub DeleteAP_Staff_RmbLine(instance As AP_Staff_RmbLine)
    End Sub
  Partial Private Sub InsertTabModule(instance As TabModule)
    End Sub
  Partial Private Sub UpdateTabModule(instance As TabModule)
    End Sub
  Partial Private Sub DeleteTabModule(instance As TabModule)
    End Sub
  Partial Private Sub InsertTab(instance As Tab)
    End Sub
  Partial Private Sub UpdateTab(instance As Tab)
    End Sub
  Partial Private Sub DeleteTab(instance As Tab)
    End Sub
  #End Region
	
	Public Sub New()
		MyBase.New(Global.Nagape.My.MySettings.Default.agapeukConnectionString, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public ReadOnly Property Users() As System.Data.Linq.Table(Of User)
		Get
			Return Me.GetTable(Of User)
		End Get
	End Property
	
	Public ReadOnly Property TabModuleSettings() As System.Data.Linq.Table(Of TabModuleSetting)
		Get
			Return Me.GetTable(Of TabModuleSetting)
		End Get
	End Property
	
	Public ReadOnly Property AP_StaffBroker_Departments() As System.Data.Linq.Table(Of AP_StaffBroker_Department)
		Get
			Return Me.GetTable(Of AP_StaffBroker_Department)
		End Get
	End Property
	
	Public ReadOnly Property AP_StaffBroker_Staffs() As System.Data.Linq.Table(Of AP_StaffBroker_Staff)
		Get
			Return Me.GetTable(Of AP_StaffBroker_Staff)
		End Get
	End Property
	
	Public ReadOnly Property AP_StaffBroker_StaffProfiles() As System.Data.Linq.Table(Of AP_StaffBroker_StaffProfile)
		Get
			Return Me.GetTable(Of AP_StaffBroker_StaffProfile)
		End Get
	End Property
	
	Public ReadOnly Property AP_StaffBroker_StaffPropertyDefinitions() As System.Data.Linq.Table(Of AP_StaffBroker_StaffPropertyDefinition)
		Get
			Return Me.GetTable(Of AP_StaffBroker_StaffPropertyDefinition)
		End Get
	End Property
	
	Public ReadOnly Property AP_StaffBroker_StaffTypes() As System.Data.Linq.Table(Of AP_StaffBroker_StaffType)
		Get
			Return Me.GetTable(Of AP_StaffBroker_StaffType)
		End Get
	End Property
	
	Public ReadOnly Property AP_StaffBroker_LeaderMetas() As System.Data.Linq.Table(Of AP_StaffBroker_LeaderMeta)
		Get
			Return Me.GetTable(Of AP_StaffBroker_LeaderMeta)
		End Get
	End Property
	
	Public ReadOnly Property AP_StaffBroker_Templates() As System.Data.Linq.Table(Of AP_StaffBroker_Template)
		Get
			Return Me.GetTable(Of AP_StaffBroker_Template)
		End Get
	End Property
	
	Public ReadOnly Property AP_Staff_Rmbs() As System.Data.Linq.Table(Of AP_Staff_Rmb)
		Get
			Return Me.GetTable(Of AP_Staff_Rmb)
		End Get
	End Property
	
	Public ReadOnly Property AP_Staff_RmbLines() As System.Data.Linq.Table(Of AP_Staff_RmbLine)
		Get
			Return Me.GetTable(Of AP_Staff_RmbLine)
		End Get
	End Property
	
	Public ReadOnly Property TabModules() As System.Data.Linq.Table(Of TabModule)
		Get
			Return Me.GetTable(Of TabModule)
		End Get
	End Property
	
	Public ReadOnly Property Tabs() As System.Data.Linq.Table(Of Tab)
		Get
			Return Me.GetTable(Of Tab)
		End Get
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Users")>  _
Partial Public Class User
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _UserID As Integer
	
	Private _Username As String
	
	Private _FirstName As String
	
	Private _LastName As String
	
	Private _IsSuperUser As Boolean
	
	Private _AffiliateId As System.Nullable(Of Integer)
	
	Private _Email As String
	
	Private _DisplayName As String
	
	Private _UpdatePassword As Boolean
	
	Private _AP_Staff_Rmbs As EntitySet(Of AP_Staff_Rmb)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnUserIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnUserIDChanged()
    End Sub
    Partial Private Sub OnUsernameChanging(value As String)
    End Sub
    Partial Private Sub OnUsernameChanged()
    End Sub
    Partial Private Sub OnFirstNameChanging(value As String)
    End Sub
    Partial Private Sub OnFirstNameChanged()
    End Sub
    Partial Private Sub OnLastNameChanging(value As String)
    End Sub
    Partial Private Sub OnLastNameChanged()
    End Sub
    Partial Private Sub OnIsSuperUserChanging(value As Boolean)
    End Sub
    Partial Private Sub OnIsSuperUserChanged()
    End Sub
    Partial Private Sub OnAffiliateIdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnAffiliateIdChanged()
    End Sub
    Partial Private Sub OnEmailChanging(value As String)
    End Sub
    Partial Private Sub OnEmailChanged()
    End Sub
    Partial Private Sub OnDisplayNameChanging(value As String)
    End Sub
    Partial Private Sub OnDisplayNameChanged()
    End Sub
    Partial Private Sub OnUpdatePasswordChanging(value As Boolean)
    End Sub
    Partial Private Sub OnUpdatePasswordChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._AP_Staff_Rmbs = New EntitySet(Of AP_Staff_Rmb)(AddressOf Me.attach_AP_Staff_Rmbs, AddressOf Me.detach_AP_Staff_Rmbs)
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UserID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property UserID() As Integer
		Get
			Return Me._UserID
		End Get
		Set
			If ((Me._UserID = value)  _
						= false) Then
				Me.OnUserIDChanging(value)
				Me.SendPropertyChanging
				Me._UserID = value
				Me.SendPropertyChanged("UserID")
				Me.OnUserIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Username", DbType:="NVarChar(100) NOT NULL", CanBeNull:=false)>  _
	Public Property Username() As String
		Get
			Return Me._Username
		End Get
		Set
			If (String.Equals(Me._Username, value) = false) Then
				Me.OnUsernameChanging(value)
				Me.SendPropertyChanging
				Me._Username = value
				Me.SendPropertyChanged("Username")
				Me.OnUsernameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FirstName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property FirstName() As String
		Get
			Return Me._FirstName
		End Get
		Set
			If (String.Equals(Me._FirstName, value) = false) Then
				Me.OnFirstNameChanging(value)
				Me.SendPropertyChanging
				Me._FirstName = value
				Me.SendPropertyChanged("FirstName")
				Me.OnFirstNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LastName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property LastName() As String
		Get
			Return Me._LastName
		End Get
		Set
			If (String.Equals(Me._LastName, value) = false) Then
				Me.OnLastNameChanging(value)
				Me.SendPropertyChanging
				Me._LastName = value
				Me.SendPropertyChanged("LastName")
				Me.OnLastNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsSuperUser", DbType:="Bit NOT NULL")>  _
	Public Property IsSuperUser() As Boolean
		Get
			Return Me._IsSuperUser
		End Get
		Set
			If ((Me._IsSuperUser = value)  _
						= false) Then
				Me.OnIsSuperUserChanging(value)
				Me.SendPropertyChanging
				Me._IsSuperUser = value
				Me.SendPropertyChanged("IsSuperUser")
				Me.OnIsSuperUserChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AffiliateId", DbType:="Int")>  _
	Public Property AffiliateId() As System.Nullable(Of Integer)
		Get
			Return Me._AffiliateId
		End Get
		Set
			If (Me._AffiliateId.Equals(value) = false) Then
				Me.OnAffiliateIdChanging(value)
				Me.SendPropertyChanging
				Me._AffiliateId = value
				Me.SendPropertyChanged("AffiliateId")
				Me.OnAffiliateIdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Email", DbType:="NVarChar(256)")>  _
	Public Property Email() As String
		Get
			Return Me._Email
		End Get
		Set
			If (String.Equals(Me._Email, value) = false) Then
				Me.OnEmailChanging(value)
				Me.SendPropertyChanging
				Me._Email = value
				Me.SendPropertyChanged("Email")
				Me.OnEmailChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DisplayName", DbType:="NVarChar(128) NOT NULL", CanBeNull:=false)>  _
	Public Property DisplayName() As String
		Get
			Return Me._DisplayName
		End Get
		Set
			If (String.Equals(Me._DisplayName, value) = false) Then
				Me.OnDisplayNameChanging(value)
				Me.SendPropertyChanging
				Me._DisplayName = value
				Me.SendPropertyChanged("DisplayName")
				Me.OnDisplayNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UpdatePassword", DbType:="Bit NOT NULL")>  _
	Public Property UpdatePassword() As Boolean
		Get
			Return Me._UpdatePassword
		End Get
		Set
			If ((Me._UpdatePassword = value)  _
						= false) Then
				Me.OnUpdatePasswordChanging(value)
				Me.SendPropertyChanging
				Me._UpdatePassword = value
				Me.SendPropertyChanged("UpdatePassword")
				Me.OnUpdatePasswordChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="User_AP_Staff_Rmb", Storage:="_AP_Staff_Rmbs", ThisKey:="UserID", OtherKey:="UserId")>  _
	Public Property AP_Staff_Rmbs() As EntitySet(Of AP_Staff_Rmb)
		Get
			Return Me._AP_Staff_Rmbs
		End Get
		Set
			Me._AP_Staff_Rmbs.Assign(value)
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_AP_Staff_Rmbs(ByVal entity As AP_Staff_Rmb)
		Me.SendPropertyChanging
		entity.User = Me
	End Sub
	
	Private Sub detach_AP_Staff_Rmbs(ByVal entity As AP_Staff_Rmb)
		Me.SendPropertyChanging
		entity.User = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.TabModuleSettings")>  _
Partial Public Class TabModuleSetting
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _TabModuleID As Integer
	
	Private _SettingName As String
	
	Private _SettingValue As String
	
	Private _TabModule As EntityRef(Of TabModule)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnTabModuleIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnTabModuleIDChanged()
    End Sub
    Partial Private Sub OnSettingNameChanging(value As String)
    End Sub
    Partial Private Sub OnSettingNameChanged()
    End Sub
    Partial Private Sub OnSettingValueChanging(value As String)
    End Sub
    Partial Private Sub OnSettingValueChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._TabModule = CType(Nothing, EntityRef(Of TabModule))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TabModuleID", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
	Public Property TabModuleID() As Integer
		Get
			Return Me._TabModuleID
		End Get
		Set
			If ((Me._TabModuleID = value)  _
						= false) Then
				If Me._TabModule.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnTabModuleIDChanging(value)
				Me.SendPropertyChanging
				Me._TabModuleID = value
				Me.SendPropertyChanged("TabModuleID")
				Me.OnTabModuleIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SettingName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property SettingName() As String
		Get
			Return Me._SettingName
		End Get
		Set
			If (String.Equals(Me._SettingName, value) = false) Then
				Me.OnSettingNameChanging(value)
				Me.SendPropertyChanging
				Me._SettingName = value
				Me.SendPropertyChanged("SettingName")
				Me.OnSettingNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SettingValue", DbType:="NVarChar(2000) NOT NULL", CanBeNull:=false)>  _
	Public Property SettingValue() As String
		Get
			Return Me._SettingValue
		End Get
		Set
			If (String.Equals(Me._SettingValue, value) = false) Then
				Me.OnSettingValueChanging(value)
				Me.SendPropertyChanging
				Me._SettingValue = value
				Me.SendPropertyChanged("SettingValue")
				Me.OnSettingValueChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="TabModule_TabModuleSetting", Storage:="_TabModule", ThisKey:="TabModuleID", OtherKey:="TabModuleID", IsForeignKey:=true, DeleteOnNull:=true, DeleteRule:="CASCADE")>  _
	Public Property TabModule() As TabModule
		Get
			Return Me._TabModule.Entity
		End Get
		Set
			Dim previousValue As TabModule = Me._TabModule.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._TabModule.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._TabModule.Entity = Nothing
					previousValue.TabModuleSettings.Remove(Me)
				End If
				Me._TabModule.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.TabModuleSettings.Add(Me)
					Me._TabModuleID = value.TabModuleID
				Else
					Me._TabModuleID = CType(Nothing, Integer)
				End If
				Me.SendPropertyChanged("TabModule")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.AP_StaffBroker_Departments")>  _
Partial Public Class AP_StaffBroker_Department
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _CostCenterId As Integer
	
	Private _Name As String
	
	Private _CostCentre As String
	
	Private _CostCentreManager As System.Nullable(Of Integer)
	
	Private _CostCentreDelegate As System.Nullable(Of Integer)
	
	Private _CanRmb As Boolean
	
	Private _CanCharge As Boolean
	
	Private _CanGiveTo As Boolean
	
	Private _GivingText As String
	
	Private _GivingShortcut As String
	
	Private _PortalId As System.Nullable(Of Integer)
	
	Private _PayType As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnCostCenterIdChanging(value As Integer)
    End Sub
    Partial Private Sub OnCostCenterIdChanged()
    End Sub
    Partial Private Sub OnNameChanging(value As String)
    End Sub
    Partial Private Sub OnNameChanged()
    End Sub
    Partial Private Sub OnCostCentreChanging(value As String)
    End Sub
    Partial Private Sub OnCostCentreChanged()
    End Sub
    Partial Private Sub OnCostCentreManagerChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCostCentreManagerChanged()
    End Sub
    Partial Private Sub OnCostCentreDelegateChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCostCentreDelegateChanged()
    End Sub
    Partial Private Sub OnCanRmbChanging(value As Boolean)
    End Sub
    Partial Private Sub OnCanRmbChanged()
    End Sub
    Partial Private Sub OnCanChargeChanging(value As Boolean)
    End Sub
    Partial Private Sub OnCanChargeChanged()
    End Sub
    Partial Private Sub OnCanGiveToChanging(value As Boolean)
    End Sub
    Partial Private Sub OnCanGiveToChanged()
    End Sub
    Partial Private Sub OnGivingTextChanging(value As String)
    End Sub
    Partial Private Sub OnGivingTextChanged()
    End Sub
    Partial Private Sub OnGivingShortcutChanging(value As String)
    End Sub
    Partial Private Sub OnGivingShortcutChanged()
    End Sub
    Partial Private Sub OnPortalIdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPortalIdChanged()
    End Sub
    Partial Private Sub OnPayTypeChanging(value As String)
    End Sub
    Partial Private Sub OnPayTypeChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CostCenterId", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property CostCenterId() As Integer
		Get
			Return Me._CostCenterId
		End Get
		Set
			If ((Me._CostCenterId = value)  _
						= false) Then
				Me.OnCostCenterIdChanging(value)
				Me.SendPropertyChanging
				Me._CostCenterId = value
				Me.SendPropertyChanged("CostCenterId")
				Me.OnCostCenterIdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Name", DbType:="NVarChar(100) NOT NULL", CanBeNull:=false)>  _
	Public Property Name() As String
		Get
			Return Me._Name
		End Get
		Set
			If (String.Equals(Me._Name, value) = false) Then
				Me.OnNameChanging(value)
				Me.SendPropertyChanging
				Me._Name = value
				Me.SendPropertyChanged("Name")
				Me.OnNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CostCentre", DbType:="NVarChar(20) NOT NULL", CanBeNull:=false)>  _
	Public Property CostCentre() As String
		Get
			Return Me._CostCentre
		End Get
		Set
			If (String.Equals(Me._CostCentre, value) = false) Then
				Me.OnCostCentreChanging(value)
				Me.SendPropertyChanging
				Me._CostCentre = value
				Me.SendPropertyChanged("CostCentre")
				Me.OnCostCentreChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CostCentreManager", DbType:="Int")>  _
	Public Property CostCentreManager() As System.Nullable(Of Integer)
		Get
			Return Me._CostCentreManager
		End Get
		Set
			If (Me._CostCentreManager.Equals(value) = false) Then
				Me.OnCostCentreManagerChanging(value)
				Me.SendPropertyChanging
				Me._CostCentreManager = value
				Me.SendPropertyChanged("CostCentreManager")
				Me.OnCostCentreManagerChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CostCentreDelegate", DbType:="Int")>  _
	Public Property CostCentreDelegate() As System.Nullable(Of Integer)
		Get
			Return Me._CostCentreDelegate
		End Get
		Set
			If (Me._CostCentreDelegate.Equals(value) = false) Then
				Me.OnCostCentreDelegateChanging(value)
				Me.SendPropertyChanging
				Me._CostCentreDelegate = value
				Me.SendPropertyChanged("CostCentreDelegate")
				Me.OnCostCentreDelegateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CanRmb", DbType:="Bit NOT NULL")>  _
	Public Property CanRmb() As Boolean
		Get
			Return Me._CanRmb
		End Get
		Set
			If ((Me._CanRmb = value)  _
						= false) Then
				Me.OnCanRmbChanging(value)
				Me.SendPropertyChanging
				Me._CanRmb = value
				Me.SendPropertyChanged("CanRmb")
				Me.OnCanRmbChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CanCharge", DbType:="Bit NOT NULL")>  _
	Public Property CanCharge() As Boolean
		Get
			Return Me._CanCharge
		End Get
		Set
			If ((Me._CanCharge = value)  _
						= false) Then
				Me.OnCanChargeChanging(value)
				Me.SendPropertyChanging
				Me._CanCharge = value
				Me.SendPropertyChanged("CanCharge")
				Me.OnCanChargeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CanGiveTo", DbType:="Bit NOT NULL")>  _
	Public Property CanGiveTo() As Boolean
		Get
			Return Me._CanGiveTo
		End Get
		Set
			If ((Me._CanGiveTo = value)  _
						= false) Then
				Me.OnCanGiveToChanging(value)
				Me.SendPropertyChanging
				Me._CanGiveTo = value
				Me.SendPropertyChanged("CanGiveTo")
				Me.OnCanGiveToChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GivingText", DbType:="NVarChar(MAX)")>  _
	Public Property GivingText() As String
		Get
			Return Me._GivingText
		End Get
		Set
			If (String.Equals(Me._GivingText, value) = false) Then
				Me.OnGivingTextChanging(value)
				Me.SendPropertyChanging
				Me._GivingText = value
				Me.SendPropertyChanged("GivingText")
				Me.OnGivingTextChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GivingShortcut", DbType:="NVarChar(50)")>  _
	Public Property GivingShortcut() As String
		Get
			Return Me._GivingShortcut
		End Get
		Set
			If (String.Equals(Me._GivingShortcut, value) = false) Then
				Me.OnGivingShortcutChanging(value)
				Me.SendPropertyChanging
				Me._GivingShortcut = value
				Me.SendPropertyChanged("GivingShortcut")
				Me.OnGivingShortcutChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PortalId", DbType:="Int")>  _
	Public Property PortalId() As System.Nullable(Of Integer)
		Get
			Return Me._PortalId
		End Get
		Set
			If (Me._PortalId.Equals(value) = false) Then
				Me.OnPortalIdChanging(value)
				Me.SendPropertyChanging
				Me._PortalId = value
				Me.SendPropertyChanged("PortalId")
				Me.OnPortalIdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PayType", DbType:="NVarChar(MAX)")>  _
	Public Property PayType() As String
		Get
			Return Me._PayType
		End Get
		Set
			If (String.Equals(Me._PayType, value) = false) Then
				Me.OnPayTypeChanging(value)
				Me.SendPropertyChanging
				Me._PayType = value
				Me.SendPropertyChanged("PayType")
				Me.OnPayTypeChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.AP_StaffBroker_Staff")>  _
Partial Public Class AP_StaffBroker_Staff
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _StaffId As Integer
	
	Private _DisplayName As String
	
	Private _CostCenter As String
	
	Private _StaffTypeId As System.Nullable(Of Short)
	
	Private _UserId1 As Integer
	
	Private _UserId2 As System.Nullable(Of Integer)
	
	Private _Active As Boolean
	
	Private _PortalId As System.Nullable(Of Integer)
	
	Private _AP_StaffBroker_StaffProfiles As EntitySet(Of AP_StaffBroker_StaffProfile)
	
	Private _AP_StaffBroker_StaffType As EntityRef(Of AP_StaffBroker_StaffType)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnStaffIdChanging(value As Integer)
    End Sub
    Partial Private Sub OnStaffIdChanged()
    End Sub
    Partial Private Sub OnDisplayNameChanging(value As String)
    End Sub
    Partial Private Sub OnDisplayNameChanged()
    End Sub
    Partial Private Sub OnCostCenterChanging(value As String)
    End Sub
    Partial Private Sub OnCostCenterChanged()
    End Sub
    Partial Private Sub OnStaffTypeIdChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnStaffTypeIdChanged()
    End Sub
    Partial Private Sub OnUserId1Changing(value As Integer)
    End Sub
    Partial Private Sub OnUserId1Changed()
    End Sub
    Partial Private Sub OnUserId2Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnUserId2Changed()
    End Sub
    Partial Private Sub OnActiveChanging(value As Boolean)
    End Sub
    Partial Private Sub OnActiveChanged()
    End Sub
    Partial Private Sub OnPortalIdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPortalIdChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._AP_StaffBroker_StaffProfiles = New EntitySet(Of AP_StaffBroker_StaffProfile)(AddressOf Me.attach_AP_StaffBroker_StaffProfiles, AddressOf Me.detach_AP_StaffBroker_StaffProfiles)
		Me._AP_StaffBroker_StaffType = CType(Nothing, EntityRef(Of AP_StaffBroker_StaffType))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_StaffId", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property StaffId() As Integer
		Get
			Return Me._StaffId
		End Get
		Set
			If ((Me._StaffId = value)  _
						= false) Then
				Me.OnStaffIdChanging(value)
				Me.SendPropertyChanging
				Me._StaffId = value
				Me.SendPropertyChanged("StaffId")
				Me.OnStaffIdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DisplayName", DbType:="NVarChar(100) NOT NULL", CanBeNull:=false)>  _
	Public Property DisplayName() As String
		Get
			Return Me._DisplayName
		End Get
		Set
			If (String.Equals(Me._DisplayName, value) = false) Then
				Me.OnDisplayNameChanging(value)
				Me.SendPropertyChanging
				Me._DisplayName = value
				Me.SendPropertyChanged("DisplayName")
				Me.OnDisplayNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CostCenter", DbType:="NVarChar(20)")>  _
	Public Property CostCenter() As String
		Get
			Return Me._CostCenter
		End Get
		Set
			If (String.Equals(Me._CostCenter, value) = false) Then
				Me.OnCostCenterChanging(value)
				Me.SendPropertyChanging
				Me._CostCenter = value
				Me.SendPropertyChanged("CostCenter")
				Me.OnCostCenterChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_StaffTypeId", DbType:="SmallInt")>  _
	Public Property StaffTypeId() As System.Nullable(Of Short)
		Get
			Return Me._StaffTypeId
		End Get
		Set
			If (Me._StaffTypeId.Equals(value) = false) Then
				If Me._AP_StaffBroker_StaffType.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnStaffTypeIdChanging(value)
				Me.SendPropertyChanging
				Me._StaffTypeId = value
				Me.SendPropertyChanged("StaffTypeId")
				Me.OnStaffTypeIdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UserId1", DbType:="Int NOT NULL")>  _
	Public Property UserId1() As Integer
		Get
			Return Me._UserId1
		End Get
		Set
			If ((Me._UserId1 = value)  _
						= false) Then
				Me.OnUserId1Changing(value)
				Me.SendPropertyChanging
				Me._UserId1 = value
				Me.SendPropertyChanged("UserId1")
				Me.OnUserId1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UserId2", DbType:="Int")>  _
	Public Property UserId2() As System.Nullable(Of Integer)
		Get
			Return Me._UserId2
		End Get
		Set
			If (Me._UserId2.Equals(value) = false) Then
				Me.OnUserId2Changing(value)
				Me.SendPropertyChanging
				Me._UserId2 = value
				Me.SendPropertyChanged("UserId2")
				Me.OnUserId2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Active", DbType:="Bit NOT NULL")>  _
	Public Property Active() As Boolean
		Get
			Return Me._Active
		End Get
		Set
			If ((Me._Active = value)  _
						= false) Then
				Me.OnActiveChanging(value)
				Me.SendPropertyChanging
				Me._Active = value
				Me.SendPropertyChanged("Active")
				Me.OnActiveChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PortalId", DbType:="Int")>  _
	Public Property PortalId() As System.Nullable(Of Integer)
		Get
			Return Me._PortalId
		End Get
		Set
			If (Me._PortalId.Equals(value) = false) Then
				Me.OnPortalIdChanging(value)
				Me.SendPropertyChanging
				Me._PortalId = value
				Me.SendPropertyChanged("PortalId")
				Me.OnPortalIdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="AP_StaffBroker_Staff_AP_StaffBroker_StaffProfile", Storage:="_AP_StaffBroker_StaffProfiles", ThisKey:="StaffId", OtherKey:="StaffId")>  _
	Public Property AP_StaffBroker_StaffProfiles() As EntitySet(Of AP_StaffBroker_StaffProfile)
		Get
			Return Me._AP_StaffBroker_StaffProfiles
		End Get
		Set
			Me._AP_StaffBroker_StaffProfiles.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="AP_StaffBroker_StaffType_AP_StaffBroker_Staff", Storage:="_AP_StaffBroker_StaffType", ThisKey:="StaffTypeId", OtherKey:="StaffTypeId", IsForeignKey:=true)>  _
	Public Property AP_StaffBroker_StaffType() As AP_StaffBroker_StaffType
		Get
			Return Me._AP_StaffBroker_StaffType.Entity
		End Get
		Set
			Dim previousValue As AP_StaffBroker_StaffType = Me._AP_StaffBroker_StaffType.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._AP_StaffBroker_StaffType.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._AP_StaffBroker_StaffType.Entity = Nothing
					previousValue.AP_StaffBroker_Staffs.Remove(Me)
				End If
				Me._AP_StaffBroker_StaffType.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.AP_StaffBroker_Staffs.Add(Me)
					Me._StaffTypeId = value.StaffTypeId
				Else
					Me._StaffTypeId = CType(Nothing, Nullable(Of Short))
				End If
				Me.SendPropertyChanged("AP_StaffBroker_StaffType")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_AP_StaffBroker_StaffProfiles(ByVal entity As AP_StaffBroker_StaffProfile)
		Me.SendPropertyChanging
		entity.AP_StaffBroker_Staff = Me
	End Sub
	
	Private Sub detach_AP_StaffBroker_StaffProfiles(ByVal entity As AP_StaffBroker_StaffProfile)
		Me.SendPropertyChanging
		entity.AP_StaffBroker_Staff = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.AP_StaffBroker_StaffProfile")>  _
Partial Public Class AP_StaffBroker_StaffProfile
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _StaffProfileId As Long
	
	Private _PropertyValue As String
	
	Private _StaffPropertyDefinitionId As Integer
	
	Private _StaffId As Integer
	
	Private _AP_StaffBroker_Staff As EntityRef(Of AP_StaffBroker_Staff)
	
	Private _AP_StaffBroker_StaffPropertyDefinition As EntityRef(Of AP_StaffBroker_StaffPropertyDefinition)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnStaffProfileIdChanging(value As Long)
    End Sub
    Partial Private Sub OnStaffProfileIdChanged()
    End Sub
    Partial Private Sub OnPropertyValueChanging(value As String)
    End Sub
    Partial Private Sub OnPropertyValueChanged()
    End Sub
    Partial Private Sub OnStaffPropertyDefinitionIdChanging(value As Integer)
    End Sub
    Partial Private Sub OnStaffPropertyDefinitionIdChanged()
    End Sub
    Partial Private Sub OnStaffIdChanging(value As Integer)
    End Sub
    Partial Private Sub OnStaffIdChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._AP_StaffBroker_Staff = CType(Nothing, EntityRef(Of AP_StaffBroker_Staff))
		Me._AP_StaffBroker_StaffPropertyDefinition = CType(Nothing, EntityRef(Of AP_StaffBroker_StaffPropertyDefinition))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_StaffProfileId", AutoSync:=AutoSync.OnInsert, DbType:="BigInt NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property StaffProfileId() As Long
		Get
			Return Me._StaffProfileId
		End Get
		Set
			If ((Me._StaffProfileId = value)  _
						= false) Then
				Me.OnStaffProfileIdChanging(value)
				Me.SendPropertyChanging
				Me._StaffProfileId = value
				Me.SendPropertyChanged("StaffProfileId")
				Me.OnStaffProfileIdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PropertyValue", DbType:="VarChar(MAX)")>  _
	Public Property PropertyValue() As String
		Get
			Return Me._PropertyValue
		End Get
		Set
			If (String.Equals(Me._PropertyValue, value) = false) Then
				Me.OnPropertyValueChanging(value)
				Me.SendPropertyChanging
				Me._PropertyValue = value
				Me.SendPropertyChanged("PropertyValue")
				Me.OnPropertyValueChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_StaffPropertyDefinitionId", DbType:="Int NOT NULL")>  _
	Public Property StaffPropertyDefinitionId() As Integer
		Get
			Return Me._StaffPropertyDefinitionId
		End Get
		Set
			If ((Me._StaffPropertyDefinitionId = value)  _
						= false) Then
				If Me._AP_StaffBroker_StaffPropertyDefinition.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnStaffPropertyDefinitionIdChanging(value)
				Me.SendPropertyChanging
				Me._StaffPropertyDefinitionId = value
				Me.SendPropertyChanged("StaffPropertyDefinitionId")
				Me.OnStaffPropertyDefinitionIdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_StaffId", DbType:="Int NOT NULL")>  _
	Public Property StaffId() As Integer
		Get
			Return Me._StaffId
		End Get
		Set
			If ((Me._StaffId = value)  _
						= false) Then
				If Me._AP_StaffBroker_Staff.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnStaffIdChanging(value)
				Me.SendPropertyChanging
				Me._StaffId = value
				Me.SendPropertyChanged("StaffId")
				Me.OnStaffIdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="AP_StaffBroker_Staff_AP_StaffBroker_StaffProfile", Storage:="_AP_StaffBroker_Staff", ThisKey:="StaffId", OtherKey:="StaffId", IsForeignKey:=true)>  _
	Public Property AP_StaffBroker_Staff() As AP_StaffBroker_Staff
		Get
			Return Me._AP_StaffBroker_Staff.Entity
		End Get
		Set
			Dim previousValue As AP_StaffBroker_Staff = Me._AP_StaffBroker_Staff.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._AP_StaffBroker_Staff.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._AP_StaffBroker_Staff.Entity = Nothing
					previousValue.AP_StaffBroker_StaffProfiles.Remove(Me)
				End If
				Me._AP_StaffBroker_Staff.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.AP_StaffBroker_StaffProfiles.Add(Me)
					Me._StaffId = value.StaffId
				Else
					Me._StaffId = CType(Nothing, Integer)
				End If
				Me.SendPropertyChanged("AP_StaffBroker_Staff")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="AP_StaffBroker_StaffPropertyDefinition_AP_StaffBroker_StaffProfile", Storage:="_AP_StaffBroker_StaffPropertyDefinition", ThisKey:="StaffPropertyDefinitionId", OtherKey:="StaffPropertyDefinitionId", IsForeignKey:=true)>  _
	Public Property AP_StaffBroker_StaffPropertyDefinition() As AP_StaffBroker_StaffPropertyDefinition
		Get
			Return Me._AP_StaffBroker_StaffPropertyDefinition.Entity
		End Get
		Set
			Dim previousValue As AP_StaffBroker_StaffPropertyDefinition = Me._AP_StaffBroker_StaffPropertyDefinition.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._AP_StaffBroker_StaffPropertyDefinition.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._AP_StaffBroker_StaffPropertyDefinition.Entity = Nothing
					previousValue.AP_StaffBroker_StaffProfiles.Remove(Me)
				End If
				Me._AP_StaffBroker_StaffPropertyDefinition.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.AP_StaffBroker_StaffProfiles.Add(Me)
					Me._StaffPropertyDefinitionId = value.StaffPropertyDefinitionId
				Else
					Me._StaffPropertyDefinitionId = CType(Nothing, Integer)
				End If
				Me.SendPropertyChanged("AP_StaffBroker_StaffPropertyDefinition")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.AP_StaffBroker_StaffPropertyDefinition")>  _
Partial Public Class AP_StaffBroker_StaffPropertyDefinition
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _StaffPropertyDefinitionId As Integer
	
	Private _PropertyName As String
	
	Private _PortalId As System.Nullable(Of Integer)
	
	Private _ViewOrder As System.Nullable(Of Short)
	
	Private _Display As System.Nullable(Of Boolean)
	
	Private _PropertyHelp As String
	
	Private _Type As System.Nullable(Of Byte)
	
	Private _AP_StaffBroker_StaffProfiles As EntitySet(Of AP_StaffBroker_StaffProfile)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnStaffPropertyDefinitionIdChanging(value As Integer)
    End Sub
    Partial Private Sub OnStaffPropertyDefinitionIdChanged()
    End Sub
    Partial Private Sub OnPropertyNameChanging(value As String)
    End Sub
    Partial Private Sub OnPropertyNameChanged()
    End Sub
    Partial Private Sub OnPortalIdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPortalIdChanged()
    End Sub
    Partial Private Sub OnViewOrderChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnViewOrderChanged()
    End Sub
    Partial Private Sub OnDisplayChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnDisplayChanged()
    End Sub
    Partial Private Sub OnPropertyHelpChanging(value As String)
    End Sub
    Partial Private Sub OnPropertyHelpChanged()
    End Sub
    Partial Private Sub OnTypeChanging(value As System.Nullable(Of Byte))
    End Sub
    Partial Private Sub OnTypeChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._AP_StaffBroker_StaffProfiles = New EntitySet(Of AP_StaffBroker_StaffProfile)(AddressOf Me.attach_AP_StaffBroker_StaffProfiles, AddressOf Me.detach_AP_StaffBroker_StaffProfiles)
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_StaffPropertyDefinitionId", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property StaffPropertyDefinitionId() As Integer
		Get
			Return Me._StaffPropertyDefinitionId
		End Get
		Set
			If ((Me._StaffPropertyDefinitionId = value)  _
						= false) Then
				Me.OnStaffPropertyDefinitionIdChanging(value)
				Me.SendPropertyChanging
				Me._StaffPropertyDefinitionId = value
				Me.SendPropertyChanged("StaffPropertyDefinitionId")
				Me.OnStaffPropertyDefinitionIdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PropertyName", DbType:="VarChar(MAX) NOT NULL", CanBeNull:=false)>  _
	Public Property PropertyName() As String
		Get
			Return Me._PropertyName
		End Get
		Set
			If (String.Equals(Me._PropertyName, value) = false) Then
				Me.OnPropertyNameChanging(value)
				Me.SendPropertyChanging
				Me._PropertyName = value
				Me.SendPropertyChanged("PropertyName")
				Me.OnPropertyNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PortalId", DbType:="Int")>  _
	Public Property PortalId() As System.Nullable(Of Integer)
		Get
			Return Me._PortalId
		End Get
		Set
			If (Me._PortalId.Equals(value) = false) Then
				Me.OnPortalIdChanging(value)
				Me.SendPropertyChanging
				Me._PortalId = value
				Me.SendPropertyChanged("PortalId")
				Me.OnPortalIdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ViewOrder", DbType:="SmallInt")>  _
	Public Property ViewOrder() As System.Nullable(Of Short)
		Get
			Return Me._ViewOrder
		End Get
		Set
			If (Me._ViewOrder.Equals(value) = false) Then
				Me.OnViewOrderChanging(value)
				Me.SendPropertyChanging
				Me._ViewOrder = value
				Me.SendPropertyChanged("ViewOrder")
				Me.OnViewOrderChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Display", DbType:="Bit")>  _
	Public Property Display() As System.Nullable(Of Boolean)
		Get
			Return Me._Display
		End Get
		Set
			If (Me._Display.Equals(value) = false) Then
				Me.OnDisplayChanging(value)
				Me.SendPropertyChanging
				Me._Display = value
				Me.SendPropertyChanged("Display")
				Me.OnDisplayChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PropertyHelp", DbType:="VarChar(MAX)")>  _
	Public Property PropertyHelp() As String
		Get
			Return Me._PropertyHelp
		End Get
		Set
			If (String.Equals(Me._PropertyHelp, value) = false) Then
				Me.OnPropertyHelpChanging(value)
				Me.SendPropertyChanging
				Me._PropertyHelp = value
				Me.SendPropertyChanged("PropertyHelp")
				Me.OnPropertyHelpChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Type", DbType:="TinyInt")>  _
	Public Property Type() As System.Nullable(Of Byte)
		Get
			Return Me._Type
		End Get
		Set
			If (Me._Type.Equals(value) = false) Then
				Me.OnTypeChanging(value)
				Me.SendPropertyChanging
				Me._Type = value
				Me.SendPropertyChanged("Type")
				Me.OnTypeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="AP_StaffBroker_StaffPropertyDefinition_AP_StaffBroker_StaffProfile", Storage:="_AP_StaffBroker_StaffProfiles", ThisKey:="StaffPropertyDefinitionId", OtherKey:="StaffPropertyDefinitionId")>  _
	Public Property AP_StaffBroker_StaffProfiles() As EntitySet(Of AP_StaffBroker_StaffProfile)
		Get
			Return Me._AP_StaffBroker_StaffProfiles
		End Get
		Set
			Me._AP_StaffBroker_StaffProfiles.Assign(value)
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_AP_StaffBroker_StaffProfiles(ByVal entity As AP_StaffBroker_StaffProfile)
		Me.SendPropertyChanging
		entity.AP_StaffBroker_StaffPropertyDefinition = Me
	End Sub
	
	Private Sub detach_AP_StaffBroker_StaffProfiles(ByVal entity As AP_StaffBroker_StaffProfile)
		Me.SendPropertyChanging
		entity.AP_StaffBroker_StaffPropertyDefinition = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.AP_StaffBroker_StaffType")>  _
Partial Public Class AP_StaffBroker_StaffType
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _StaffTypeId As Short
	
	Private _Name As String
	
	Private _PortalId As System.Nullable(Of Integer)
	
	Private _AP_StaffBroker_Staffs As EntitySet(Of AP_StaffBroker_Staff)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnStaffTypeIdChanging(value As Short)
    End Sub
    Partial Private Sub OnStaffTypeIdChanged()
    End Sub
    Partial Private Sub OnNameChanging(value As String)
    End Sub
    Partial Private Sub OnNameChanged()
    End Sub
    Partial Private Sub OnPortalIdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPortalIdChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._AP_StaffBroker_Staffs = New EntitySet(Of AP_StaffBroker_Staff)(AddressOf Me.attach_AP_StaffBroker_Staffs, AddressOf Me.detach_AP_StaffBroker_Staffs)
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_StaffTypeId", AutoSync:=AutoSync.OnInsert, DbType:="SmallInt NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property StaffTypeId() As Short
		Get
			Return Me._StaffTypeId
		End Get
		Set
			If ((Me._StaffTypeId = value)  _
						= false) Then
				Me.OnStaffTypeIdChanging(value)
				Me.SendPropertyChanging
				Me._StaffTypeId = value
				Me.SendPropertyChanged("StaffTypeId")
				Me.OnStaffTypeIdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Name", DbType:="NVarChar(50)")>  _
	Public Property Name() As String
		Get
			Return Me._Name
		End Get
		Set
			If (String.Equals(Me._Name, value) = false) Then
				Me.OnNameChanging(value)
				Me.SendPropertyChanging
				Me._Name = value
				Me.SendPropertyChanged("Name")
				Me.OnNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PortalId", DbType:="Int")>  _
	Public Property PortalId() As System.Nullable(Of Integer)
		Get
			Return Me._PortalId
		End Get
		Set
			If (Me._PortalId.Equals(value) = false) Then
				Me.OnPortalIdChanging(value)
				Me.SendPropertyChanging
				Me._PortalId = value
				Me.SendPropertyChanged("PortalId")
				Me.OnPortalIdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="AP_StaffBroker_StaffType_AP_StaffBroker_Staff", Storage:="_AP_StaffBroker_Staffs", ThisKey:="StaffTypeId", OtherKey:="StaffTypeId")>  _
	Public Property AP_StaffBroker_Staffs() As EntitySet(Of AP_StaffBroker_Staff)
		Get
			Return Me._AP_StaffBroker_Staffs
		End Get
		Set
			Me._AP_StaffBroker_Staffs.Assign(value)
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_AP_StaffBroker_Staffs(ByVal entity As AP_StaffBroker_Staff)
		Me.SendPropertyChanging
		entity.AP_StaffBroker_StaffType = Me
	End Sub
	
	Private Sub detach_AP_StaffBroker_Staffs(ByVal entity As AP_StaffBroker_Staff)
		Me.SendPropertyChanging
		entity.AP_StaffBroker_StaffType = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.AP_StaffBroker_LeaderMeta")>  _
Partial Public Class AP_StaffBroker_LeaderMeta
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _LeaderMetaId As Long
	
	Private _UserId As Integer
	
	Private _LeaderId As Integer
	
	Private _DelegateId As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnLeaderMetaIdChanging(value As Long)
    End Sub
    Partial Private Sub OnLeaderMetaIdChanged()
    End Sub
    Partial Private Sub OnUserIdChanging(value As Integer)
    End Sub
    Partial Private Sub OnUserIdChanged()
    End Sub
    Partial Private Sub OnLeaderIdChanging(value As Integer)
    End Sub
    Partial Private Sub OnLeaderIdChanged()
    End Sub
    Partial Private Sub OnDelegateIdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnDelegateIdChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LeaderMetaId", AutoSync:=AutoSync.OnInsert, DbType:="BigInt NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property LeaderMetaId() As Long
		Get
			Return Me._LeaderMetaId
		End Get
		Set
			If ((Me._LeaderMetaId = value)  _
						= false) Then
				Me.OnLeaderMetaIdChanging(value)
				Me.SendPropertyChanging
				Me._LeaderMetaId = value
				Me.SendPropertyChanged("LeaderMetaId")
				Me.OnLeaderMetaIdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UserId", DbType:="Int NOT NULL")>  _
	Public Property UserId() As Integer
		Get
			Return Me._UserId
		End Get
		Set
			If ((Me._UserId = value)  _
						= false) Then
				Me.OnUserIdChanging(value)
				Me.SendPropertyChanging
				Me._UserId = value
				Me.SendPropertyChanged("UserId")
				Me.OnUserIdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LeaderId", DbType:="Int NOT NULL")>  _
	Public Property LeaderId() As Integer
		Get
			Return Me._LeaderId
		End Get
		Set
			If ((Me._LeaderId = value)  _
						= false) Then
				Me.OnLeaderIdChanging(value)
				Me.SendPropertyChanging
				Me._LeaderId = value
				Me.SendPropertyChanged("LeaderId")
				Me.OnLeaderIdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DelegateId", DbType:="Int")>  _
	Public Property DelegateId() As System.Nullable(Of Integer)
		Get
			Return Me._DelegateId
		End Get
		Set
			If (Me._DelegateId.Equals(value) = false) Then
				Me.OnDelegateIdChanging(value)
				Me.SendPropertyChanging
				Me._DelegateId = value
				Me.SendPropertyChanged("DelegateId")
				Me.OnDelegateIdChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.AP_StaffBroker_Templates")>  _
Partial Public Class AP_StaffBroker_Template
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _TemplateId As Long
	
	Private _TemplateName As String
	
	Private _TemplateDescription As String
	
	Private _TemplateHTML As String
	
	Private _PortalId As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnTemplateIdChanging(value As Long)
    End Sub
    Partial Private Sub OnTemplateIdChanged()
    End Sub
    Partial Private Sub OnTemplateNameChanging(value As String)
    End Sub
    Partial Private Sub OnTemplateNameChanged()
    End Sub
    Partial Private Sub OnTemplateDescriptionChanging(value As String)
    End Sub
    Partial Private Sub OnTemplateDescriptionChanged()
    End Sub
    Partial Private Sub OnTemplateHTMLChanging(value As String)
    End Sub
    Partial Private Sub OnTemplateHTMLChanged()
    End Sub
    Partial Private Sub OnPortalIdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPortalIdChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TemplateId", AutoSync:=AutoSync.OnInsert, DbType:="BigInt NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property TemplateId() As Long
		Get
			Return Me._TemplateId
		End Get
		Set
			If ((Me._TemplateId = value)  _
						= false) Then
				Me.OnTemplateIdChanging(value)
				Me.SendPropertyChanging
				Me._TemplateId = value
				Me.SendPropertyChanged("TemplateId")
				Me.OnTemplateIdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TemplateName", DbType:="NVarChar(80)")>  _
	Public Property TemplateName() As String
		Get
			Return Me._TemplateName
		End Get
		Set
			If (String.Equals(Me._TemplateName, value) = false) Then
				Me.OnTemplateNameChanging(value)
				Me.SendPropertyChanging
				Me._TemplateName = value
				Me.SendPropertyChanged("TemplateName")
				Me.OnTemplateNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TemplateDescription", DbType:="NVarChar(MAX)")>  _
	Public Property TemplateDescription() As String
		Get
			Return Me._TemplateDescription
		End Get
		Set
			If (String.Equals(Me._TemplateDescription, value) = false) Then
				Me.OnTemplateDescriptionChanging(value)
				Me.SendPropertyChanging
				Me._TemplateDescription = value
				Me.SendPropertyChanged("TemplateDescription")
				Me.OnTemplateDescriptionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TemplateHTML", DbType:="NVarChar(MAX)")>  _
	Public Property TemplateHTML() As String
		Get
			Return Me._TemplateHTML
		End Get
		Set
			If (String.Equals(Me._TemplateHTML, value) = false) Then
				Me.OnTemplateHTMLChanging(value)
				Me.SendPropertyChanging
				Me._TemplateHTML = value
				Me.SendPropertyChanged("TemplateHTML")
				Me.OnTemplateHTMLChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PortalId", DbType:="Int")>  _
	Public Property PortalId() As System.Nullable(Of Integer)
		Get
			Return Me._PortalId
		End Get
		Set
			If (Me._PortalId.Equals(value) = false) Then
				Me.OnPortalIdChanging(value)
				Me.SendPropertyChanging
				Me._PortalId = value
				Me.SendPropertyChanged("PortalId")
				Me.OnPortalIdChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.AP_Staff_Rmb")>  _
Partial Public Class AP_Staff_Rmb
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _RMBNo As Long
	
	Private _UserId As Integer
	
	Private _CostCenter As String
	
	Private _UserRef As String
	
	Private _RmbDate As System.Nullable(Of Date)
	
	Private _Status As Integer
	
	Private _UserComment As String
	
	Private _ApprComment As String
	
	Private _AcctComment As String
	
	Private _ApprUserId As System.Nullable(Of Integer)
	
	Private _Locked As Boolean
	
	Private _PortalId As Integer
	
	Private _ApprDate As System.Nullable(Of Date)
	
	Private _ProcDate As System.Nullable(Of Date)
	
	Private _ProcUserId As System.Nullable(Of Integer)
	
	Private _Period As System.Nullable(Of Byte)
	
	Private _Year As System.Nullable(Of Short)
	
	Private _SupplierCode As String
	
	Private _EmailSent As Boolean
	
	Private _Changed As Boolean
	
	Private _AdvanceRequest As Decimal
	
	Private _Department As Boolean
	
	Private _SpareField1 As String
	
	Private _SpareField2 As String
	
	Private _SpareField3 As String
	
	Private _SpareField4 As String
	
	Private _SpareField5 As String
	
	Private _RID As Integer
	
	Private _Error As Boolean
	
	Private _ErrorMessage As String
	
	Private _DownloadDate As System.Nullable(Of Date)
	
	Private _DownloadMode As String
	
	Private _MoreInfoRequested As System.Nullable(Of Boolean)
	
	Private _OrigCurrency As String
	
	Private _OrigCurrencyAmount As System.Nullable(Of Decimal)
	
	Private _AP_Staff_RmbLines As EntitySet(Of AP_Staff_RmbLine)
	
	Private _User As EntityRef(Of User)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnRMBNoChanging(value As Long)
    End Sub
    Partial Private Sub OnRMBNoChanged()
    End Sub
    Partial Private Sub OnUserIdChanging(value As Integer)
    End Sub
    Partial Private Sub OnUserIdChanged()
    End Sub
    Partial Private Sub OnCostCenterChanging(value As String)
    End Sub
    Partial Private Sub OnCostCenterChanged()
    End Sub
    Partial Private Sub OnUserRefChanging(value As String)
    End Sub
    Partial Private Sub OnUserRefChanged()
    End Sub
    Partial Private Sub OnRmbDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnRmbDateChanged()
    End Sub
    Partial Private Sub OnStatusChanging(value As Integer)
    End Sub
    Partial Private Sub OnStatusChanged()
    End Sub
    Partial Private Sub OnUserCommentChanging(value As String)
    End Sub
    Partial Private Sub OnUserCommentChanged()
    End Sub
    Partial Private Sub OnApprCommentChanging(value As String)
    End Sub
    Partial Private Sub OnApprCommentChanged()
    End Sub
    Partial Private Sub OnAcctCommentChanging(value As String)
    End Sub
    Partial Private Sub OnAcctCommentChanged()
    End Sub
    Partial Private Sub OnApprUserIdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnApprUserIdChanged()
    End Sub
    Partial Private Sub OnLockedChanging(value As Boolean)
    End Sub
    Partial Private Sub OnLockedChanged()
    End Sub
    Partial Private Sub OnPortalIdChanging(value As Integer)
    End Sub
    Partial Private Sub OnPortalIdChanged()
    End Sub
    Partial Private Sub OnApprDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnApprDateChanged()
    End Sub
    Partial Private Sub OnProcDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnProcDateChanged()
    End Sub
    Partial Private Sub OnProcUserIdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnProcUserIdChanged()
    End Sub
    Partial Private Sub OnPeriodChanging(value As System.Nullable(Of Byte))
    End Sub
    Partial Private Sub OnPeriodChanged()
    End Sub
    Partial Private Sub OnYearChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnYearChanged()
    End Sub
    Partial Private Sub OnSupplierCodeChanging(value As String)
    End Sub
    Partial Private Sub OnSupplierCodeChanged()
    End Sub
    Partial Private Sub OnEmailSentChanging(value As Boolean)
    End Sub
    Partial Private Sub OnEmailSentChanged()
    End Sub
    Partial Private Sub OnChangedChanging(value As Boolean)
    End Sub
    Partial Private Sub OnChangedChanged()
    End Sub
    Partial Private Sub OnAdvanceRequestChanging(value As Decimal)
    End Sub
    Partial Private Sub OnAdvanceRequestChanged()
    End Sub
    Partial Private Sub OnDepartmentChanging(value As Boolean)
    End Sub
    Partial Private Sub OnDepartmentChanged()
    End Sub
    Partial Private Sub OnSpareField1Changing(value As String)
    End Sub
    Partial Private Sub OnSpareField1Changed()
    End Sub
    Partial Private Sub OnSpareField2Changing(value As String)
    End Sub
    Partial Private Sub OnSpareField2Changed()
    End Sub
    Partial Private Sub OnSpareField3Changing(value As String)
    End Sub
    Partial Private Sub OnSpareField3Changed()
    End Sub
    Partial Private Sub OnSpareField4Changing(value As String)
    End Sub
    Partial Private Sub OnSpareField4Changed()
    End Sub
    Partial Private Sub OnSpareField5Changing(value As String)
    End Sub
    Partial Private Sub OnSpareField5Changed()
    End Sub
    Partial Private Sub OnRIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnRIDChanged()
    End Sub
    Partial Private Sub OnErrorChanging(value As Boolean)
    End Sub
    Partial Private Sub OnErrorChanged()
    End Sub
    Partial Private Sub OnErrorMessageChanging(value As String)
    End Sub
    Partial Private Sub OnErrorMessageChanged()
    End Sub
    Partial Private Sub OnDownloadDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDownloadDateChanged()
    End Sub
    Partial Private Sub OnDownloadModeChanging(value As String)
    End Sub
    Partial Private Sub OnDownloadModeChanged()
    End Sub
    Partial Private Sub OnMoreInfoRequestedChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnMoreInfoRequestedChanged()
    End Sub
    Partial Private Sub OnOrigCurrencyChanging(value As String)
    End Sub
    Partial Private Sub OnOrigCurrencyChanged()
    End Sub
    Partial Private Sub OnOrigCurrencyAmountChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnOrigCurrencyAmountChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._AP_Staff_RmbLines = New EntitySet(Of AP_Staff_RmbLine)(AddressOf Me.attach_AP_Staff_RmbLines, AddressOf Me.detach_AP_Staff_RmbLines)
		Me._User = CType(Nothing, EntityRef(Of User))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RMBNo", AutoSync:=AutoSync.OnInsert, DbType:="BigInt NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property RMBNo() As Long
		Get
			Return Me._RMBNo
		End Get
		Set
			If ((Me._RMBNo = value)  _
						= false) Then
				Me.OnRMBNoChanging(value)
				Me.SendPropertyChanging
				Me._RMBNo = value
				Me.SendPropertyChanged("RMBNo")
				Me.OnRMBNoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UserId", DbType:="Int NOT NULL")>  _
	Public Property UserId() As Integer
		Get
			Return Me._UserId
		End Get
		Set
			If ((Me._UserId = value)  _
						= false) Then
				If Me._User.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnUserIdChanging(value)
				Me.SendPropertyChanging
				Me._UserId = value
				Me.SendPropertyChanged("UserId")
				Me.OnUserIdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CostCenter", DbType:="NVarChar(30) NOT NULL", CanBeNull:=false)>  _
	Public Property CostCenter() As String
		Get
			Return Me._CostCenter
		End Get
		Set
			If (String.Equals(Me._CostCenter, value) = false) Then
				Me.OnCostCenterChanging(value)
				Me.SendPropertyChanging
				Me._CostCenter = value
				Me.SendPropertyChanged("CostCenter")
				Me.OnCostCenterChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UserRef", DbType:="NVarChar(100)")>  _
	Public Property UserRef() As String
		Get
			Return Me._UserRef
		End Get
		Set
			If (String.Equals(Me._UserRef, value) = false) Then
				Me.OnUserRefChanging(value)
				Me.SendPropertyChanging
				Me._UserRef = value
				Me.SendPropertyChanged("UserRef")
				Me.OnUserRefChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RmbDate", DbType:="Date")>  _
	Public Property RmbDate() As System.Nullable(Of Date)
		Get
			Return Me._RmbDate
		End Get
		Set
			If (Me._RmbDate.Equals(value) = false) Then
				Me.OnRmbDateChanging(value)
				Me.SendPropertyChanging
				Me._RmbDate = value
				Me.SendPropertyChanged("RmbDate")
				Me.OnRmbDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Status", DbType:="Int NOT NULL")>  _
	Public Property Status() As Integer
		Get
			Return Me._Status
		End Get
		Set
			If ((Me._Status = value)  _
						= false) Then
				Me.OnStatusChanging(value)
				Me.SendPropertyChanging
				Me._Status = value
				Me.SendPropertyChanged("Status")
				Me.OnStatusChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UserComment", DbType:="NVarChar(MAX)")>  _
	Public Property UserComment() As String
		Get
			Return Me._UserComment
		End Get
		Set
			If (String.Equals(Me._UserComment, value) = false) Then
				Me.OnUserCommentChanging(value)
				Me.SendPropertyChanging
				Me._UserComment = value
				Me.SendPropertyChanged("UserComment")
				Me.OnUserCommentChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ApprComment", DbType:="NVarChar(MAX)")>  _
	Public Property ApprComment() As String
		Get
			Return Me._ApprComment
		End Get
		Set
			If (String.Equals(Me._ApprComment, value) = false) Then
				Me.OnApprCommentChanging(value)
				Me.SendPropertyChanging
				Me._ApprComment = value
				Me.SendPropertyChanged("ApprComment")
				Me.OnApprCommentChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AcctComment", DbType:="NVarChar(MAX)")>  _
	Public Property AcctComment() As String
		Get
			Return Me._AcctComment
		End Get
		Set
			If (String.Equals(Me._AcctComment, value) = false) Then
				Me.OnAcctCommentChanging(value)
				Me.SendPropertyChanging
				Me._AcctComment = value
				Me.SendPropertyChanged("AcctComment")
				Me.OnAcctCommentChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ApprUserId", DbType:="Int")>  _
	Public Property ApprUserId() As System.Nullable(Of Integer)
		Get
			Return Me._ApprUserId
		End Get
		Set
			If (Me._ApprUserId.Equals(value) = false) Then
				Me.OnApprUserIdChanging(value)
				Me.SendPropertyChanging
				Me._ApprUserId = value
				Me.SendPropertyChanged("ApprUserId")
				Me.OnApprUserIdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Locked", DbType:="Bit NOT NULL")>  _
	Public Property Locked() As Boolean
		Get
			Return Me._Locked
		End Get
		Set
			If ((Me._Locked = value)  _
						= false) Then
				Me.OnLockedChanging(value)
				Me.SendPropertyChanging
				Me._Locked = value
				Me.SendPropertyChanged("Locked")
				Me.OnLockedChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PortalId", DbType:="Int NOT NULL")>  _
	Public Property PortalId() As Integer
		Get
			Return Me._PortalId
		End Get
		Set
			If ((Me._PortalId = value)  _
						= false) Then
				Me.OnPortalIdChanging(value)
				Me.SendPropertyChanging
				Me._PortalId = value
				Me.SendPropertyChanged("PortalId")
				Me.OnPortalIdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ApprDate", DbType:="Date")>  _
	Public Property ApprDate() As System.Nullable(Of Date)
		Get
			Return Me._ApprDate
		End Get
		Set
			If (Me._ApprDate.Equals(value) = false) Then
				Me.OnApprDateChanging(value)
				Me.SendPropertyChanging
				Me._ApprDate = value
				Me.SendPropertyChanged("ApprDate")
				Me.OnApprDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ProcDate", DbType:="Date")>  _
	Public Property ProcDate() As System.Nullable(Of Date)
		Get
			Return Me._ProcDate
		End Get
		Set
			If (Me._ProcDate.Equals(value) = false) Then
				Me.OnProcDateChanging(value)
				Me.SendPropertyChanging
				Me._ProcDate = value
				Me.SendPropertyChanged("ProcDate")
				Me.OnProcDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ProcUserId", DbType:="Int")>  _
	Public Property ProcUserId() As System.Nullable(Of Integer)
		Get
			Return Me._ProcUserId
		End Get
		Set
			If (Me._ProcUserId.Equals(value) = false) Then
				Me.OnProcUserIdChanging(value)
				Me.SendPropertyChanging
				Me._ProcUserId = value
				Me.SendPropertyChanged("ProcUserId")
				Me.OnProcUserIdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Period", DbType:="TinyInt")>  _
	Public Property Period() As System.Nullable(Of Byte)
		Get
			Return Me._Period
		End Get
		Set
			If (Me._Period.Equals(value) = false) Then
				Me.OnPeriodChanging(value)
				Me.SendPropertyChanging
				Me._Period = value
				Me.SendPropertyChanged("Period")
				Me.OnPeriodChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Year", DbType:="SmallInt")>  _
	Public Property Year() As System.Nullable(Of Short)
		Get
			Return Me._Year
		End Get
		Set
			If (Me._Year.Equals(value) = false) Then
				Me.OnYearChanging(value)
				Me.SendPropertyChanging
				Me._Year = value
				Me.SendPropertyChanged("Year")
				Me.OnYearChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SupplierCode", DbType:="VarChar(8)")>  _
	Public Property SupplierCode() As String
		Get
			Return Me._SupplierCode
		End Get
		Set
			If (String.Equals(Me._SupplierCode, value) = false) Then
				Me.OnSupplierCodeChanging(value)
				Me.SendPropertyChanging
				Me._SupplierCode = value
				Me.SendPropertyChanged("SupplierCode")
				Me.OnSupplierCodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EmailSent", DbType:="Bit NOT NULL")>  _
	Public Property EmailSent() As Boolean
		Get
			Return Me._EmailSent
		End Get
		Set
			If ((Me._EmailSent = value)  _
						= false) Then
				Me.OnEmailSentChanging(value)
				Me.SendPropertyChanging
				Me._EmailSent = value
				Me.SendPropertyChanged("EmailSent")
				Me.OnEmailSentChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Changed", DbType:="Bit NOT NULL")>  _
	Public Property Changed() As Boolean
		Get
			Return Me._Changed
		End Get
		Set
			If ((Me._Changed = value)  _
						= false) Then
				Me.OnChangedChanging(value)
				Me.SendPropertyChanging
				Me._Changed = value
				Me.SendPropertyChanged("Changed")
				Me.OnChangedChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AdvanceRequest", DbType:="Money NOT NULL")>  _
	Public Property AdvanceRequest() As Decimal
		Get
			Return Me._AdvanceRequest
		End Get
		Set
			If ((Me._AdvanceRequest = value)  _
						= false) Then
				Me.OnAdvanceRequestChanging(value)
				Me.SendPropertyChanging
				Me._AdvanceRequest = value
				Me.SendPropertyChanged("AdvanceRequest")
				Me.OnAdvanceRequestChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Department", DbType:="Bit NOT NULL")>  _
	Public Property Department() As Boolean
		Get
			Return Me._Department
		End Get
		Set
			If ((Me._Department = value)  _
						= false) Then
				Me.OnDepartmentChanging(value)
				Me.SendPropertyChanging
				Me._Department = value
				Me.SendPropertyChanged("Department")
				Me.OnDepartmentChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SpareField1", DbType:="NVarChar(50)")>  _
	Public Property SpareField1() As String
		Get
			Return Me._SpareField1
		End Get
		Set
			If (String.Equals(Me._SpareField1, value) = false) Then
				Me.OnSpareField1Changing(value)
				Me.SendPropertyChanging
				Me._SpareField1 = value
				Me.SendPropertyChanged("SpareField1")
				Me.OnSpareField1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SpareField2", DbType:="NVarChar(50)")>  _
	Public Property SpareField2() As String
		Get
			Return Me._SpareField2
		End Get
		Set
			If (String.Equals(Me._SpareField2, value) = false) Then
				Me.OnSpareField2Changing(value)
				Me.SendPropertyChanging
				Me._SpareField2 = value
				Me.SendPropertyChanged("SpareField2")
				Me.OnSpareField2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SpareField3", DbType:="NVarChar(50)")>  _
	Public Property SpareField3() As String
		Get
			Return Me._SpareField3
		End Get
		Set
			If (String.Equals(Me._SpareField3, value) = false) Then
				Me.OnSpareField3Changing(value)
				Me.SendPropertyChanging
				Me._SpareField3 = value
				Me.SendPropertyChanged("SpareField3")
				Me.OnSpareField3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SpareField4", DbType:="NVarChar(50)")>  _
	Public Property SpareField4() As String
		Get
			Return Me._SpareField4
		End Get
		Set
			If (String.Equals(Me._SpareField4, value) = false) Then
				Me.OnSpareField4Changing(value)
				Me.SendPropertyChanging
				Me._SpareField4 = value
				Me.SendPropertyChanged("SpareField4")
				Me.OnSpareField4Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SpareField5", DbType:="NVarChar(50)")>  _
	Public Property SpareField5() As String
		Get
			Return Me._SpareField5
		End Get
		Set
			If (String.Equals(Me._SpareField5, value) = false) Then
				Me.OnSpareField5Changing(value)
				Me.SendPropertyChanging
				Me._SpareField5 = value
				Me.SendPropertyChanged("SpareField5")
				Me.OnSpareField5Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RID", DbType:="Int NOT NULL")>  _
	Public Property RID() As Integer
		Get
			Return Me._RID
		End Get
		Set
			If ((Me._RID = value)  _
						= false) Then
				Me.OnRIDChanging(value)
				Me.SendPropertyChanging
				Me._RID = value
				Me.SendPropertyChanged("RID")
				Me.OnRIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="Error", Storage:="_Error", DbType:="Bit NOT NULL")>  _
	Public Property [Error]() As Boolean
		Get
			Return Me._Error
		End Get
		Set
			If ((Me._Error = value)  _
						= false) Then
				Me.OnErrorChanging(value)
				Me.SendPropertyChanging
				Me._Error = value
				Me.SendPropertyChanged("[Error]")
				Me.OnErrorChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ErrorMessage", DbType:="NVarChar(MAX)")>  _
	Public Property ErrorMessage() As String
		Get
			Return Me._ErrorMessage
		End Get
		Set
			If (String.Equals(Me._ErrorMessage, value) = false) Then
				Me.OnErrorMessageChanging(value)
				Me.SendPropertyChanging
				Me._ErrorMessage = value
				Me.SendPropertyChanged("ErrorMessage")
				Me.OnErrorMessageChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DownloadDate", DbType:="DateTime")>  _
	Public Property DownloadDate() As System.Nullable(Of Date)
		Get
			Return Me._DownloadDate
		End Get
		Set
			If (Me._DownloadDate.Equals(value) = false) Then
				Me.OnDownloadDateChanging(value)
				Me.SendPropertyChanging
				Me._DownloadDate = value
				Me.SendPropertyChanged("DownloadDate")
				Me.OnDownloadDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DownloadMode", DbType:="NVarChar(20)")>  _
	Public Property DownloadMode() As String
		Get
			Return Me._DownloadMode
		End Get
		Set
			If (String.Equals(Me._DownloadMode, value) = false) Then
				Me.OnDownloadModeChanging(value)
				Me.SendPropertyChanging
				Me._DownloadMode = value
				Me.SendPropertyChanged("DownloadMode")
				Me.OnDownloadModeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MoreInfoRequested", DbType:="Bit")>  _
	Public Property MoreInfoRequested() As System.Nullable(Of Boolean)
		Get
			Return Me._MoreInfoRequested
		End Get
		Set
			If (Me._MoreInfoRequested.Equals(value) = false) Then
				Me.OnMoreInfoRequestedChanging(value)
				Me.SendPropertyChanging
				Me._MoreInfoRequested = value
				Me.SendPropertyChanged("MoreInfoRequested")
				Me.OnMoreInfoRequestedChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OrigCurrency", DbType:="VarChar(5)")>  _
	Public Property OrigCurrency() As String
		Get
			Return Me._OrigCurrency
		End Get
		Set
			If (String.Equals(Me._OrigCurrency, value) = false) Then
				Me.OnOrigCurrencyChanging(value)
				Me.SendPropertyChanging
				Me._OrigCurrency = value
				Me.SendPropertyChanged("OrigCurrency")
				Me.OnOrigCurrencyChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OrigCurrencyAmount", DbType:="Money")>  _
	Public Property OrigCurrencyAmount() As System.Nullable(Of Decimal)
		Get
			Return Me._OrigCurrencyAmount
		End Get
		Set
			If (Me._OrigCurrencyAmount.Equals(value) = false) Then
				Me.OnOrigCurrencyAmountChanging(value)
				Me.SendPropertyChanging
				Me._OrigCurrencyAmount = value
				Me.SendPropertyChanged("OrigCurrencyAmount")
				Me.OnOrigCurrencyAmountChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="AP_Staff_Rmb_AP_Staff_RmbLine", Storage:="_AP_Staff_RmbLines", ThisKey:="RMBNo", OtherKey:="RmbNo")>  _
	Public Property AP_Staff_RmbLines() As EntitySet(Of AP_Staff_RmbLine)
		Get
			Return Me._AP_Staff_RmbLines
		End Get
		Set
			Me._AP_Staff_RmbLines.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="User_AP_Staff_Rmb", Storage:="_User", ThisKey:="UserId", OtherKey:="UserID", IsForeignKey:=true)>  _
	Public Property User() As User
		Get
			Return Me._User.Entity
		End Get
		Set
			Dim previousValue As User = Me._User.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._User.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._User.Entity = Nothing
					previousValue.AP_Staff_Rmbs.Remove(Me)
				End If
				Me._User.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.AP_Staff_Rmbs.Add(Me)
					Me._UserId = value.UserID
				Else
					Me._UserId = CType(Nothing, Integer)
				End If
				Me.SendPropertyChanged("User")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_AP_Staff_RmbLines(ByVal entity As AP_Staff_RmbLine)
		Me.SendPropertyChanging
		entity.AP_Staff_Rmb = Me
	End Sub
	
	Private Sub detach_AP_Staff_RmbLines(ByVal entity As AP_Staff_RmbLine)
		Me.SendPropertyChanging
		entity.AP_Staff_Rmb = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.AP_Staff_RmbLine")>  _
Partial Public Class AP_Staff_RmbLine
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _RmbLineNo As Long
	
	Private _RmbNo As Long
	
	Private _LineType As Short
	
	Private _GrossAmount As Decimal
	
	Private _TransDate As Date
	
	Private _Comment As String
	
	Private _Taxable As Boolean
	
	Private _Receipt As Boolean
	
	Private _VATReceipt As Boolean
	
	Private _ReceiptNo As System.Nullable(Of Short)
	
	Private _Mileage As System.Nullable(Of Short)
	
	Private _MileageRate As System.Nullable(Of Decimal)
	
	Private _Spare1 As String
	
	Private _Spare2 As String
	
	Private _Spare3 As String
	
	Private _Spare4 As String
	
	Private _Spare5 As String
	
	Private _AnalysisCode As String
	
	Private _Split As Boolean
	
	Private _LargeTransaction As Boolean
	
	Private _OutOfDate As Boolean
	
	Private _Department As Boolean
	
	Private _AccountCode As String
	
	Private _CostCenter As String
	
	Private _VATRate As System.Nullable(Of Double)
	
	Private _VATCode As String
	
	Private _ForceTaxOrig As System.Nullable(Of Boolean)
	
	Private _OrigCurrency As String
	
	Private _OrigCurrencyAmount As System.Nullable(Of Decimal)
	
	Private _ShortComment As String
	
	Private _ReceiptMode As System.Nullable(Of Byte)
	
	Private _ReceiptImageId As System.Nullable(Of Integer)
	
	Private _ReceiptText As String
	
	Private _AP_Staff_Rmb As EntityRef(Of AP_Staff_Rmb)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnRmbLineNoChanging(value As Long)
    End Sub
    Partial Private Sub OnRmbLineNoChanged()
    End Sub
    Partial Private Sub OnRmbNoChanging(value As Long)
    End Sub
    Partial Private Sub OnRmbNoChanged()
    End Sub
    Partial Private Sub OnLineTypeChanging(value As Short)
    End Sub
    Partial Private Sub OnLineTypeChanged()
    End Sub
    Partial Private Sub OnGrossAmountChanging(value As Decimal)
    End Sub
    Partial Private Sub OnGrossAmountChanged()
    End Sub
    Partial Private Sub OnTransDateChanging(value As Date)
    End Sub
    Partial Private Sub OnTransDateChanged()
    End Sub
    Partial Private Sub OnCommentChanging(value As String)
    End Sub
    Partial Private Sub OnCommentChanged()
    End Sub
    Partial Private Sub OnTaxableChanging(value As Boolean)
    End Sub
    Partial Private Sub OnTaxableChanged()
    End Sub
    Partial Private Sub OnReceiptChanging(value As Boolean)
    End Sub
    Partial Private Sub OnReceiptChanged()
    End Sub
    Partial Private Sub OnVATReceiptChanging(value As Boolean)
    End Sub
    Partial Private Sub OnVATReceiptChanged()
    End Sub
    Partial Private Sub OnReceiptNoChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnReceiptNoChanged()
    End Sub
    Partial Private Sub OnMileageChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnMileageChanged()
    End Sub
    Partial Private Sub OnMileageRateChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnMileageRateChanged()
    End Sub
    Partial Private Sub OnSpare1Changing(value As String)
    End Sub
    Partial Private Sub OnSpare1Changed()
    End Sub
    Partial Private Sub OnSpare2Changing(value As String)
    End Sub
    Partial Private Sub OnSpare2Changed()
    End Sub
    Partial Private Sub OnSpare3Changing(value As String)
    End Sub
    Partial Private Sub OnSpare3Changed()
    End Sub
    Partial Private Sub OnSpare4Changing(value As String)
    End Sub
    Partial Private Sub OnSpare4Changed()
    End Sub
    Partial Private Sub OnSpare5Changing(value As String)
    End Sub
    Partial Private Sub OnSpare5Changed()
    End Sub
    Partial Private Sub OnAnalysisCodeChanging(value As String)
    End Sub
    Partial Private Sub OnAnalysisCodeChanged()
    End Sub
    Partial Private Sub OnSplitChanging(value As Boolean)
    End Sub
    Partial Private Sub OnSplitChanged()
    End Sub
    Partial Private Sub OnLargeTransactionChanging(value As Boolean)
    End Sub
    Partial Private Sub OnLargeTransactionChanged()
    End Sub
    Partial Private Sub OnOutOfDateChanging(value As Boolean)
    End Sub
    Partial Private Sub OnOutOfDateChanged()
    End Sub
    Partial Private Sub OnDepartmentChanging(value As Boolean)
    End Sub
    Partial Private Sub OnDepartmentChanged()
    End Sub
    Partial Private Sub OnAccountCodeChanging(value As String)
    End Sub
    Partial Private Sub OnAccountCodeChanged()
    End Sub
    Partial Private Sub OnCostCenterChanging(value As String)
    End Sub
    Partial Private Sub OnCostCenterChanged()
    End Sub
    Partial Private Sub OnVATRateChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnVATRateChanged()
    End Sub
    Partial Private Sub OnVATCodeChanging(value As String)
    End Sub
    Partial Private Sub OnVATCodeChanged()
    End Sub
    Partial Private Sub OnForceTaxOrigChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnForceTaxOrigChanged()
    End Sub
    Partial Private Sub OnOrigCurrencyChanging(value As String)
    End Sub
    Partial Private Sub OnOrigCurrencyChanged()
    End Sub
    Partial Private Sub OnOrigCurrencyAmountChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnOrigCurrencyAmountChanged()
    End Sub
    Partial Private Sub OnShortCommentChanging(value As String)
    End Sub
    Partial Private Sub OnShortCommentChanged()
    End Sub
    Partial Private Sub OnReceiptModeChanging(value As System.Nullable(Of Byte))
    End Sub
    Partial Private Sub OnReceiptModeChanged()
    End Sub
    Partial Private Sub OnReceiptImageIdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnReceiptImageIdChanged()
    End Sub
    Partial Private Sub OnReceiptTextChanging(value As String)
    End Sub
    Partial Private Sub OnReceiptTextChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._AP_Staff_Rmb = CType(Nothing, EntityRef(Of AP_Staff_Rmb))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RmbLineNo", AutoSync:=AutoSync.OnInsert, DbType:="BigInt NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property RmbLineNo() As Long
		Get
			Return Me._RmbLineNo
		End Get
		Set
			If ((Me._RmbLineNo = value)  _
						= false) Then
				Me.OnRmbLineNoChanging(value)
				Me.SendPropertyChanging
				Me._RmbLineNo = value
				Me.SendPropertyChanged("RmbLineNo")
				Me.OnRmbLineNoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RmbNo", DbType:="BigInt NOT NULL")>  _
	Public Property RmbNo() As Long
		Get
			Return Me._RmbNo
		End Get
		Set
			If ((Me._RmbNo = value)  _
						= false) Then
				If Me._AP_Staff_Rmb.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnRmbNoChanging(value)
				Me.SendPropertyChanging
				Me._RmbNo = value
				Me.SendPropertyChanged("RmbNo")
				Me.OnRmbNoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LineType", DbType:="SmallInt NOT NULL")>  _
	Public Property LineType() As Short
		Get
			Return Me._LineType
		End Get
		Set
			If ((Me._LineType = value)  _
						= false) Then
				Me.OnLineTypeChanging(value)
				Me.SendPropertyChanging
				Me._LineType = value
				Me.SendPropertyChanged("LineType")
				Me.OnLineTypeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GrossAmount", DbType:="Money NOT NULL")>  _
	Public Property GrossAmount() As Decimal
		Get
			Return Me._GrossAmount
		End Get
		Set
			If ((Me._GrossAmount = value)  _
						= false) Then
				Me.OnGrossAmountChanging(value)
				Me.SendPropertyChanging
				Me._GrossAmount = value
				Me.SendPropertyChanged("GrossAmount")
				Me.OnGrossAmountChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TransDate", DbType:="Date NOT NULL")>  _
	Public Property TransDate() As Date
		Get
			Return Me._TransDate
		End Get
		Set
			If ((Me._TransDate = value)  _
						= false) Then
				Me.OnTransDateChanging(value)
				Me.SendPropertyChanging
				Me._TransDate = value
				Me.SendPropertyChanged("TransDate")
				Me.OnTransDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Comment", DbType:="NVarChar(MAX) NOT NULL", CanBeNull:=false)>  _
	Public Property Comment() As String
		Get
			Return Me._Comment
		End Get
		Set
			If (String.Equals(Me._Comment, value) = false) Then
				Me.OnCommentChanging(value)
				Me.SendPropertyChanging
				Me._Comment = value
				Me.SendPropertyChanged("Comment")
				Me.OnCommentChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Taxable", DbType:="Bit NOT NULL")>  _
	Public Property Taxable() As Boolean
		Get
			Return Me._Taxable
		End Get
		Set
			If ((Me._Taxable = value)  _
						= false) Then
				Me.OnTaxableChanging(value)
				Me.SendPropertyChanging
				Me._Taxable = value
				Me.SendPropertyChanged("Taxable")
				Me.OnTaxableChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Receipt", DbType:="Bit NOT NULL")>  _
	Public Property Receipt() As Boolean
		Get
			Return Me._Receipt
		End Get
		Set
			If ((Me._Receipt = value)  _
						= false) Then
				Me.OnReceiptChanging(value)
				Me.SendPropertyChanging
				Me._Receipt = value
				Me.SendPropertyChanged("Receipt")
				Me.OnReceiptChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VATReceipt", DbType:="Bit NOT NULL")>  _
	Public Property VATReceipt() As Boolean
		Get
			Return Me._VATReceipt
		End Get
		Set
			If ((Me._VATReceipt = value)  _
						= false) Then
				Me.OnVATReceiptChanging(value)
				Me.SendPropertyChanging
				Me._VATReceipt = value
				Me.SendPropertyChanged("VATReceipt")
				Me.OnVATReceiptChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ReceiptNo", DbType:="SmallInt")>  _
	Public Property ReceiptNo() As System.Nullable(Of Short)
		Get
			Return Me._ReceiptNo
		End Get
		Set
			If (Me._ReceiptNo.Equals(value) = false) Then
				Me.OnReceiptNoChanging(value)
				Me.SendPropertyChanging
				Me._ReceiptNo = value
				Me.SendPropertyChanged("ReceiptNo")
				Me.OnReceiptNoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Mileage", DbType:="SmallInt")>  _
	Public Property Mileage() As System.Nullable(Of Short)
		Get
			Return Me._Mileage
		End Get
		Set
			If (Me._Mileage.Equals(value) = false) Then
				Me.OnMileageChanging(value)
				Me.SendPropertyChanging
				Me._Mileage = value
				Me.SendPropertyChanged("Mileage")
				Me.OnMileageChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MileageRate", DbType:="Money")>  _
	Public Property MileageRate() As System.Nullable(Of Decimal)
		Get
			Return Me._MileageRate
		End Get
		Set
			If (Me._MileageRate.Equals(value) = false) Then
				Me.OnMileageRateChanging(value)
				Me.SendPropertyChanging
				Me._MileageRate = value
				Me.SendPropertyChanged("MileageRate")
				Me.OnMileageRateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Spare1", DbType:="NVarChar(MAX)")>  _
	Public Property Spare1() As String
		Get
			Return Me._Spare1
		End Get
		Set
			If (String.Equals(Me._Spare1, value) = false) Then
				Me.OnSpare1Changing(value)
				Me.SendPropertyChanging
				Me._Spare1 = value
				Me.SendPropertyChanged("Spare1")
				Me.OnSpare1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Spare2", DbType:="NVarChar(MAX)")>  _
	Public Property Spare2() As String
		Get
			Return Me._Spare2
		End Get
		Set
			If (String.Equals(Me._Spare2, value) = false) Then
				Me.OnSpare2Changing(value)
				Me.SendPropertyChanging
				Me._Spare2 = value
				Me.SendPropertyChanged("Spare2")
				Me.OnSpare2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Spare3", DbType:="NVarChar(100)")>  _
	Public Property Spare3() As String
		Get
			Return Me._Spare3
		End Get
		Set
			If (String.Equals(Me._Spare3, value) = false) Then
				Me.OnSpare3Changing(value)
				Me.SendPropertyChanging
				Me._Spare3 = value
				Me.SendPropertyChanged("Spare3")
				Me.OnSpare3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Spare4", DbType:="NVarChar(100)")>  _
	Public Property Spare4() As String
		Get
			Return Me._Spare4
		End Get
		Set
			If (String.Equals(Me._Spare4, value) = false) Then
				Me.OnSpare4Changing(value)
				Me.SendPropertyChanging
				Me._Spare4 = value
				Me.SendPropertyChanged("Spare4")
				Me.OnSpare4Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Spare5", DbType:="NVarChar(100)")>  _
	Public Property Spare5() As String
		Get
			Return Me._Spare5
		End Get
		Set
			If (String.Equals(Me._Spare5, value) = false) Then
				Me.OnSpare5Changing(value)
				Me.SendPropertyChanging
				Me._Spare5 = value
				Me.SendPropertyChanged("Spare5")
				Me.OnSpare5Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AnalysisCode", DbType:="NVarChar(50)")>  _
	Public Property AnalysisCode() As String
		Get
			Return Me._AnalysisCode
		End Get
		Set
			If (String.Equals(Me._AnalysisCode, value) = false) Then
				Me.OnAnalysisCodeChanging(value)
				Me.SendPropertyChanging
				Me._AnalysisCode = value
				Me.SendPropertyChanged("AnalysisCode")
				Me.OnAnalysisCodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Split", DbType:="Bit NOT NULL")>  _
	Public Property Split() As Boolean
		Get
			Return Me._Split
		End Get
		Set
			If ((Me._Split = value)  _
						= false) Then
				Me.OnSplitChanging(value)
				Me.SendPropertyChanging
				Me._Split = value
				Me.SendPropertyChanged("Split")
				Me.OnSplitChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LargeTransaction", DbType:="Bit NOT NULL")>  _
	Public Property LargeTransaction() As Boolean
		Get
			Return Me._LargeTransaction
		End Get
		Set
			If ((Me._LargeTransaction = value)  _
						= false) Then
				Me.OnLargeTransactionChanging(value)
				Me.SendPropertyChanging
				Me._LargeTransaction = value
				Me.SendPropertyChanged("LargeTransaction")
				Me.OnLargeTransactionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OutOfDate", DbType:="Bit NOT NULL")>  _
	Public Property OutOfDate() As Boolean
		Get
			Return Me._OutOfDate
		End Get
		Set
			If ((Me._OutOfDate = value)  _
						= false) Then
				Me.OnOutOfDateChanging(value)
				Me.SendPropertyChanging
				Me._OutOfDate = value
				Me.SendPropertyChanged("OutOfDate")
				Me.OnOutOfDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Department", DbType:="Bit NOT NULL")>  _
	Public Property Department() As Boolean
		Get
			Return Me._Department
		End Get
		Set
			If ((Me._Department = value)  _
						= false) Then
				Me.OnDepartmentChanging(value)
				Me.SendPropertyChanging
				Me._Department = value
				Me.SendPropertyChanged("Department")
				Me.OnDepartmentChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AccountCode", DbType:="NVarChar(12)")>  _
	Public Property AccountCode() As String
		Get
			Return Me._AccountCode
		End Get
		Set
			If (String.Equals(Me._AccountCode, value) = false) Then
				Me.OnAccountCodeChanging(value)
				Me.SendPropertyChanging
				Me._AccountCode = value
				Me.SendPropertyChanged("AccountCode")
				Me.OnAccountCodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CostCenter", DbType:="NVarChar(12)")>  _
	Public Property CostCenter() As String
		Get
			Return Me._CostCenter
		End Get
		Set
			If (String.Equals(Me._CostCenter, value) = false) Then
				Me.OnCostCenterChanging(value)
				Me.SendPropertyChanging
				Me._CostCenter = value
				Me.SendPropertyChanged("CostCenter")
				Me.OnCostCenterChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VATRate", DbType:="Float")>  _
	Public Property VATRate() As System.Nullable(Of Double)
		Get
			Return Me._VATRate
		End Get
		Set
			If (Me._VATRate.Equals(value) = false) Then
				Me.OnVATRateChanging(value)
				Me.SendPropertyChanging
				Me._VATRate = value
				Me.SendPropertyChanged("VATRate")
				Me.OnVATRateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VATCode", DbType:="NVarChar(8)")>  _
	Public Property VATCode() As String
		Get
			Return Me._VATCode
		End Get
		Set
			If (String.Equals(Me._VATCode, value) = false) Then
				Me.OnVATCodeChanging(value)
				Me.SendPropertyChanging
				Me._VATCode = value
				Me.SendPropertyChanged("VATCode")
				Me.OnVATCodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ForceTaxOrig", DbType:="Bit")>  _
	Public Property ForceTaxOrig() As System.Nullable(Of Boolean)
		Get
			Return Me._ForceTaxOrig
		End Get
		Set
			If (Me._ForceTaxOrig.Equals(value) = false) Then
				Me.OnForceTaxOrigChanging(value)
				Me.SendPropertyChanging
				Me._ForceTaxOrig = value
				Me.SendPropertyChanged("ForceTaxOrig")
				Me.OnForceTaxOrigChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OrigCurrency", DbType:="VarChar(5)")>  _
	Public Property OrigCurrency() As String
		Get
			Return Me._OrigCurrency
		End Get
		Set
			If (String.Equals(Me._OrigCurrency, value) = false) Then
				Me.OnOrigCurrencyChanging(value)
				Me.SendPropertyChanging
				Me._OrigCurrency = value
				Me.SendPropertyChanged("OrigCurrency")
				Me.OnOrigCurrencyChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OrigCurrencyAmount", DbType:="Money")>  _
	Public Property OrigCurrencyAmount() As System.Nullable(Of Decimal)
		Get
			Return Me._OrigCurrencyAmount
		End Get
		Set
			If (Me._OrigCurrencyAmount.Equals(value) = false) Then
				Me.OnOrigCurrencyAmountChanging(value)
				Me.SendPropertyChanging
				Me._OrigCurrencyAmount = value
				Me.SendPropertyChanged("OrigCurrencyAmount")
				Me.OnOrigCurrencyAmountChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ShortComment", DbType:="NVarChar(27)")>  _
	Public Property ShortComment() As String
		Get
			Return Me._ShortComment
		End Get
		Set
			If (String.Equals(Me._ShortComment, value) = false) Then
				Me.OnShortCommentChanging(value)
				Me.SendPropertyChanging
				Me._ShortComment = value
				Me.SendPropertyChanged("ShortComment")
				Me.OnShortCommentChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ReceiptMode", DbType:="TinyInt")>  _
	Public Property ReceiptMode() As System.Nullable(Of Byte)
		Get
			Return Me._ReceiptMode
		End Get
		Set
			If (Me._ReceiptMode.Equals(value) = false) Then
				Me.OnReceiptModeChanging(value)
				Me.SendPropertyChanging
				Me._ReceiptMode = value
				Me.SendPropertyChanged("ReceiptMode")
				Me.OnReceiptModeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ReceiptImageId", DbType:="Int")>  _
	Public Property ReceiptImageId() As System.Nullable(Of Integer)
		Get
			Return Me._ReceiptImageId
		End Get
		Set
			If (Me._ReceiptImageId.Equals(value) = false) Then
				Me.OnReceiptImageIdChanging(value)
				Me.SendPropertyChanging
				Me._ReceiptImageId = value
				Me.SendPropertyChanged("ReceiptImageId")
				Me.OnReceiptImageIdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ReceiptText", DbType:="NVarChar(MAX)")>  _
	Public Property ReceiptText() As String
		Get
			Return Me._ReceiptText
		End Get
		Set
			If (String.Equals(Me._ReceiptText, value) = false) Then
				Me.OnReceiptTextChanging(value)
				Me.SendPropertyChanging
				Me._ReceiptText = value
				Me.SendPropertyChanged("ReceiptText")
				Me.OnReceiptTextChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="AP_Staff_Rmb_AP_Staff_RmbLine", Storage:="_AP_Staff_Rmb", ThisKey:="RmbNo", OtherKey:="RMBNo", IsForeignKey:=true)>  _
	Public Property AP_Staff_Rmb() As AP_Staff_Rmb
		Get
			Return Me._AP_Staff_Rmb.Entity
		End Get
		Set
			Dim previousValue As AP_Staff_Rmb = Me._AP_Staff_Rmb.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._AP_Staff_Rmb.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._AP_Staff_Rmb.Entity = Nothing
					previousValue.AP_Staff_RmbLines.Remove(Me)
				End If
				Me._AP_Staff_Rmb.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.AP_Staff_RmbLines.Add(Me)
					Me._RmbNo = value.RMBNo
				Else
					Me._RmbNo = CType(Nothing, Long)
				End If
				Me.SendPropertyChanged("AP_Staff_Rmb")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.TabModules")>  _
Partial Public Class TabModule
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _TabModuleID As Integer
	
	Private _TabID As Integer
	
	Private _ModuleID As Integer
	
	Private _PaneName As String
	
	Private _ModuleOrder As Integer
	
	Private _CacheTime As Integer
	
	Private _Alignment As String
	
	Private _Color As String
	
	Private _Border As String
	
	Private _IconFile As String
	
	Private _Visibility As Integer
	
	Private _ContainerSrc As String
	
	Private _DisplayTitle As Boolean
	
	Private _DisplayPrint As Boolean
	
	Private _DisplaySyndicate As Boolean
	
	Private _IsWebSlice As Boolean
	
	Private _WebSliceTitle As String
	
	Private _WebSliceExpiryDate As System.Nullable(Of Date)
	
	Private _WebSliceTTL As System.Nullable(Of Integer)
	
	Private _CreatedByUserID As System.Nullable(Of Integer)
	
	Private _CreatedOnDate As System.Nullable(Of Date)
	
	Private _LastModifiedByUserID As System.Nullable(Of Integer)
	
	Private _LastModifiedOnDate As System.Nullable(Of Date)
	
	Private _IsDeleted As Boolean
	
	Private _CacheMethod As String
	
	Private _ModuleTitle As String
	
	Private _Header As String
	
	Private _Footer As String
	
	Private _CultureCode As String
	
	Private _UniqueId As System.Guid
	
	Private _VersionGuid As System.Guid
	
	Private _DefaultLanguageGuid As System.Nullable(Of System.Guid)
	
	Private _LocalizedVersionGuid As System.Guid
	
	Private _TabModuleSettings As EntitySet(Of TabModuleSetting)
	
	Private _Tab As EntityRef(Of Tab)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnTabModuleIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnTabModuleIDChanged()
    End Sub
    Partial Private Sub OnTabIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnTabIDChanged()
    End Sub
    Partial Private Sub OnModuleIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnModuleIDChanged()
    End Sub
    Partial Private Sub OnPaneNameChanging(value As String)
    End Sub
    Partial Private Sub OnPaneNameChanged()
    End Sub
    Partial Private Sub OnModuleOrderChanging(value As Integer)
    End Sub
    Partial Private Sub OnModuleOrderChanged()
    End Sub
    Partial Private Sub OnCacheTimeChanging(value As Integer)
    End Sub
    Partial Private Sub OnCacheTimeChanged()
    End Sub
    Partial Private Sub OnAlignmentChanging(value As String)
    End Sub
    Partial Private Sub OnAlignmentChanged()
    End Sub
    Partial Private Sub OnColorChanging(value As String)
    End Sub
    Partial Private Sub OnColorChanged()
    End Sub
    Partial Private Sub OnBorderChanging(value As String)
    End Sub
    Partial Private Sub OnBorderChanged()
    End Sub
    Partial Private Sub OnIconFileChanging(value As String)
    End Sub
    Partial Private Sub OnIconFileChanged()
    End Sub
    Partial Private Sub OnVisibilityChanging(value As Integer)
    End Sub
    Partial Private Sub OnVisibilityChanged()
    End Sub
    Partial Private Sub OnContainerSrcChanging(value As String)
    End Sub
    Partial Private Sub OnContainerSrcChanged()
    End Sub
    Partial Private Sub OnDisplayTitleChanging(value As Boolean)
    End Sub
    Partial Private Sub OnDisplayTitleChanged()
    End Sub
    Partial Private Sub OnDisplayPrintChanging(value As Boolean)
    End Sub
    Partial Private Sub OnDisplayPrintChanged()
    End Sub
    Partial Private Sub OnDisplaySyndicateChanging(value As Boolean)
    End Sub
    Partial Private Sub OnDisplaySyndicateChanged()
    End Sub
    Partial Private Sub OnIsWebSliceChanging(value As Boolean)
    End Sub
    Partial Private Sub OnIsWebSliceChanged()
    End Sub
    Partial Private Sub OnWebSliceTitleChanging(value As String)
    End Sub
    Partial Private Sub OnWebSliceTitleChanged()
    End Sub
    Partial Private Sub OnWebSliceExpiryDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnWebSliceExpiryDateChanged()
    End Sub
    Partial Private Sub OnWebSliceTTLChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnWebSliceTTLChanged()
    End Sub
    Partial Private Sub OnCreatedByUserIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCreatedByUserIDChanged()
    End Sub
    Partial Private Sub OnCreatedOnDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCreatedOnDateChanged()
    End Sub
    Partial Private Sub OnLastModifiedByUserIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnLastModifiedByUserIDChanged()
    End Sub
    Partial Private Sub OnLastModifiedOnDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnLastModifiedOnDateChanged()
    End Sub
    Partial Private Sub OnIsDeletedChanging(value As Boolean)
    End Sub
    Partial Private Sub OnIsDeletedChanged()
    End Sub
    Partial Private Sub OnCacheMethodChanging(value As String)
    End Sub
    Partial Private Sub OnCacheMethodChanged()
    End Sub
    Partial Private Sub OnModuleTitleChanging(value As String)
    End Sub
    Partial Private Sub OnModuleTitleChanged()
    End Sub
    Partial Private Sub OnHeaderChanging(value As String)
    End Sub
    Partial Private Sub OnHeaderChanged()
    End Sub
    Partial Private Sub OnFooterChanging(value As String)
    End Sub
    Partial Private Sub OnFooterChanged()
    End Sub
    Partial Private Sub OnCultureCodeChanging(value As String)
    End Sub
    Partial Private Sub OnCultureCodeChanged()
    End Sub
    Partial Private Sub OnUniqueIdChanging(value As System.Guid)
    End Sub
    Partial Private Sub OnUniqueIdChanged()
    End Sub
    Partial Private Sub OnVersionGuidChanging(value As System.Guid)
    End Sub
    Partial Private Sub OnVersionGuidChanged()
    End Sub
    Partial Private Sub OnDefaultLanguageGuidChanging(value As System.Nullable(Of System.Guid))
    End Sub
    Partial Private Sub OnDefaultLanguageGuidChanged()
    End Sub
    Partial Private Sub OnLocalizedVersionGuidChanging(value As System.Guid)
    End Sub
    Partial Private Sub OnLocalizedVersionGuidChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._TabModuleSettings = New EntitySet(Of TabModuleSetting)(AddressOf Me.attach_TabModuleSettings, AddressOf Me.detach_TabModuleSettings)
		Me._Tab = CType(Nothing, EntityRef(Of Tab))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TabModuleID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property TabModuleID() As Integer
		Get
			Return Me._TabModuleID
		End Get
		Set
			If ((Me._TabModuleID = value)  _
						= false) Then
				Me.OnTabModuleIDChanging(value)
				Me.SendPropertyChanging
				Me._TabModuleID = value
				Me.SendPropertyChanged("TabModuleID")
				Me.OnTabModuleIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TabID", DbType:="Int NOT NULL")>  _
	Public Property TabID() As Integer
		Get
			Return Me._TabID
		End Get
		Set
			If ((Me._TabID = value)  _
						= false) Then
				If Me._Tab.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnTabIDChanging(value)
				Me.SendPropertyChanging
				Me._TabID = value
				Me.SendPropertyChanged("TabID")
				Me.OnTabIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModuleID", DbType:="Int NOT NULL")>  _
	Public Property ModuleID() As Integer
		Get
			Return Me._ModuleID
		End Get
		Set
			If ((Me._ModuleID = value)  _
						= false) Then
				Me.OnModuleIDChanging(value)
				Me.SendPropertyChanging
				Me._ModuleID = value
				Me.SendPropertyChanged("ModuleID")
				Me.OnModuleIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PaneName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property PaneName() As String
		Get
			Return Me._PaneName
		End Get
		Set
			If (String.Equals(Me._PaneName, value) = false) Then
				Me.OnPaneNameChanging(value)
				Me.SendPropertyChanging
				Me._PaneName = value
				Me.SendPropertyChanged("PaneName")
				Me.OnPaneNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModuleOrder", DbType:="Int NOT NULL")>  _
	Public Property ModuleOrder() As Integer
		Get
			Return Me._ModuleOrder
		End Get
		Set
			If ((Me._ModuleOrder = value)  _
						= false) Then
				Me.OnModuleOrderChanging(value)
				Me.SendPropertyChanging
				Me._ModuleOrder = value
				Me.SendPropertyChanged("ModuleOrder")
				Me.OnModuleOrderChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CacheTime", DbType:="Int NOT NULL")>  _
	Public Property CacheTime() As Integer
		Get
			Return Me._CacheTime
		End Get
		Set
			If ((Me._CacheTime = value)  _
						= false) Then
				Me.OnCacheTimeChanging(value)
				Me.SendPropertyChanging
				Me._CacheTime = value
				Me.SendPropertyChanged("CacheTime")
				Me.OnCacheTimeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Alignment", DbType:="NVarChar(10)")>  _
	Public Property Alignment() As String
		Get
			Return Me._Alignment
		End Get
		Set
			If (String.Equals(Me._Alignment, value) = false) Then
				Me.OnAlignmentChanging(value)
				Me.SendPropertyChanging
				Me._Alignment = value
				Me.SendPropertyChanged("Alignment")
				Me.OnAlignmentChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Color", DbType:="NVarChar(20)")>  _
	Public Property Color() As String
		Get
			Return Me._Color
		End Get
		Set
			If (String.Equals(Me._Color, value) = false) Then
				Me.OnColorChanging(value)
				Me.SendPropertyChanging
				Me._Color = value
				Me.SendPropertyChanged("Color")
				Me.OnColorChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Border", DbType:="NVarChar(1)")>  _
	Public Property Border() As String
		Get
			Return Me._Border
		End Get
		Set
			If (String.Equals(Me._Border, value) = false) Then
				Me.OnBorderChanging(value)
				Me.SendPropertyChanging
				Me._Border = value
				Me.SendPropertyChanged("Border")
				Me.OnBorderChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IconFile", DbType:="NVarChar(100)")>  _
	Public Property IconFile() As String
		Get
			Return Me._IconFile
		End Get
		Set
			If (String.Equals(Me._IconFile, value) = false) Then
				Me.OnIconFileChanging(value)
				Me.SendPropertyChanging
				Me._IconFile = value
				Me.SendPropertyChanged("IconFile")
				Me.OnIconFileChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Visibility", DbType:="Int NOT NULL")>  _
	Public Property Visibility() As Integer
		Get
			Return Me._Visibility
		End Get
		Set
			If ((Me._Visibility = value)  _
						= false) Then
				Me.OnVisibilityChanging(value)
				Me.SendPropertyChanging
				Me._Visibility = value
				Me.SendPropertyChanged("Visibility")
				Me.OnVisibilityChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ContainerSrc", DbType:="NVarChar(200)")>  _
	Public Property ContainerSrc() As String
		Get
			Return Me._ContainerSrc
		End Get
		Set
			If (String.Equals(Me._ContainerSrc, value) = false) Then
				Me.OnContainerSrcChanging(value)
				Me.SendPropertyChanging
				Me._ContainerSrc = value
				Me.SendPropertyChanged("ContainerSrc")
				Me.OnContainerSrcChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DisplayTitle", DbType:="Bit NOT NULL")>  _
	Public Property DisplayTitle() As Boolean
		Get
			Return Me._DisplayTitle
		End Get
		Set
			If ((Me._DisplayTitle = value)  _
						= false) Then
				Me.OnDisplayTitleChanging(value)
				Me.SendPropertyChanging
				Me._DisplayTitle = value
				Me.SendPropertyChanged("DisplayTitle")
				Me.OnDisplayTitleChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DisplayPrint", DbType:="Bit NOT NULL")>  _
	Public Property DisplayPrint() As Boolean
		Get
			Return Me._DisplayPrint
		End Get
		Set
			If ((Me._DisplayPrint = value)  _
						= false) Then
				Me.OnDisplayPrintChanging(value)
				Me.SendPropertyChanging
				Me._DisplayPrint = value
				Me.SendPropertyChanged("DisplayPrint")
				Me.OnDisplayPrintChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DisplaySyndicate", DbType:="Bit NOT NULL")>  _
	Public Property DisplaySyndicate() As Boolean
		Get
			Return Me._DisplaySyndicate
		End Get
		Set
			If ((Me._DisplaySyndicate = value)  _
						= false) Then
				Me.OnDisplaySyndicateChanging(value)
				Me.SendPropertyChanging
				Me._DisplaySyndicate = value
				Me.SendPropertyChanged("DisplaySyndicate")
				Me.OnDisplaySyndicateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsWebSlice", DbType:="Bit NOT NULL")>  _
	Public Property IsWebSlice() As Boolean
		Get
			Return Me._IsWebSlice
		End Get
		Set
			If ((Me._IsWebSlice = value)  _
						= false) Then
				Me.OnIsWebSliceChanging(value)
				Me.SendPropertyChanging
				Me._IsWebSlice = value
				Me.SendPropertyChanged("IsWebSlice")
				Me.OnIsWebSliceChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WebSliceTitle", DbType:="NVarChar(256)")>  _
	Public Property WebSliceTitle() As String
		Get
			Return Me._WebSliceTitle
		End Get
		Set
			If (String.Equals(Me._WebSliceTitle, value) = false) Then
				Me.OnWebSliceTitleChanging(value)
				Me.SendPropertyChanging
				Me._WebSliceTitle = value
				Me.SendPropertyChanged("WebSliceTitle")
				Me.OnWebSliceTitleChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WebSliceExpiryDate", DbType:="DateTime")>  _
	Public Property WebSliceExpiryDate() As System.Nullable(Of Date)
		Get
			Return Me._WebSliceExpiryDate
		End Get
		Set
			If (Me._WebSliceExpiryDate.Equals(value) = false) Then
				Me.OnWebSliceExpiryDateChanging(value)
				Me.SendPropertyChanging
				Me._WebSliceExpiryDate = value
				Me.SendPropertyChanged("WebSliceExpiryDate")
				Me.OnWebSliceExpiryDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WebSliceTTL", DbType:="Int")>  _
	Public Property WebSliceTTL() As System.Nullable(Of Integer)
		Get
			Return Me._WebSliceTTL
		End Get
		Set
			If (Me._WebSliceTTL.Equals(value) = false) Then
				Me.OnWebSliceTTLChanging(value)
				Me.SendPropertyChanging
				Me._WebSliceTTL = value
				Me.SendPropertyChanged("WebSliceTTL")
				Me.OnWebSliceTTLChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CreatedByUserID", DbType:="Int")>  _
	Public Property CreatedByUserID() As System.Nullable(Of Integer)
		Get
			Return Me._CreatedByUserID
		End Get
		Set
			If (Me._CreatedByUserID.Equals(value) = false) Then
				Me.OnCreatedByUserIDChanging(value)
				Me.SendPropertyChanging
				Me._CreatedByUserID = value
				Me.SendPropertyChanged("CreatedByUserID")
				Me.OnCreatedByUserIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CreatedOnDate", DbType:="DateTime")>  _
	Public Property CreatedOnDate() As System.Nullable(Of Date)
		Get
			Return Me._CreatedOnDate
		End Get
		Set
			If (Me._CreatedOnDate.Equals(value) = false) Then
				Me.OnCreatedOnDateChanging(value)
				Me.SendPropertyChanging
				Me._CreatedOnDate = value
				Me.SendPropertyChanged("CreatedOnDate")
				Me.OnCreatedOnDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LastModifiedByUserID", DbType:="Int")>  _
	Public Property LastModifiedByUserID() As System.Nullable(Of Integer)
		Get
			Return Me._LastModifiedByUserID
		End Get
		Set
			If (Me._LastModifiedByUserID.Equals(value) = false) Then
				Me.OnLastModifiedByUserIDChanging(value)
				Me.SendPropertyChanging
				Me._LastModifiedByUserID = value
				Me.SendPropertyChanged("LastModifiedByUserID")
				Me.OnLastModifiedByUserIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LastModifiedOnDate", DbType:="DateTime")>  _
	Public Property LastModifiedOnDate() As System.Nullable(Of Date)
		Get
			Return Me._LastModifiedOnDate
		End Get
		Set
			If (Me._LastModifiedOnDate.Equals(value) = false) Then
				Me.OnLastModifiedOnDateChanging(value)
				Me.SendPropertyChanging
				Me._LastModifiedOnDate = value
				Me.SendPropertyChanged("LastModifiedOnDate")
				Me.OnLastModifiedOnDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsDeleted", DbType:="Bit NOT NULL")>  _
	Public Property IsDeleted() As Boolean
		Get
			Return Me._IsDeleted
		End Get
		Set
			If ((Me._IsDeleted = value)  _
						= false) Then
				Me.OnIsDeletedChanging(value)
				Me.SendPropertyChanging
				Me._IsDeleted = value
				Me.SendPropertyChanged("IsDeleted")
				Me.OnIsDeletedChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CacheMethod", DbType:="VarChar(50)")>  _
	Public Property CacheMethod() As String
		Get
			Return Me._CacheMethod
		End Get
		Set
			If (String.Equals(Me._CacheMethod, value) = false) Then
				Me.OnCacheMethodChanging(value)
				Me.SendPropertyChanging
				Me._CacheMethod = value
				Me.SendPropertyChanged("CacheMethod")
				Me.OnCacheMethodChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModuleTitle", DbType:="NVarChar(256)")>  _
	Public Property ModuleTitle() As String
		Get
			Return Me._ModuleTitle
		End Get
		Set
			If (String.Equals(Me._ModuleTitle, value) = false) Then
				Me.OnModuleTitleChanging(value)
				Me.SendPropertyChanging
				Me._ModuleTitle = value
				Me.SendPropertyChanged("ModuleTitle")
				Me.OnModuleTitleChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Header", DbType:="NText", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Header() As String
		Get
			Return Me._Header
		End Get
		Set
			If (String.Equals(Me._Header, value) = false) Then
				Me.OnHeaderChanging(value)
				Me.SendPropertyChanging
				Me._Header = value
				Me.SendPropertyChanged("Header")
				Me.OnHeaderChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Footer", DbType:="NText", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Footer() As String
		Get
			Return Me._Footer
		End Get
		Set
			If (String.Equals(Me._Footer, value) = false) Then
				Me.OnFooterChanging(value)
				Me.SendPropertyChanging
				Me._Footer = value
				Me.SendPropertyChanged("Footer")
				Me.OnFooterChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CultureCode", DbType:="NVarChar(10)")>  _
	Public Property CultureCode() As String
		Get
			Return Me._CultureCode
		End Get
		Set
			If (String.Equals(Me._CultureCode, value) = false) Then
				Me.OnCultureCodeChanging(value)
				Me.SendPropertyChanging
				Me._CultureCode = value
				Me.SendPropertyChanged("CultureCode")
				Me.OnCultureCodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UniqueId", DbType:="UniqueIdentifier NOT NULL")>  _
	Public Property UniqueId() As System.Guid
		Get
			Return Me._UniqueId
		End Get
		Set
			If ((Me._UniqueId = value)  _
						= false) Then
				Me.OnUniqueIdChanging(value)
				Me.SendPropertyChanging
				Me._UniqueId = value
				Me.SendPropertyChanged("UniqueId")
				Me.OnUniqueIdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VersionGuid", DbType:="UniqueIdentifier NOT NULL")>  _
	Public Property VersionGuid() As System.Guid
		Get
			Return Me._VersionGuid
		End Get
		Set
			If ((Me._VersionGuid = value)  _
						= false) Then
				Me.OnVersionGuidChanging(value)
				Me.SendPropertyChanging
				Me._VersionGuid = value
				Me.SendPropertyChanged("VersionGuid")
				Me.OnVersionGuidChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DefaultLanguageGuid", DbType:="UniqueIdentifier")>  _
	Public Property DefaultLanguageGuid() As System.Nullable(Of System.Guid)
		Get
			Return Me._DefaultLanguageGuid
		End Get
		Set
			If (Me._DefaultLanguageGuid.Equals(value) = false) Then
				Me.OnDefaultLanguageGuidChanging(value)
				Me.SendPropertyChanging
				Me._DefaultLanguageGuid = value
				Me.SendPropertyChanged("DefaultLanguageGuid")
				Me.OnDefaultLanguageGuidChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LocalizedVersionGuid", DbType:="UniqueIdentifier NOT NULL")>  _
	Public Property LocalizedVersionGuid() As System.Guid
		Get
			Return Me._LocalizedVersionGuid
		End Get
		Set
			If ((Me._LocalizedVersionGuid = value)  _
						= false) Then
				Me.OnLocalizedVersionGuidChanging(value)
				Me.SendPropertyChanging
				Me._LocalizedVersionGuid = value
				Me.SendPropertyChanged("LocalizedVersionGuid")
				Me.OnLocalizedVersionGuidChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="TabModule_TabModuleSetting", Storage:="_TabModuleSettings", ThisKey:="TabModuleID", OtherKey:="TabModuleID")>  _
	Public Property TabModuleSettings() As EntitySet(Of TabModuleSetting)
		Get
			Return Me._TabModuleSettings
		End Get
		Set
			Me._TabModuleSettings.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Tab_TabModule", Storage:="_Tab", ThisKey:="TabID", OtherKey:="TabID", IsForeignKey:=true, DeleteOnNull:=true, DeleteRule:="CASCADE")>  _
	Public Property Tab() As Tab
		Get
			Return Me._Tab.Entity
		End Get
		Set
			Dim previousValue As Tab = Me._Tab.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._Tab.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._Tab.Entity = Nothing
					previousValue.TabModules.Remove(Me)
				End If
				Me._Tab.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.TabModules.Add(Me)
					Me._TabID = value.TabID
				Else
					Me._TabID = CType(Nothing, Integer)
				End If
				Me.SendPropertyChanged("Tab")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_TabModuleSettings(ByVal entity As TabModuleSetting)
		Me.SendPropertyChanging
		entity.TabModule = Me
	End Sub
	
	Private Sub detach_TabModuleSettings(ByVal entity As TabModuleSetting)
		Me.SendPropertyChanging
		entity.TabModule = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Tabs")>  _
Partial Public Class Tab
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _TabID As Integer
	
	Private _TabOrder As Integer
	
	Private _PortalID As System.Nullable(Of Integer)
	
	Private _TabName As String
	
	Private _IsVisible As Boolean
	
	Private _ParentId As System.Nullable(Of Integer)
	
	Private _IconFile As String
	
	Private _DisableLink As Boolean
	
	Private _Title As String
	
	Private _Description As String
	
	Private _KeyWords As String
	
	Private _IsDeleted As Boolean
	
	Private _Url As String
	
	Private _SkinSrc As String
	
	Private _ContainerSrc As String
	
	Private _StartDate As System.Nullable(Of Date)
	
	Private _EndDate As System.Nullable(Of Date)
	
	Private _RefreshInterval As System.Nullable(Of Integer)
	
	Private _PageHeadText As String
	
	Private _IsSecure As Boolean
	
	Private _PermanentRedirect As Boolean
	
	Private _SiteMapPriority As Double
	
	Private _CreatedByUserID As System.Nullable(Of Integer)
	
	Private _CreatedOnDate As System.Nullable(Of Date)
	
	Private _LastModifiedByUserID As System.Nullable(Of Integer)
	
	Private _LastModifiedOnDate As System.Nullable(Of Date)
	
	Private _IconFileLarge As String
	
	Private _CultureCode As String
	
	Private _ContentItemID As System.Nullable(Of Integer)
	
	Private _UniqueId As System.Guid
	
	Private _VersionGuid As System.Guid
	
	Private _DefaultLanguageGuid As System.Nullable(Of System.Guid)
	
	Private _LocalizedVersionGuid As System.Guid
	
	Private _Level As Integer
	
	Private _TabPath As String
	
	Private _TabModules As EntitySet(Of TabModule)
	
	Private _Tabs As EntitySet(Of Tab)
	
	Private _Tab As EntityRef(Of Tab)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnTabIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnTabIDChanged()
    End Sub
    Partial Private Sub OnTabOrderChanging(value As Integer)
    End Sub
    Partial Private Sub OnTabOrderChanged()
    End Sub
    Partial Private Sub OnPortalIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPortalIDChanged()
    End Sub
    Partial Private Sub OnTabNameChanging(value As String)
    End Sub
    Partial Private Sub OnTabNameChanged()
    End Sub
    Partial Private Sub OnIsVisibleChanging(value As Boolean)
    End Sub
    Partial Private Sub OnIsVisibleChanged()
    End Sub
    Partial Private Sub OnParentIdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnParentIdChanged()
    End Sub
    Partial Private Sub OnIconFileChanging(value As String)
    End Sub
    Partial Private Sub OnIconFileChanged()
    End Sub
    Partial Private Sub OnDisableLinkChanging(value As Boolean)
    End Sub
    Partial Private Sub OnDisableLinkChanged()
    End Sub
    Partial Private Sub OnTitleChanging(value As String)
    End Sub
    Partial Private Sub OnTitleChanged()
    End Sub
    Partial Private Sub OnDescriptionChanging(value As String)
    End Sub
    Partial Private Sub OnDescriptionChanged()
    End Sub
    Partial Private Sub OnKeyWordsChanging(value As String)
    End Sub
    Partial Private Sub OnKeyWordsChanged()
    End Sub
    Partial Private Sub OnIsDeletedChanging(value As Boolean)
    End Sub
    Partial Private Sub OnIsDeletedChanged()
    End Sub
    Partial Private Sub OnUrlChanging(value As String)
    End Sub
    Partial Private Sub OnUrlChanged()
    End Sub
    Partial Private Sub OnSkinSrcChanging(value As String)
    End Sub
    Partial Private Sub OnSkinSrcChanged()
    End Sub
    Partial Private Sub OnContainerSrcChanging(value As String)
    End Sub
    Partial Private Sub OnContainerSrcChanged()
    End Sub
    Partial Private Sub OnStartDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnStartDateChanged()
    End Sub
    Partial Private Sub OnEndDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnEndDateChanged()
    End Sub
    Partial Private Sub OnRefreshIntervalChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnRefreshIntervalChanged()
    End Sub
    Partial Private Sub OnPageHeadTextChanging(value As String)
    End Sub
    Partial Private Sub OnPageHeadTextChanged()
    End Sub
    Partial Private Sub OnIsSecureChanging(value As Boolean)
    End Sub
    Partial Private Sub OnIsSecureChanged()
    End Sub
    Partial Private Sub OnPermanentRedirectChanging(value As Boolean)
    End Sub
    Partial Private Sub OnPermanentRedirectChanged()
    End Sub
    Partial Private Sub OnSiteMapPriorityChanging(value As Double)
    End Sub
    Partial Private Sub OnSiteMapPriorityChanged()
    End Sub
    Partial Private Sub OnCreatedByUserIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCreatedByUserIDChanged()
    End Sub
    Partial Private Sub OnCreatedOnDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCreatedOnDateChanged()
    End Sub
    Partial Private Sub OnLastModifiedByUserIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnLastModifiedByUserIDChanged()
    End Sub
    Partial Private Sub OnLastModifiedOnDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnLastModifiedOnDateChanged()
    End Sub
    Partial Private Sub OnIconFileLargeChanging(value As String)
    End Sub
    Partial Private Sub OnIconFileLargeChanged()
    End Sub
    Partial Private Sub OnCultureCodeChanging(value As String)
    End Sub
    Partial Private Sub OnCultureCodeChanged()
    End Sub
    Partial Private Sub OnContentItemIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnContentItemIDChanged()
    End Sub
    Partial Private Sub OnUniqueIdChanging(value As System.Guid)
    End Sub
    Partial Private Sub OnUniqueIdChanged()
    End Sub
    Partial Private Sub OnVersionGuidChanging(value As System.Guid)
    End Sub
    Partial Private Sub OnVersionGuidChanged()
    End Sub
    Partial Private Sub OnDefaultLanguageGuidChanging(value As System.Nullable(Of System.Guid))
    End Sub
    Partial Private Sub OnDefaultLanguageGuidChanged()
    End Sub
    Partial Private Sub OnLocalizedVersionGuidChanging(value As System.Guid)
    End Sub
    Partial Private Sub OnLocalizedVersionGuidChanged()
    End Sub
    Partial Private Sub OnLevelChanging(value As Integer)
    End Sub
    Partial Private Sub OnLevelChanged()
    End Sub
    Partial Private Sub OnTabPathChanging(value As String)
    End Sub
    Partial Private Sub OnTabPathChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._TabModules = New EntitySet(Of TabModule)(AddressOf Me.attach_TabModules, AddressOf Me.detach_TabModules)
		Me._Tabs = New EntitySet(Of Tab)(AddressOf Me.attach_Tabs, AddressOf Me.detach_Tabs)
		Me._Tab = CType(Nothing, EntityRef(Of Tab))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TabID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property TabID() As Integer
		Get
			Return Me._TabID
		End Get
		Set
			If ((Me._TabID = value)  _
						= false) Then
				Me.OnTabIDChanging(value)
				Me.SendPropertyChanging
				Me._TabID = value
				Me.SendPropertyChanged("TabID")
				Me.OnTabIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TabOrder", DbType:="Int NOT NULL")>  _
	Public Property TabOrder() As Integer
		Get
			Return Me._TabOrder
		End Get
		Set
			If ((Me._TabOrder = value)  _
						= false) Then
				Me.OnTabOrderChanging(value)
				Me.SendPropertyChanging
				Me._TabOrder = value
				Me.SendPropertyChanged("TabOrder")
				Me.OnTabOrderChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PortalID", DbType:="Int")>  _
	Public Property PortalID() As System.Nullable(Of Integer)
		Get
			Return Me._PortalID
		End Get
		Set
			If (Me._PortalID.Equals(value) = false) Then
				Me.OnPortalIDChanging(value)
				Me.SendPropertyChanging
				Me._PortalID = value
				Me.SendPropertyChanged("PortalID")
				Me.OnPortalIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TabName", DbType:="NVarChar(200) NOT NULL", CanBeNull:=false)>  _
	Public Property TabName() As String
		Get
			Return Me._TabName
		End Get
		Set
			If (String.Equals(Me._TabName, value) = false) Then
				Me.OnTabNameChanging(value)
				Me.SendPropertyChanging
				Me._TabName = value
				Me.SendPropertyChanged("TabName")
				Me.OnTabNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsVisible", DbType:="Bit NOT NULL")>  _
	Public Property IsVisible() As Boolean
		Get
			Return Me._IsVisible
		End Get
		Set
			If ((Me._IsVisible = value)  _
						= false) Then
				Me.OnIsVisibleChanging(value)
				Me.SendPropertyChanging
				Me._IsVisible = value
				Me.SendPropertyChanged("IsVisible")
				Me.OnIsVisibleChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ParentId", DbType:="Int")>  _
	Public Property ParentId() As System.Nullable(Of Integer)
		Get
			Return Me._ParentId
		End Get
		Set
			If (Me._ParentId.Equals(value) = false) Then
				If Me._Tab.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnParentIdChanging(value)
				Me.SendPropertyChanging
				Me._ParentId = value
				Me.SendPropertyChanged("ParentId")
				Me.OnParentIdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IconFile", DbType:="NVarChar(100)")>  _
	Public Property IconFile() As String
		Get
			Return Me._IconFile
		End Get
		Set
			If (String.Equals(Me._IconFile, value) = false) Then
				Me.OnIconFileChanging(value)
				Me.SendPropertyChanging
				Me._IconFile = value
				Me.SendPropertyChanged("IconFile")
				Me.OnIconFileChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DisableLink", DbType:="Bit NOT NULL")>  _
	Public Property DisableLink() As Boolean
		Get
			Return Me._DisableLink
		End Get
		Set
			If ((Me._DisableLink = value)  _
						= false) Then
				Me.OnDisableLinkChanging(value)
				Me.SendPropertyChanging
				Me._DisableLink = value
				Me.SendPropertyChanged("DisableLink")
				Me.OnDisableLinkChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Title", DbType:="NVarChar(200)")>  _
	Public Property Title() As String
		Get
			Return Me._Title
		End Get
		Set
			If (String.Equals(Me._Title, value) = false) Then
				Me.OnTitleChanging(value)
				Me.SendPropertyChanging
				Me._Title = value
				Me.SendPropertyChanged("Title")
				Me.OnTitleChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Description", DbType:="NVarChar(500)")>  _
	Public Property Description() As String
		Get
			Return Me._Description
		End Get
		Set
			If (String.Equals(Me._Description, value) = false) Then
				Me.OnDescriptionChanging(value)
				Me.SendPropertyChanging
				Me._Description = value
				Me.SendPropertyChanged("Description")
				Me.OnDescriptionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_KeyWords", DbType:="NVarChar(500)")>  _
	Public Property KeyWords() As String
		Get
			Return Me._KeyWords
		End Get
		Set
			If (String.Equals(Me._KeyWords, value) = false) Then
				Me.OnKeyWordsChanging(value)
				Me.SendPropertyChanging
				Me._KeyWords = value
				Me.SendPropertyChanged("KeyWords")
				Me.OnKeyWordsChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsDeleted", DbType:="Bit NOT NULL")>  _
	Public Property IsDeleted() As Boolean
		Get
			Return Me._IsDeleted
		End Get
		Set
			If ((Me._IsDeleted = value)  _
						= false) Then
				Me.OnIsDeletedChanging(value)
				Me.SendPropertyChanging
				Me._IsDeleted = value
				Me.SendPropertyChanged("IsDeleted")
				Me.OnIsDeletedChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Url", DbType:="NVarChar(255)")>  _
	Public Property Url() As String
		Get
			Return Me._Url
		End Get
		Set
			If (String.Equals(Me._Url, value) = false) Then
				Me.OnUrlChanging(value)
				Me.SendPropertyChanging
				Me._Url = value
				Me.SendPropertyChanged("Url")
				Me.OnUrlChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SkinSrc", DbType:="NVarChar(200)")>  _
	Public Property SkinSrc() As String
		Get
			Return Me._SkinSrc
		End Get
		Set
			If (String.Equals(Me._SkinSrc, value) = false) Then
				Me.OnSkinSrcChanging(value)
				Me.SendPropertyChanging
				Me._SkinSrc = value
				Me.SendPropertyChanged("SkinSrc")
				Me.OnSkinSrcChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ContainerSrc", DbType:="NVarChar(200)")>  _
	Public Property ContainerSrc() As String
		Get
			Return Me._ContainerSrc
		End Get
		Set
			If (String.Equals(Me._ContainerSrc, value) = false) Then
				Me.OnContainerSrcChanging(value)
				Me.SendPropertyChanging
				Me._ContainerSrc = value
				Me.SendPropertyChanged("ContainerSrc")
				Me.OnContainerSrcChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_StartDate", DbType:="DateTime")>  _
	Public Property StartDate() As System.Nullable(Of Date)
		Get
			Return Me._StartDate
		End Get
		Set
			If (Me._StartDate.Equals(value) = false) Then
				Me.OnStartDateChanging(value)
				Me.SendPropertyChanging
				Me._StartDate = value
				Me.SendPropertyChanged("StartDate")
				Me.OnStartDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EndDate", DbType:="DateTime")>  _
	Public Property EndDate() As System.Nullable(Of Date)
		Get
			Return Me._EndDate
		End Get
		Set
			If (Me._EndDate.Equals(value) = false) Then
				Me.OnEndDateChanging(value)
				Me.SendPropertyChanging
				Me._EndDate = value
				Me.SendPropertyChanged("EndDate")
				Me.OnEndDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RefreshInterval", DbType:="Int")>  _
	Public Property RefreshInterval() As System.Nullable(Of Integer)
		Get
			Return Me._RefreshInterval
		End Get
		Set
			If (Me._RefreshInterval.Equals(value) = false) Then
				Me.OnRefreshIntervalChanging(value)
				Me.SendPropertyChanging
				Me._RefreshInterval = value
				Me.SendPropertyChanged("RefreshInterval")
				Me.OnRefreshIntervalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PageHeadText", DbType:="NVarChar(MAX)")>  _
	Public Property PageHeadText() As String
		Get
			Return Me._PageHeadText
		End Get
		Set
			If (String.Equals(Me._PageHeadText, value) = false) Then
				Me.OnPageHeadTextChanging(value)
				Me.SendPropertyChanging
				Me._PageHeadText = value
				Me.SendPropertyChanged("PageHeadText")
				Me.OnPageHeadTextChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsSecure", DbType:="Bit NOT NULL")>  _
	Public Property IsSecure() As Boolean
		Get
			Return Me._IsSecure
		End Get
		Set
			If ((Me._IsSecure = value)  _
						= false) Then
				Me.OnIsSecureChanging(value)
				Me.SendPropertyChanging
				Me._IsSecure = value
				Me.SendPropertyChanged("IsSecure")
				Me.OnIsSecureChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PermanentRedirect", DbType:="Bit NOT NULL")>  _
	Public Property PermanentRedirect() As Boolean
		Get
			Return Me._PermanentRedirect
		End Get
		Set
			If ((Me._PermanentRedirect = value)  _
						= false) Then
				Me.OnPermanentRedirectChanging(value)
				Me.SendPropertyChanging
				Me._PermanentRedirect = value
				Me.SendPropertyChanged("PermanentRedirect")
				Me.OnPermanentRedirectChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SiteMapPriority", DbType:="Float NOT NULL")>  _
	Public Property SiteMapPriority() As Double
		Get
			Return Me._SiteMapPriority
		End Get
		Set
			If ((Me._SiteMapPriority = value)  _
						= false) Then
				Me.OnSiteMapPriorityChanging(value)
				Me.SendPropertyChanging
				Me._SiteMapPriority = value
				Me.SendPropertyChanged("SiteMapPriority")
				Me.OnSiteMapPriorityChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CreatedByUserID", DbType:="Int")>  _
	Public Property CreatedByUserID() As System.Nullable(Of Integer)
		Get
			Return Me._CreatedByUserID
		End Get
		Set
			If (Me._CreatedByUserID.Equals(value) = false) Then
				Me.OnCreatedByUserIDChanging(value)
				Me.SendPropertyChanging
				Me._CreatedByUserID = value
				Me.SendPropertyChanged("CreatedByUserID")
				Me.OnCreatedByUserIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CreatedOnDate", DbType:="DateTime")>  _
	Public Property CreatedOnDate() As System.Nullable(Of Date)
		Get
			Return Me._CreatedOnDate
		End Get
		Set
			If (Me._CreatedOnDate.Equals(value) = false) Then
				Me.OnCreatedOnDateChanging(value)
				Me.SendPropertyChanging
				Me._CreatedOnDate = value
				Me.SendPropertyChanged("CreatedOnDate")
				Me.OnCreatedOnDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LastModifiedByUserID", DbType:="Int")>  _
	Public Property LastModifiedByUserID() As System.Nullable(Of Integer)
		Get
			Return Me._LastModifiedByUserID
		End Get
		Set
			If (Me._LastModifiedByUserID.Equals(value) = false) Then
				Me.OnLastModifiedByUserIDChanging(value)
				Me.SendPropertyChanging
				Me._LastModifiedByUserID = value
				Me.SendPropertyChanged("LastModifiedByUserID")
				Me.OnLastModifiedByUserIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LastModifiedOnDate", DbType:="DateTime")>  _
	Public Property LastModifiedOnDate() As System.Nullable(Of Date)
		Get
			Return Me._LastModifiedOnDate
		End Get
		Set
			If (Me._LastModifiedOnDate.Equals(value) = false) Then
				Me.OnLastModifiedOnDateChanging(value)
				Me.SendPropertyChanging
				Me._LastModifiedOnDate = value
				Me.SendPropertyChanged("LastModifiedOnDate")
				Me.OnLastModifiedOnDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IconFileLarge", DbType:="NVarChar(100)")>  _
	Public Property IconFileLarge() As String
		Get
			Return Me._IconFileLarge
		End Get
		Set
			If (String.Equals(Me._IconFileLarge, value) = false) Then
				Me.OnIconFileLargeChanging(value)
				Me.SendPropertyChanging
				Me._IconFileLarge = value
				Me.SendPropertyChanged("IconFileLarge")
				Me.OnIconFileLargeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CultureCode", DbType:="NVarChar(10)")>  _
	Public Property CultureCode() As String
		Get
			Return Me._CultureCode
		End Get
		Set
			If (String.Equals(Me._CultureCode, value) = false) Then
				Me.OnCultureCodeChanging(value)
				Me.SendPropertyChanging
				Me._CultureCode = value
				Me.SendPropertyChanged("CultureCode")
				Me.OnCultureCodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ContentItemID", DbType:="Int")>  _
	Public Property ContentItemID() As System.Nullable(Of Integer)
		Get
			Return Me._ContentItemID
		End Get
		Set
			If (Me._ContentItemID.Equals(value) = false) Then
				Me.OnContentItemIDChanging(value)
				Me.SendPropertyChanging
				Me._ContentItemID = value
				Me.SendPropertyChanged("ContentItemID")
				Me.OnContentItemIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UniqueId", DbType:="UniqueIdentifier NOT NULL")>  _
	Public Property UniqueId() As System.Guid
		Get
			Return Me._UniqueId
		End Get
		Set
			If ((Me._UniqueId = value)  _
						= false) Then
				Me.OnUniqueIdChanging(value)
				Me.SendPropertyChanging
				Me._UniqueId = value
				Me.SendPropertyChanged("UniqueId")
				Me.OnUniqueIdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VersionGuid", DbType:="UniqueIdentifier NOT NULL")>  _
	Public Property VersionGuid() As System.Guid
		Get
			Return Me._VersionGuid
		End Get
		Set
			If ((Me._VersionGuid = value)  _
						= false) Then
				Me.OnVersionGuidChanging(value)
				Me.SendPropertyChanging
				Me._VersionGuid = value
				Me.SendPropertyChanged("VersionGuid")
				Me.OnVersionGuidChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DefaultLanguageGuid", DbType:="UniqueIdentifier")>  _
	Public Property DefaultLanguageGuid() As System.Nullable(Of System.Guid)
		Get
			Return Me._DefaultLanguageGuid
		End Get
		Set
			If (Me._DefaultLanguageGuid.Equals(value) = false) Then
				Me.OnDefaultLanguageGuidChanging(value)
				Me.SendPropertyChanging
				Me._DefaultLanguageGuid = value
				Me.SendPropertyChanged("DefaultLanguageGuid")
				Me.OnDefaultLanguageGuidChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LocalizedVersionGuid", DbType:="UniqueIdentifier NOT NULL")>  _
	Public Property LocalizedVersionGuid() As System.Guid
		Get
			Return Me._LocalizedVersionGuid
		End Get
		Set
			If ((Me._LocalizedVersionGuid = value)  _
						= false) Then
				Me.OnLocalizedVersionGuidChanging(value)
				Me.SendPropertyChanging
				Me._LocalizedVersionGuid = value
				Me.SendPropertyChanged("LocalizedVersionGuid")
				Me.OnLocalizedVersionGuidChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="[Level]", Storage:="_Level", DbType:="Int NOT NULL")>  _
	Public Property Level() As Integer
		Get
			Return Me._Level
		End Get
		Set
			If ((Me._Level = value)  _
						= false) Then
				Me.OnLevelChanging(value)
				Me.SendPropertyChanging
				Me._Level = value
				Me.SendPropertyChanged("Level")
				Me.OnLevelChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TabPath", DbType:="NVarChar(255) NOT NULL", CanBeNull:=false)>  _
	Public Property TabPath() As String
		Get
			Return Me._TabPath
		End Get
		Set
			If (String.Equals(Me._TabPath, value) = false) Then
				Me.OnTabPathChanging(value)
				Me.SendPropertyChanging
				Me._TabPath = value
				Me.SendPropertyChanged("TabPath")
				Me.OnTabPathChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Tab_TabModule", Storage:="_TabModules", ThisKey:="TabID", OtherKey:="TabID")>  _
	Public Property TabModules() As EntitySet(Of TabModule)
		Get
			Return Me._TabModules
		End Get
		Set
			Me._TabModules.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Tab_Tab", Storage:="_Tabs", ThisKey:="TabID", OtherKey:="ParentId")>  _
	Public Property Tabs() As EntitySet(Of Tab)
		Get
			Return Me._Tabs
		End Get
		Set
			Me._Tabs.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Tab_Tab", Storage:="_Tab", ThisKey:="ParentId", OtherKey:="TabID", IsForeignKey:=true)>  _
	Public Property Tab() As Tab
		Get
			Return Me._Tab.Entity
		End Get
		Set
			Dim previousValue As Tab = Me._Tab.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._Tab.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._Tab.Entity = Nothing
					previousValue.Tabs.Remove(Me)
				End If
				Me._Tab.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.Tabs.Add(Me)
					Me._ParentId = value.TabID
				Else
					Me._ParentId = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("Tab")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_TabModules(ByVal entity As TabModule)
		Me.SendPropertyChanging
		entity.Tab = Me
	End Sub
	
	Private Sub detach_TabModules(ByVal entity As TabModule)
		Me.SendPropertyChanging
		entity.Tab = Nothing
	End Sub
	
	Private Sub attach_Tabs(ByVal entity As Tab)
		Me.SendPropertyChanging
		entity.Tab = Me
	End Sub
	
	Private Sub detach_Tabs(ByVal entity As Tab)
		Me.SendPropertyChanging
		entity.Tab = Nothing
	End Sub
End Class
